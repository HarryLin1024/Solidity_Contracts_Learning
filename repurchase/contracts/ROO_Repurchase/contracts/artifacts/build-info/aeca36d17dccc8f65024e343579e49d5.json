{
	"id": "aeca36d17dccc8f65024e343579e49d5",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.12",
	"solcLongVersion": "0.6.12+commit.27d51765",
	"input": {
		"language": "Solidity",
		"sources": {
			"ROO_Repurchase/contracts/ROO_Repurchase.sol": {
				"content": "pragma solidity ^0.6.12;\n\nimport \"./library/Ownable.sol\";\nimport \"./library/SafeMath.sol\";\nimport \"./library/SafeERC20.sol\";\nimport \"./library/EnumerableSet.sol\";\nimport \"./interface/IBxhPair.sol\";\n\ncontract Repurchase is Ownable {\n    using SafeMath for uint256;\n    using SafeERC20 for IERC20;\n\n    using EnumerableSet for EnumerableSet.AddressSet;\n    EnumerableSet.AddressSet private _caller;\n\n    /*mdex*/\n    // address public constant USDT = 0xa71EdC38d189767582C38A3145b5873052c3e47a;\n    // address public constant MDX = 0x25D2e80cB6B86881Fd7e07dd263Fb79f4AbE033c;\n    // address public constant MDX_USDT = 0x615E6285c5944540fd8bd921c9c8c56739Fd1E13;\n    // address public constant destroyAddress = 0xF9852C6588b70ad3c26daE47120f174527e03a25; // BlackHole合约地址 \n    \n    /*okex testnet*/\n    // address public constant USDT = 0xe579156f9dEcc4134B5E3A30a24Ac46BB8B01281;\n    // address public constant CHE = 0xD7A07aB45D2832D77A9Bde5D1f437A60292c5d7F;\n    // address public constant CHE_USDT = 0x3E94409fe0B6fEaacaF145B7859A76a4b33d793F;\n    // address public constant destroyAddress = 0x000000000000000000000000000000000000dEaD; // 回购地址 \n    // address public emergencyAddress; // 账户地址 \n    // uint256 public amountIn; // 5000000000000000000000 根据代币的精度决定小数位 \n    \n    /*heco mainnet*/\n    address public constant USDT = 0xa71EdC38d189767582C38A3145b5873052c3e47a;\n    address public constant ROO = 0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771;\n    address public constant ROO_USDT = 0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2;\n    address public constant destroyAddress = 0x000000000000000000000000000000000000dEaD; // 回购地址 \n    address public emergencyAddress; // 账户地址 \n    uint256 public amountIn; // 5000000000000000000000 根据代币的精度决定小数位 \n\n    constructor (address _emergencyAddress) public {\n        require(_emergencyAddress != address(0), \"Is zero address\");\n        emergencyAddress = _emergencyAddress;\n    }\n\n    function setAmountIn(uint256 _newIn) public onlyOwner {\n        amountIn = _newIn;\n    }\n\n    function setEmergencyAddress(address _newAddress) public onlyOwner {\n        require(_newAddress != address(0), \"Is zero address\");\n        emergencyAddress = _newAddress;\n    }\n\n    function addCaller(address _newCaller) public onlyOwner returns (bool) {\n        require(_newCaller != address(0), \"NewCaller is the zero address\");\n        return EnumerableSet.add(_caller, _newCaller);\n    }\n\n    function delCaller(address _delCaller) public onlyOwner returns (bool) {\n        require(_delCaller != address(0), \"DelCaller is the zero address\");\n        return EnumerableSet.remove(_caller, _delCaller);\n    }\n\n    function getCallerLength() public view returns (uint256) {\n        return EnumerableSet.length(_caller);\n    }\n\n    function isCaller(address _call) public view returns (bool) {\n        return EnumerableSet.contains(_caller, _call);\n    }\n\n    function getCaller(uint256 _index) public view returns (address){\n        require(_index <= getCallerLength() - 1, \"index out of bounds\");\n        return EnumerableSet.at(_caller, _index);\n    }\n\n    function swap(uint256 _amount) external onlyCaller returns (uint256 amountOut){\n        require(_amount > 0, \"Amount must be greater than zero\");\n        amountIn = _amount;\n        \n        require(IERC20(USDT).balanceOf(address(this)) >= amountIn, \"Insufficient contract balance\");\n        (uint256 reserve0, uint256 reserve1,) = IBxhPair(ROO_USDT).getReserves();\n        uint256 amountInWithFee = amountIn.mul(997);\n        amountOut = amountIn.mul(997).mul(reserve0) / reserve1.mul(1000).add(amountInWithFee);\n        IERC20(USDT).safeTransfer(ROO_USDT, amountIn);\n        IBxhPair(ROO_USDT).swap(amountOut, 0, destroyAddress, new bytes(0));\n    }\n    \n    modifier onlyCaller() {\n        require(isCaller(msg.sender), \"Not the caller\");\n        _;\n    }\n\n    function emergencyWithdraw(address _token) public onlyOwner {\n        require(IERC20(_token).balanceOf(address(this)) > 0, \"Insufficient contract balance\");\n        IERC20(_token).transfer(emergencyAddress, IERC20(_token).balanceOf(address(this)));\n    }\n} "
			},
			"ROO_Repurchase/contracts/interface/IBxhPair.sol": {
				"content": "pragma solidity ^0.6.12;\n\n\ninterface IBxhPair {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n\n    function symbol() external pure returns (string memory);\n\n    function decimals() external pure returns (uint8);\n\n    function totalSupply() external view returns (uint);\n\n    function balanceOf(address owner) external view returns (uint);\n\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n\n    function transfer(address to, uint value) external returns (bool);\n\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n\n    event Mint(address indexed sender, uint amount0, uint amount1);\n    event Burn(address indexed sender, uint amount0, uint amount1, address indexed to);\n    event Swap(\n        address indexed sender,\n        uint amount0In,\n        uint amount1In,\n        uint amount0Out,\n        uint amount1Out,\n        address indexed to\n    );\n    event Sync(uint112 reserve0, uint112 reserve1);\n\n    function MINIMUM_LIQUIDITY() external pure returns (uint);\n\n    function factory() external view returns (address);\n\n    function token0() external view returns (address);\n\n    function token1() external view returns (address);\n\n    function getReserves() external view returns (uint112 reserve0, uint112 reserve1, uint32 blockTimestampLast);\n\n    function price0CumulativeLast() external view returns (uint);\n\n    function price1CumulativeLast() external view returns (uint);\n\n    function kLast() external view returns (uint);\n\n    function mint(address to) external returns (uint liquidity);\n\n    function burn(address to) external returns (uint amount0, uint amount1);\n\n    function swap(uint amount0Out, uint amount1Out, address to, bytes calldata data) external;\n\n    function skim(address to) external;\n\n    function sync() external;\n\n    function price(address token, uint256 baseDecimal) external view returns (uint256);\n\n    function initialize(address, address) external;\n}"
			},
			"ROO_Repurchase/contracts/library/EnumerableSet.sol": {
				"content": "library EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping (bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) { // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            // When the value to delete is the last one, the swap operation is unnecessary. However, since this occurs\n            // so rarely, we still do the swap anyway to avoid the gas cost of adding an 'if' statement.\n\n            bytes32 lastvalue = set._values[lastIndex];\n\n            // Move the last value to the index where the value to delete is\n            set._values[toDeleteIndex] = lastvalue;\n            // Update the index for the moved value\n            set._indexes[lastvalue] = toDeleteIndex + 1; // All indexes are 1-based\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        require(set._values.length > index, \"EnumerableSet: index out of bounds\");\n        return set._values[index];\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(value)));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint256(_at(set._inner, index)));\n    }\n\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n   /**\n    * @dev Returns the value stored at position `index` in the set. O(1).\n    *\n    * Note that there are no guarantees on the ordering of values inside the\n    * array, and it may change when more values are added or removed.\n    *\n    * Requirements:\n    *\n    * - `index` must be strictly less than {length}.\n    */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n}"
			},
			"ROO_Repurchase/contracts/library/SafeERC20.sol": {
				"content": "pragma solidity ^0.6.12;\n\nimport \"./SafeMath.sol\";\nimport \"./Address.sol\";\nimport \"../interface/IERC20.sol\";\n\nlibrary SafeERC20 {\n    using SafeMath for uint256;\n    using Address for address;\n\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value));\n    }\n\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeWithSelector(token.transferFrom.selector, from, to, value));\n    }\n\n    /**\n     * @dev Deprecated. This function has issues similar to the ones found in\n     * {IERC20-approve}, and its usage is discouraged.\n     *\n     * Whenever possible, use {safeIncreaseAllowance} and\n     * {safeDecreaseAllowance} instead.\n     */\n    function safeApprove(IERC20 token, address spender, uint256 value) internal {\n        // safeApprove should only be called when setting an initial allowance,\n        // or when resetting it to zero. To increase and decrease it, use\n        // 'safeIncreaseAllowance' and 'safeDecreaseAllowance'\n        // solhint-disable-next-line max-line-length\n        require((value == 0) || (token.allowance(address(this), spender) == 0),\n            \"SafeERC20: approve from non-zero to non-zero allowance\"\n        );\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, value));\n    }\n\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).add(value);\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 newAllowance = token.allowance(address(this), spender).sub(value, \"SafeERC20: decreased allowance below zero\");\n        _callOptionalReturn(token, abi.encodeWithSelector(token.approve.selector, spender, newAllowance));\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address.functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\");\n        if (returndata.length > 0) { // Return data is optional\n            // solhint-disable-next-line max-line-length\n            require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\");\n        }\n    }\n}"
			},
			"ROO_Repurchase/contracts/library/SafeMath.sol": {
				"content": "pragma solidity ^0.6.12;\n\nlibrary SafeMath {\n    /**\n     * @dev Returns the addition of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `+` operator.\n     *\n     * Requirements:\n     *\n     * - Addition cannot overflow.\n     */\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\n        uint256 c = a + b;\n        require(c >= a, \"SafeMath: addition overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\n        return sub(a, b, \"SafeMath: subtraction overflow\");\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n     * overflow (when the result is negative).\n     *\n     * Counterpart to Solidity's `-` operator.\n     *\n     * Requirements:\n     *\n     * - Subtraction cannot overflow.\n     */\n    function sub(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b <= a, errorMessage);\n        uint256 c = a - b;\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, reverting on\n     * overflow.\n     *\n     * Counterpart to Solidity's `*` operator.\n     *\n     * Requirements:\n     *\n     * - Multiplication cannot overflow.\n     */\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n        // benefit is lost if 'b' is also tested.\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n        if (a == 0) {\n            return 0;\n        }\n\n        uint256 c = a * b;\n        require(c / a == b, \"SafeMath: multiplication overflow\");\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\n        return div(a, b, \"SafeMath: division by zero\");\n    }\n\n    /**\n     * @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n     * division by zero. The result is rounded towards zero.\n     *\n     * Counterpart to Solidity's `/` operator. Note: this function uses a\n     * `revert` opcode (which leaves remaining gas untouched) while Solidity\n     * uses an invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function div(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b > 0, errorMessage);\n        uint256 c = a / b;\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\n\n        return c;\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\n        return mod(a, b, \"SafeMath: modulo by zero\");\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n     * Reverts with custom message when dividing by zero.\n     *\n     * Counterpart to Solidity's `%` operator. This function uses a `revert`\n     * opcode (which leaves remaining gas untouched) while Solidity uses an\n     * invalid opcode to revert (consuming all remaining gas).\n     *\n     * Requirements:\n     *\n     * - The divisor cannot be zero.\n     */\n    function mod(uint256 a, uint256 b, string memory errorMessage) internal pure returns (uint256) {\n        require(b != 0, errorMessage);\n        return a % b;\n    }\n}"
			},
			"ROO_Repurchase/contracts/library/Ownable.sol": {
				"content": "pragma solidity ^0.6.12;\n\nimport \"./Context.sol\";\n\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor () internal {\n        address msgSender = _msgSender();\n        _owner = msgSender;\n        emit OwnershipTransferred(address(0), msgSender);\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(_owner == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        emit OwnershipTransferred(_owner, address(0));\n        _owner = address(0);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        emit OwnershipTransferred(_owner, newOwner);\n        _owner = newOwner;\n    }\n}"
			},
			"ROO_Repurchase/contracts/interface/IERC20.sol": {
				"content": "pragma solidity ^0.6.12;\n\n\n\ninterface IERC20 {\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `recipient`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `sender` to `recipient` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n}"
			},
			"ROO_Repurchase/contracts/library/Address.sol": {
				"content": "pragma solidity ^0.6.12;\n\nlibrary Address {\n    /**\n     * @dev Returns true if `account` is a contract.\n     *\n     * [IMPORTANT]\n     * ====\n     * It is unsafe to assume that an address for which this function returns\n     * false is an externally-owned account (EOA) and not a contract.\n     *\n     * Among others, `isContract` will return false for the following\n     * types of addresses:\n     *\n     *  - an externally-owned account\n     *  - a contract in construction\n     *  - an address where a contract will be created\n     *  - an address where a contract lived, but was destroyed\n     * ====\n     */\n    function isContract(address account) internal view returns (bool) {\n        // This method relies on extcodesize, which returns 0 for contracts in\n        // construction, since the code is only stored at the end of the\n        // constructor execution.\n\n        uint256 size;\n        // solhint-disable-next-line no-inline-assembly\n        assembly { size := extcodesize(account) }\n        return size > 0;\n    }\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        require(address(this).balance >= amount, \"Address: insufficient balance\");\n\n        // solhint-disable-next-line avoid-low-level-calls, avoid-call-value\n        (bool success, ) = recipient.call{ value: amount }(\"\");\n        require(success, \"Address: unable to send value, recipient may have reverted\");\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain`call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason, it is bubbled up by this\n     * function (like regular Solidity function calls).\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n      return functionCall(target, data, \"Address: low-level call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n     * `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, value, \"Address: low-level call with value failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n     * with `errorMessage` as a fallback revert reason when `target` reverts.\n     *\n     * _Available since v3.1._\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {\n        require(address(this).balance >= value, \"Address: insufficient balance for call\");\n        require(isContract(target), \"Address: call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.call{ value: value }(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        return functionStaticCall(target, data, \"Address: low-level static call failed\");\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n     * but performing a static call.\n     *\n     * _Available since v3.3._\n     */\n    function functionStaticCall(address target, bytes memory data, string memory errorMessage) internal view returns (bytes memory) {\n        require(isContract(target), \"Address: static call to non-contract\");\n\n        // solhint-disable-next-line avoid-low-level-calls\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return _verifyCallResult(success, returndata, errorMessage);\n    }\n\n    function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {\n        if (success) {\n            return returndata;\n        } else {\n            // Look for revert reason and bubble it up if present\n            if (returndata.length > 0) {\n                // The easiest way to bubble the revert reason is using memory via assembly\n\n                // solhint-disable-next-line no-inline-assembly\n                assembly {\n                    let returndata_size := mload(returndata)\n                    revert(add(32, returndata), returndata_size)\n                }\n            } else {\n                revert(errorMessage);\n            }\n        }\n    }\n}"
			},
			"ROO_Repurchase/contracts/library/Context.sol": {
				"content": "pragma solidity ^0.6.12;\n\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address payable) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes memory) {\n        this; // silence state mutability warning without generating bytecode - see https://github.com/ethereum/solidity/issues/2691\n        return msg.data;\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"ROO_Repurchase/contracts/ROO_Repurchase.sol": {
				"Repurchase": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_emergencyAddress",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ROO",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "ROO_USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "USDT",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newCaller",
									"type": "address"
								}
							],
							"name": "addCaller",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "amountIn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_delCaller",
									"type": "address"
								}
							],
							"name": "delCaller",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "destroyAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "emergencyAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "emergencyWithdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_index",
									"type": "uint256"
								}
							],
							"name": "getCaller",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getCallerLength",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_call",
									"type": "address"
								}
							],
							"name": "isCaller",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_newIn",
									"type": "uint256"
								}
							],
							"name": "setAmountIn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newAddress",
									"type": "address"
								}
							],
							"name": "setEmergencyAddress",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "swap",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amountOut",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":199:4188  contract Repurchase is Ownable {... */\n  mstore(0x40, 0x80)\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1839:2008  constructor (address _emergencyAddress) public {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  0x20\n  dup2\n  lt\n  iszero\n  tag_2\n  jumpi\n  0x00\n  dup1\n  revert\ntag_2:\n  pop\n  mload\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":343:360  address msgSender */\n  0x00\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":363:375  _msgSender() */\n  tag_6\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":363:373  _msgSender */\n  tag_7\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":363:375  _msgSender() */\n  jump\t// in\ntag_6:\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":385:391  _owner */\n  0x00\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":385:403  _owner = msgSender */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  dup4\n  and\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":418:461  OwnershipTransferred(address(0), msgSender) */\n  mload(0x40)\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":385:403  _owner = msgSender */\n  swap3\n  swap4\n  pop\n  swap2\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":418:461  OwnershipTransferred(address(0), msgSender) */\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  swap1\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":385:391  _owner */\n  dup3\n  swap1\n    /* \"ROO_Repurchase/contracts/library/Ownable.sol\":418:461  OwnershipTransferred(address(0), msgSender) */\n  log3\n  pop\n  sub(shl(0xa0, 0x01), 0x01)\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1904:1935  _emergencyAddress != address(0) */\n  dup2\n  and\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1896:1955  require(_emergencyAddress != address(0), \"Is zero address\") */\n  tag_9\n  jumpi\n  0x40\n  dup1\n  mload\n  shl(0xe5, 0x461bcd)\n  dup2\n  mstore\n  0x20\n  0x04\n  dup3\n  add\n  mstore\n  0x0f\n  0x24\n  dup3\n  add\n  mstore\n  shl(0x88, 0x4973207a65726f2061646472657373)\n  0x44\n  dup3\n  add\n  mstore\n  swap1\n  mload\n  swap1\n  dup2\n  swap1\n  sub\n  0x64\n  add\n  swap1\n  revert\ntag_9:\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1965:1981  emergencyAddress */\n  0x03\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1965:2001  emergencyAddress = _emergencyAddress */\n  dup1\n  sload\n  not(sub(shl(0xa0, 0x01), 0x01))\n  and\n  sub(shl(0xa0, 0x01), 0x01)\n  swap3\n  swap1\n  swap3\n  and\n  swap2\n  swap1\n  swap2\n  or\n  swap1\n  sstore\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":199:4188  contract Repurchase is Ownable {... */\n  jump(tag_10)\n    /* \"ROO_Repurchase/contracts/library/Context.sol\":58:162  function _msgSender() internal view virtual returns (address payable) {... */\ntag_7:\n    /* \"ROO_Repurchase/contracts/library/Context.sol\":145:155  msg.sender */\n  caller\n    /* \"ROO_Repurchase/contracts/library/Context.sol\":58:162  function _msgSender() internal view virtual returns (address payable) {... */\n  swap1\n  jump\t// out\n    /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":199:4188  contract Repurchase is Ownable {... */\ntag_10:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":199:4188  contract Repurchase is Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x7ac07dcc\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa8b0b3ed\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa8b0b3ed\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc54e44eb\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd12d9f15\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xfddf3f73\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x7ac07dcc\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x8c2f9410\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x94b918de\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x6717f5b0\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x6717f5b0\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x6bed55a6\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6ff1c9bc\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x747293fb\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x231a418c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2aa11ffb\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x42177a58\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x5793d0af\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2506:2718  function delCaller(address _delCaller) public onlyOwner returns (bool) {... */\n    tag_3:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_25\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_25:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2108:2285  function setEmergencyAddress(address _newAddress) public onlyOwner {... */\n    tag_4:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_28:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_29\n      jump\t// in\n    tag_27:\n      stop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2724:2834  function getCallerLength() public view returns (uint256) {... */\n    tag_5:\n      tag_30\n      tag_31\n      jump\t// in\n    tag_30:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1424:1496  address public constant ROO = 0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771 */\n    tag_6:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2014:2102  function setAmountIn(uint256 _newIn) public onlyOwner {... */\n    tag_7:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_35\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      pop\n      calldataload\n      tag_36\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1745:1768  uint256 public amountIn */\n    tag_8:\n      tag_30\n      tag_38\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3932:4186  function emergencyWithdraw(address _token) public onlyOwner {... */\n    tag_9:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_41\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1167:1312  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_27\n      tag_43\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2291:2500  function addCaller(address _newCaller) public onlyOwner returns (bool) {... */\n    tag_11:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_45\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_45:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_46\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2840:2962  function isCaller(address _call) public view returns (bool) {... */\n    tag_12:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_48\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_48:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_49\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1502:1579  address public constant ROO_USDT = 0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n    tag_13:\n      tag_32\n      tag_51\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":544:621  function owner() public view returns (address) {... */\n    tag_14:\n      tag_32\n      tag_53\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3168:3819  function swap(uint256 _amount) external onlyCaller returns (uint256 amountOut){... */\n    tag_15:\n      tag_30\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_55\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_55:\n      pop\n      calldataload\n      tag_56\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2968:3162  function getCaller(uint256 _index) public view returns (address){... */\n    tag_16:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      calldataload\n      tag_59\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1345:1418  address public constant USDT = 0xa71EdC38d189767582C38A3145b5873052c3e47a */\n    tag_17:\n      tag_32\n      tag_61\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1585:1668  address public constant destroyAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_18:\n      tag_32\n      tag_63\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1461:1701  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n      0x20\n      dup2\n      lt\n      iszero\n      tag_65\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_65:\n      pop\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_66\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1691:1722  address public emergencyAddress */\n    tag_20:\n      tag_32\n      tag_68\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2506:2718  function delCaller(address _delCaller) public onlyOwner returns (bool) {... */\n    tag_26:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2571:2575  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_70\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_70:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_72\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_72:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2595:2619  _delCaller != address(0) */\n      dup3\n      and\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2587:2653  require(_delCaller != address(0), \"DelCaller is the zero address\") */\n      tag_74\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x44656c43616c6c657220697320746865207a65726f2061646472657373000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_74:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2670:2711  EnumerableSet.remove(_caller, _delCaller) */\n      tag_75\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2691:2698  _caller */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2700:2710  _delCaller */\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2670:2690  EnumerableSet.remove */\n      tag_76\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2670:2711  EnumerableSet.remove(_caller, _delCaller) */\n      jump\t// in\n    tag_75:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2663:2711  return EnumerableSet.remove(_caller, _delCaller) */\n      swap3\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2506:2718  function delCaller(address _delCaller) public onlyOwner returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2108:2285  function setEmergencyAddress(address _newAddress) public onlyOwner {... */\n    tag_29:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_78\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_78:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_79\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_79:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2193:2218  _newAddress != address(0) */\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2185:2238  require(_newAddress != address(0), \"Is zero address\") */\n      tag_81\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0f\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x88, 0x4973207a65726f2061646472657373)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_81:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2248:2264  emergencyAddress */\n      0x03\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2248:2278  emergencyAddress = _newAddress */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2108:2285  function setEmergencyAddress(address _newAddress) public onlyOwner {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2724:2834  function getCallerLength() public view returns (uint256) {... */\n    tag_31:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2772:2779  uint256 */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2798:2827  EnumerableSet.length(_caller) */\n      tag_83\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2819:2826  _caller */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2798:2818  EnumerableSet.length */\n      tag_84\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2798:2827  EnumerableSet.length(_caller) */\n      jump\t// in\n    tag_83:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2791:2827  return EnumerableSet.length(_caller) */\n      swap1\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2724:2834  function getCallerLength() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1424:1496  address public constant ROO = 0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771 */\n    tag_33:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1454:1496  0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771 */\n      0xaddeb3a8fb46ddc3fee55085b6ad8dab4c4fc771\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1424:1496  address public constant ROO = 0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771 */\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2014:2102  function setAmountIn(uint256 _newIn) public onlyOwner {... */\n    tag_36:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_86\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_86:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_87\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_87:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2078:2086  amountIn */\n      0x04\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2078:2095  amountIn = _newIn */\n      sstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2014:2102  function setAmountIn(uint256 _newIn) public onlyOwner {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1745:1768  uint256 public amountIn */\n    tag_38:\n      sload(0x04)\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3932:4186  function emergencyWithdraw(address _token) public onlyOwner {... */\n    tag_41:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_90\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_90:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_91\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_91:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4052:4053  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4017:4023  _token */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4010:4034  IERC20(_token).balanceOf */\n      and\n      0x70a08231\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4043:4047  this */\n      address\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4010:4049  IERC20(_token).balanceOf(address(this)) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup3\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_93\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_93:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_95\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_95:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_96\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_96:\n      pop\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4010:4053  IERC20(_token).balanceOf(address(this)) > 0 */\n      gt\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4002:4087  require(IERC20(_token).balanceOf(address(this)) > 0, \"Insufficient contract balance\") */\n      tag_97\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_97:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4121:4137  emergencyAddress */\n      sload(0x03)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4178  IERC20(_token).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4172:4176  this */\n      address\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4178  IERC20(_token).balanceOf(address(this)) */\n      0x04\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4097:4120  IERC20(_token).transfer */\n      dup1\n      dup6\n      and\n      swap4\n      0xa9059cbb\n      swap4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4121:4137  emergencyAddress */\n      swap2\n      and\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4097:4120  IERC20(_token).transfer */\n      dup5\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4163  IERC20(_token).balanceOf */\n      0x70a08231\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4178  IERC20(_token).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup4\n      add\n      swap3\n      0x20\n      swap3\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4097:4120  IERC20(_token).transfer */\n      dup7\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4178  IERC20(_token).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_100\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_100:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_101\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_101:\n      pop\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4097:4179  IERC20(_token).transfer(emergencyAddress, IERC20(_token).balanceOf(address(this))) */\n      0x40\n      dup1\n      mload\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup7\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      0x04\n      dup5\n      add\n      mstore\n      0x24\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      mload\n      0x44\n      dup1\n      dup4\n      add\n      swap3\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4139:4178  IERC20(_token).balanceOf(address(this)) */\n      0x20\n      swap3\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":4097:4179  IERC20(_token).transfer(emergencyAddress, IERC20(_token).balanceOf(address(this))) */\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_104\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_104:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      pop\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3932:4186  function emergencyWithdraw(address _token) public onlyOwner {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1167:1312  function renounceOwnership() public virtual onlyOwner {... */\n    tag_43:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_107\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_107:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_108\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_108:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1273:1274  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1257:1263  _owner */\n      dup1\n      sload\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1236:1276  OwnershipTransferred(_owner, address(0)) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1257:1263  _owner */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1236:1276  OwnershipTransferred(_owner, address(0)) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap1\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1273:1274  0 */\n      dup4\n      swap1\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1236:1276  OwnershipTransferred(_owner, address(0)) */\n      log3\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1303:1304  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1286:1305  _owner = address(0) */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1167:1312  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2291:2500  function addCaller(address _newCaller) public onlyOwner returns (bool) {... */\n    tag_46:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2356:2360  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_111\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_112\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_112:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2380:2404  _newCaller != address(0) */\n      dup3\n      and\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2372:2438  require(_newCaller != address(0), \"NewCaller is the zero address\") */\n      tag_114\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x4e657743616c6c657220697320746865207a65726f2061646472657373000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_114:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2455:2493  EnumerableSet.add(_caller, _newCaller) */\n      tag_75\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2473:2480  _caller */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2482:2492  _newCaller */\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2455:2472  EnumerableSet.add */\n      tag_116\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2455:2493  EnumerableSet.add(_caller, _newCaller) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2840:2962  function isCaller(address _call) public view returns (bool) {... */\n    tag_49:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2894:2898  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2917:2955  EnumerableSet.contains(_caller, _call) */\n      tag_75\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2940:2947  _caller */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2949:2954  _call */\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2917:2939  EnumerableSet.contains */\n      tag_119\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2917:2955  EnumerableSet.contains(_caller, _call) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1502:1579  address public constant ROO_USDT = 0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n    tag_51:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1537:1579  0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n      0xc05bb03bb7bfeb243ef364f544c81dd9a07040a2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1502:1579  address public constant ROO_USDT = 0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":544:621  function owner() public view returns (address) {... */\n    tag_53:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":582:589  address */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":608:614  _owner */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":544:621  function owner() public view returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3168:3819  function swap(uint256 _amount) external onlyCaller returns (uint256 amountOut){... */\n    tag_56:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3228:3245  uint256 amountOut */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3869:3889  isCaller(msg.sender) */\n      tag_122\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3878:3888  msg.sender */\n      caller\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3869:3877  isCaller */\n      tag_49\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3869:3889  isCaller(msg.sender) */\n      jump\t// in\n    tag_122:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3861:3908  require(isCaller(msg.sender), \"Not the caller\") */\n      tag_123\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x0e\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x91, 0x2737ba103a34329031b0b63632b9)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_123:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3274:3275  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3264:3271  _amount */\n      dup3\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3264:3275  _amount > 0 */\n      gt\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3256:3312  require(_amount > 0, \"Amount must be greater than zero\") */\n      tag_125\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x416d6f756e74206d7573742062652067726561746572207468616e207a65726f\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_125:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3322:3330  amountIn */\n      0x04\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3322:3340  amountIn = _amount */\n      dup3\n      dup2\n      sstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3404  IERC20(USDT).balanceOf(address(this)) */\n      0x40\n      dup1\n      mload\n      shl(0xe0, 0x70a08231)\n      dup2\n      mstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3398:3402  this */\n      address\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3404  IERC20(USDT).balanceOf(address(this)) */\n      swap3\n      dup2\n      add\n      swap3\n      swap1\n      swap3\n      mstore\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3333:3340  _amount */\n      dup4\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1376:1418  0xa71EdC38d189767582C38A3145b5873052c3e47a */\n      0xa71edc38d189767582c38a3145b5873052c3e47a\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3389  IERC20(USDT).balanceOf */\n      0x70a08231\n      swap2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3404  IERC20(USDT).balanceOf(address(this)) */\n      0x24\n      dup1\n      dup3\n      add\n      swap3\n      0x20\n      swap3\n      swap1\n      swap2\n      swap1\n      dup3\n      swap1\n      sub\n      add\n      dup2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1376:1418  0xa71EdC38d189767582C38A3145b5873052c3e47a */\n      dup7\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3404  IERC20(USDT).balanceOf(address(this)) */\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_126\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_126:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_128\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_128:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x20\n      dup2\n      lt\n      iszero\n      tag_129\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_129:\n      pop\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3367:3416  IERC20(USDT).balanceOf(address(this)) >= amountIn */\n      lt\n      iszero\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3359:3450  require(IERC20(USDT).balanceOf(address(this)) >= amountIn, \"Insufficient contract balance\") */\n      tag_130\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x496e73756666696369656e7420636f6e74726163742062616c616e6365000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_130:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3461:3477  uint256 reserve0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3479:3495  uint256 reserve1 */\n      dup1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1537:1579  0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n      0xc05bb03bb7bfeb243ef364f544c81dd9a07040a2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3500:3530  IBxhPair(ROO_USDT).getReserves */\n      and\n      0x0902f1ac\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3500:3532  IBxhPair(ROO_USDT).getReserves() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x60\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_131\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_131:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_133\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_133:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      0x60\n      dup2\n      lt\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      dup1\n      mload\n      0x20\n      swap1\n      swap2\n      add\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3568:3576  amountIn */\n      sload(0x04)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3460:3532  (uint256 reserve0, uint256 reserve1,) = IBxhPair(ROO_USDT).getReserves() */\n      0xffffffffffffffffffffffffffff\n      swap3\n      dup4\n      and\n      swap5\n      pop\n      swap2\n      and\n      swap2\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3542:3565  uint256 amountInWithFee */\n      0x00\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3568:3585  amountIn.mul(997) */\n      tag_135\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3581:3584  997 */\n      0x03e5\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3568:3580  amountIn.mul */\n      tag_136\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3568:3585  amountIn.mul(997) */\n      jump\t// in\n    tag_135:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3542:3585  uint256 amountInWithFee = amountIn.mul(997) */\n      swap1\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3680  reserve1.mul(1000).add(amountInWithFee) */\n      tag_137\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3542:3585  uint256 amountInWithFee = amountIn.mul(997) */\n      dup2\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3659  reserve1.mul(1000) */\n      tag_138\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3649  reserve1 */\n      dup5\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3654:3658  1000 */\n      0x03e8\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3653  reserve1.mul */\n      tag_136\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3659  reserve1.mul(1000) */\n      jump\t// in\n    tag_138:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3663  reserve1.mul(1000).add */\n      swap1\n      tag_139\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3641:3680  reserve1.mul(1000).add(amountInWithFee) */\n      jump\t// in\n    tag_137:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3638  amountIn.mul(997).mul(reserve0) */\n      tag_140\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3629:3637  reserve0 */\n      dup5\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3624  amountIn.mul(997) */\n      tag_141\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3620:3623  997 */\n      0x03e5\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3615  amountIn */\n      sload(0x04)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3619  amountIn.mul */\n      tag_136\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3624  amountIn.mul(997) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_141:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3628  amountIn.mul(997).mul */\n      swap1\n      tag_136\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3638  amountIn.mul(997).mul(reserve0) */\n      jump\t// in\n    tag_140:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3680  amountIn.mul(997).mul(reserve0) / reserve1.mul(1000).add(amountInWithFee) */\n      dup2\n      tag_142\n      jumpi\n      invalid\n    tag_142:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3726:3734  amountIn */\n      sload(0x04)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3607:3680  amountIn.mul(997).mul(reserve0) / reserve1.mul(1000).add(amountInWithFee) */\n      swap2\n      swap1\n      div\n      swap5\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3690:3735  IERC20(USDT).safeTransfer(ROO_USDT, amountIn) */\n      tag_143\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1376:1418  0xa71EdC38d189767582C38A3145b5873052c3e47a */\n      0xa71edc38d189767582c38a3145b5873052c3e47a\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1537:1579  0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n      0xc05bb03bb7bfeb243ef364f544c81dd9a07040a2\n      swap1\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3690:3715  IERC20(USDT).safeTransfer */\n      tag_144\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3690:3735  IERC20(USDT).safeTransfer(ROO_USDT, amountIn) */\n      jump\t// in\n    tag_143:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3799:3811  new bytes(0) */\n      0x40\n      dup1\n      mload\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3780:3781  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3799:3811  new bytes(0) */\n      dup1\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      swap3\n      dup4\n      swap1\n      mstore\n      shl(0xe0, 0x022c0d9f)\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3745:3812  IBxhPair(ROO_USDT).swap(amountOut, 0, destroyAddress, new bytes(0)) */\n      dup4\n      mstore\n      0x24\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      0x44\n      dup4\n      add\n      dup3\n      swap1\n      mstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1626:1668  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3745:3812  IBxhPair(ROO_USDT).swap(amountOut, 0, destroyAddress, new bytes(0)) */\n      0x64\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      0x84\n      dup6\n      add\n      swap1\n      dup2\n      mstore\n      dup5\n      mload\n      0xa4\n      dup7\n      add\n      dup2\n      swap1\n      mstore\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1537:1579  0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2 */\n      0xc05bb03bb7bfeb243ef364f544c81dd9a07040a2\n      swap7\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3745:3768  IBxhPair(ROO_USDT).swap */\n      0x022c0d9f\n      swap7\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3769:3778  amountOut */\n      dup13\n      swap7\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3780:3781  0 */\n      swap6\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3799:3811  new bytes(0) */\n      swap1\n      swap4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3745:3812  IBxhPair(ROO_USDT).swap(amountOut, 0, destroyAddress, new bytes(0)) */\n      swap1\n      swap3\n      swap1\n      swap2\n      0xc4\n      dup6\n      add\n      swap2\n      dup1\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3799:3811  new bytes(0) */\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3780:3781  0 */\n      dup11\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3745:3812  IBxhPair(ROO_USDT).swap(amountOut, 0, destroyAddress, new bytes(0)) */\n    tag_147:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_149\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_147)\n    tag_149:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_150\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_150:\n      pop\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_151\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_151:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_153\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_153:\n      pop\n      pop\n      pop\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3918:3919  _ */\n      pop\n      pop\n      pop\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3168:3819  function swap(uint256 _amount) external onlyCaller returns (uint256 amountOut){... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":2968:3162  function getCaller(uint256 _index) public view returns (address){... */\n    tag_59:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3024:3031  address */\n      0x00\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3080:3081  1 */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3060:3077  getCallerLength() */\n      tag_155\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3060:3075  getCallerLength */\n      tag_31\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3060:3077  getCallerLength() */\n      jump\t// in\n    tag_155:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3060:3081  getCallerLength() - 1 */\n      sub\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3050:3056  _index */\n      dup3\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3050:3081  _index <= getCallerLength() - 1 */\n      gt\n      iszero\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3042:3105  require(_index <= getCallerLength() - 1, \"index out of bounds\") */\n      tag_156\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x13\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x68, 0x696e646578206f7574206f6620626f756e6473)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_156:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3122:3155  EnumerableSet.at(_caller, _index) */\n      tag_75\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3139:3146  _caller */\n      0x01\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3148:3154  _index */\n      dup4\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3122:3138  EnumerableSet.at */\n      tag_158\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":3122:3155  EnumerableSet.at(_caller, _index) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1345:1418  address public constant USDT = 0xa71EdC38d189767582C38A3145b5873052c3e47a */\n    tag_61:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1376:1418  0xa71EdC38d189767582C38A3145b5873052c3e47a */\n      0xa71edc38d189767582c38a3145b5873052c3e47a\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1345:1418  address public constant USDT = 0xa71EdC38d189767582C38A3145b5873052c3e47a */\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1585:1668  address public constant destroyAddress = 0x000000000000000000000000000000000000dEaD */\n    tag_63:\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1626:1668  0x000000000000000000000000000000000000dEaD */\n      0xdead\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1585:1668  address public constant destroyAddress = 0x000000000000000000000000000000000000dEaD */\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1461:1701  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_66:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      tag_160\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:768  _msgSender */\n      tag_71\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":758:770  _msgSender() */\n      jump\t// in\n    tag_160:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:754  _owner */\n      sload(0x00)\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":748:770  _owner == _msgSender() */\n      swap2\n      and\n      eq\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":740:807  require(_owner == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_161\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      dup2\n      swap1\n      mstore\n      0x24\n      dup3\n      add\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_161:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1549:1571  newOwner != address(0) */\n      dup2\n      and\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1541:1614  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_163\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_163:\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1650:1656  _owner */\n      0x00\n      dup1\n      sload\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1629:1667  OwnershipTransferred(_owner, newOwner) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup6\n      and\n      swap4\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1650:1656  _owner */\n      swap3\n      and\n      swap2\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1629:1667  OwnershipTransferred(_owner, newOwner) */\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      swap2\n      log3\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1677:1683  _owner */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1677:1694  _owner = newOwner */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/Ownable.sol\":1461:1701  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/ROO_Repurchase.sol\":1691:1722  address public emergencyAddress */\n    tag_68:\n      and(sub(shl(0xa0, 0x01), 0x01), sload(0x03))\n      dup2\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Context.sol\":58:162  function _msgSender() internal view virtual returns (address payable) {... */\n    tag_71:\n        /* \"ROO_Repurchase/contracts/library/Context.sol\":145:155  msg.sender */\n      caller\n        /* \"ROO_Repurchase/contracts/library/Context.sol\":58:162  function _msgSender() internal view virtual returns (address payable) {... */\n      swap1\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5985:6132  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_76:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6058:6062  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6081:6125  _remove(set._inner, bytes32(uint256(value))) */\n      tag_166\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6089:6092  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6109:6123  uint256(value) */\n      dup5\n      and\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6081:6088  _remove */\n      tag_167\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6081:6125  _remove(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n    tag_166:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6074:6125  return _remove(set._inner, bytes32(uint256(value))) */\n      swap4\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5985:6132  function remove(AddressSet storage set, address value) internal returns (bool) {... */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6450:6565  function length(AddressSet storage set) internal view returns (uint256) {... */\n    tag_84:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6513:6520  uint256 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6539:6558  _length(set._inner) */\n      tag_75\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6547:6550  set */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6539:6546  _length */\n      tag_170\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6539:6558  _length(set._inner) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5676:5817  function add(AddressSet storage set, address value) internal returns (bool) {... */\n    tag_116:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5746:5750  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5769:5810  _add(set._inner, bytes32(uint256(value))) */\n      tag_166\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5774:5777  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5794:5808  uint256(value) */\n      dup5\n      and\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5769:5773  _add */\n      tag_173\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":5769:5810  _add(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6213:6369  function contains(AddressSet storage set, address value) internal view returns (bool) {... */\n    tag_119:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6293:6297  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6316:6362  _contains(set._inner, bytes32(uint256(value))) */\n      tag_166\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6326:6329  set */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6346:6360  uint256(value) */\n      dup5\n      and\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6316:6325  _contains */\n      tag_176\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6316:6362  _contains(set._inner, bytes32(uint256(value))) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1584:2043  function mul(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_136:\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1642:1649  uint256 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1883:1889  a == 0 */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1879:1924  if (a == 0) {... */\n      tag_178\n      jumpi\n      pop\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1912:1913  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1905:1913  return 0 */\n      jump(tag_75)\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1879:1924  if (a == 0) {... */\n    tag_178:\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1946:1951  a * b */\n      dup3\n      dup3\n      mul\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1950:1951  b */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1946:1947  a */\n      dup5\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1946:1951  a * b */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1946:1947  a */\n      dup2\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1969:1974  c / a */\n      tag_179\n      jumpi\n      invalid\n    tag_179:\n      div\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1969:1979  c / a == b */\n      eq\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":1961:2017  require(c / a == b, \"SafeMath: multiplication overflow\") */\n      tag_166\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x21\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3\n      0x21\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":278:454  function add(uint256 a, uint256 b) internal pure returns (uint256) {... */\n    tag_139:\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":336:343  uint256 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":367:372  a + b */\n      dup3\n      dup3\n      add\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":390:396  c >= a */\n      dup4\n      dup2\n      lt\n      iszero\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":382:428  require(c >= a, \"SafeMath: addition overflow\") */\n      tag_166\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1b\n      0x24\n      dup3\n      add\n      mstore\n      0x536166654d6174683a206164646974696f6e206f766572666c6f770000000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":198:373  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_144:\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":307:365  abi.encodeWithSelector(token.transfer.selector, to, value) */\n      0x40\n      dup1\n      mload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x24\n      dup3\n      add\n      mstore\n      0x44\n      dup1\n      dup3\n      add\n      dup5\n      swap1\n      mstore\n      dup3\n      mload\n      dup1\n      dup4\n      sub\n      swap1\n      swap2\n      add\n      dup2\n      mstore\n      0x64\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n      0x20\n      dup2\n      add\n      dup1\n      mload\n      sub(shl(0xe0, 0x01), 0x01)\n      and\n      shl(0xe0, 0xa9059cbb)\n      or\n      swap1\n      mstore\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":280:366  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      tag_105\n      swap1\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":300:305  token */\n      dup5\n      swap1\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":280:299  _callOptionalReturn */\n      tag_185\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":280:366  _callOptionalReturn(token, abi.encodeWithSelector(token.transfer.selector, to, value)) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6897:7044  function at(AddressSet storage set, uint256 index) internal view returns (address) {... */\n    tag_158:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":6971:6978  address */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":7013:7035  _at(set._inner, index) */\n      tag_166\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":7017:7020  set */\n      dup4\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":7029:7034  index */\n      dup4\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":7013:7016  _at */\n      tag_188\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":7013:7035  _at(set._inner, index) */\n      jump\t// in\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1459:2971  function _remove(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_167:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1525:1529  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1662:1681  set._indexes[value] */\n      dup2\n      dup2\n      mstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1662:1674  set._indexes */\n      0x01\n      dup4\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1662:1681  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1696:1711  valueIndex != 0 */\n      dup1\n      iszero\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1692:2965  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n      tag_190\n      jumpi\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2125:2143  set._values.length */\n      dup4\n      sload\n      not(0x00)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2077:2091  valueIndex - 1 */\n      dup1\n      dup4\n      add\n      swap2\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2125:2147  set._values.length - 1 */\n      swap1\n      dup2\n      add\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2053:2074  uint256 toDeleteIndex */\n      0x00\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2125:2128  set */\n      dup8\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2125:2147  set._values.length - 1 */\n      dup4\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2407:2429  set._values[lastIndex] */\n      dup2\n      lt\n      tag_191\n      jumpi\n      invalid\n    tag_191:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2387:2429  bytes32 lastvalue = set._values[lastIndex] */\n      swap1\n      pop\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2550:2559  lastvalue */\n      dup1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2521:2524  set */\n      dup8\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2521:2532  set._values */\n      0x00\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2533:2546  toDeleteIndex */\n      dup5\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2521:2547  set._values[toDeleteIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_193\n      jumpi\n      invalid\n    tag_193:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2521:2559  set._values[toDeleteIndex] = lastvalue */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2625:2648  set._indexes[lastvalue] */\n      dup3\n      dup2\n      mstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2667:2668  1 */\n      0x01\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2625:2637  set._indexes */\n      dup10\n      dup2\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2625:2648  set._indexes[lastvalue] */\n      swap1\n      swap3\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2651:2668  toDeleteIndex + 1 */\n      swap1\n      dup5\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2625:2668  set._indexes[lastvalue] = toDeleteIndex + 1 */\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2774:2791  set._values.pop() */\n      dup7\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2625:2628  set */\n      dup8\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2774:2791  set._values.pop() */\n      dup1\n      tag_195\n      jumpi\n      invalid\n    tag_195:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2866:2869  set */\n      dup7\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2866:2878  set._indexes */\n      0x01\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2866:2885  set._indexes[value] */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2879:2884  value */\n      dup8\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2866:2885  set._indexes[value] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2859:2885  delete set._indexes[value] */\n      0x00\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2907:2911  true */\n      0x01\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2900:2911  return true */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump(tag_75)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1692:2965  if (valueIndex != 0) { // Equivalent to contains(set, value)... */\n    tag_190:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2949:2954  false */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":2942:2954  return false */\n      swap2\n      pop\n      pop\n      jump(tag_75)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3260:3367  function _length(Set storage set) private view returns (uint256) {... */\n    tag_170:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3342:3360  set._values.length */\n      sload\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3260:3367  function _length(Set storage set) private view returns (uint256) {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":887:1291  function _add(Set storage set, bytes32 value) private returns (bool) {... */\n    tag_173:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":950:954  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":971:992  _contains(set, value) */\n      tag_200\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":981:984  set */\n      dup4\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":986:991  value */\n      dup4\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":971:980  _contains */\n      tag_176\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":971:992  _contains(set, value) */\n      jump\t// in\n    tag_200:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":966:1285  if (!_contains(set, value)) {... */\n      tag_201\n      jumpi\n      pop\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1008:1031  set._values.push(value) */\n      dup2\n      sload\n      0x01\n      dup2\n      dup2\n      add\n      dup5\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1008:1019  set._values */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1008:1031  set._values.push(value) */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      keccak256\n      swap1\n      swap4\n      add\n      dup5\n      swap1\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1188:1206  set._values.length */\n      dup5\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1166:1185  set._indexes[value] */\n      dup5\n      dup3\n      mstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1166:1178  set._indexes */\n      dup3\n      dup7\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1166:1185  set._indexes[value] */\n      swap1\n      swap4\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1166:1206  set._indexes[value] = set._values.length */\n      swap2\n      swap1\n      swap2\n      sstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1220:1231  return true */\n      jump(tag_75)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":966:1285  if (!_contains(set, value)) {... */\n    tag_201:\n      pop\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1269:1274  false */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":1262:1274  return false */\n      jump(tag_75)\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3052:3179  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n    tag_176:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3125:3129  bool */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3148:3167  set._indexes[value] */\n      swap1\n      dup2\n      mstore\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3148:3160  set._indexes */\n      0x01\n      swap2\n      swap1\n      swap2\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3148:3167  set._indexes[value] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3148:3172  set._indexes[value] != 0 */\n      iszero\n      iszero\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3052:3179  function _contains(Set storage set, bytes32 value) private view returns (bool) {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2461:3212  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_185:\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2880:2903  bytes memory returndata */\n      0x60\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2906:2975  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      tag_206\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2934:2938  data */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2906:2975  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x20\n      dup2\n      mstore\n      0x20\n      add\n      0x5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564\n      dup2\n      mstore\n      pop\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2914:2919  token */\n      dup6\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2906:2933  address(token).functionCall */\n      and\n      tag_207\n      swap1\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2906:2975  address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_206:\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2989:3006  returndata.length */\n      dup1\n      mload\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2880:2975  bytes memory returndata = address(token).functionCall(data, \"SafeERC20: low-level call failed\") */\n      swap1\n      swap2\n      pop\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2989:3010  returndata.length > 0 */\n      iszero\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":2985:3206  if (returndata.length > 0) { // Return data is optional... */\n      tag_105\n      jumpi\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":3129:3139  returndata */\n      dup1\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":3118:3148  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      0x20\n      dup2\n      lt\n      iszero\n      tag_209\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_209:\n      pop\n      mload\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":3110:3195  require(abi.decode(returndata, (bool)), \"SafeERC20: ERC20 operation did not succeed\") */\n      tag_105\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x2a\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd\n      0x2a\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3699:3900  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n    tag_188:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3793:3811  set._values.length */\n      dup2\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3766:3773  bytes32 */\n      0x00\n      swap1\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3793:3819  set._values.length > index */\n      dup3\n      lt\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3785:3858  require(set._values.length > index, \"EnumerableSet: index out of bounds\") */\n      tag_212\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x22\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb\n      0x22\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_212:\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3875:3878  set */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3875:3886  set._values */\n      0x00\n      add\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3887:3892  index */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3875:3893  set._values[index] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_213\n      jumpi\n      invalid\n    tag_213:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3868:3893  return set._values[index] */\n      swap1\n      pop\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":3699:3900  function _at(Set storage set, uint256 index) private view returns (bytes32) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3473:3666  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_207:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3576:3588  bytes memory */\n      0x60\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3607:3659  functionCallWithValue(target, data, 0, errorMessage) */\n      tag_216\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3629:3635  target */\n      dup5\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3637:3641  data */\n      dup5\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3643:3644  0 */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3646:3658  errorMessage */\n      dup6\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3607:3628  functionCallWithValue */\n      tag_217\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3607:3659  functionCallWithValue(target, data, 0, errorMessage) */\n      jump\t// in\n    tag_216:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3600:3659  return functionCallWithValue(target, data, 0, errorMessage) */\n      swap5\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":3473:3666  function functionCall(address target, bytes memory data, string memory errorMessage) internal returns (bytes memory) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4500:5023  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n    tag_217:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4627:4639  bytes memory */\n      0x60\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4684:4689  value */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4659:4680  address(this).balance */\n      selfbalance\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4659:4689  address(this).balance >= value */\n      lt\n      iszero\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4651:4732  require(address(this).balance >= value, \"Address: insufficient balance for call\") */\n      tag_219\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      0x26\n      dup2\n      mstore\n      0x20\n      add\n      dup1\n      data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c\n      0x26\n      swap2\n      codecopy\n      0x40\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_219:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4750:4768  isContract(target) */\n      tag_220\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4761:4767  target */\n      dup6\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4750:4760  isContract */\n      tag_221\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4750:4768  isContract(target) */\n      jump\t// in\n    tag_220:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4742:4802  require(isContract(target), \"Address: call to non-contract\") */\n      tag_222\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1d\n      0x24\n      dup3\n      add\n      mstore\n      0x416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_222:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4873:4885  bool success */\n      0x00\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4887:4910  bytes memory returndata */\n      0x60\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4914:4920  target */\n      dup7\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4914:4925  target.call */\n      and\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4934:4939  value */\n      dup6\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4942:4946  data */\n      dup8\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4914:4947  target.call{ value: value }(data) */\n      mload(0x40)\n      dup1\n      dup3\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n    tag_223:\n      0x20\n      dup4\n      lt\n      tag_225\n      jumpi\n      dup1\n      mload\n      dup3\n      mstore\n      not(0x1f)\n      swap1\n      swap3\n      add\n      swap2\n      0x20\n      swap2\n      dup3\n      add\n      swap2\n      add\n      jump(tag_223)\n    tag_225:\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      dup1\n      not\n      dup3\n      mload\n      and\n      dup2\n      dup5\n      mload\n      and\n      dup1\n      dup3\n      or\n      dup6\n      mstore\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      add\n      swap2\n      pop\n      pop\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_228\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_227)\n    tag_228:\n      0x60\n      swap2\n      pop\n    tag_227:\n      pop\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4872:4947  (bool success, bytes memory returndata) = target.call{ value: value }(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4964:5016  _verifyCallResult(success, returndata, errorMessage) */\n      tag_229\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4982:4989  success */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4991:5001  returndata */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":5003:5015  errorMessage */\n      dup7\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4964:4981  _verifyCallResult */\n      tag_230\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4964:5016  _verifyCallResult(success, returndata, errorMessage) */\n      jump\t// in\n    tag_229:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4957:5016  return _verifyCallResult(success, returndata, errorMessage) */\n      swap8\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":4500:5023  function functionCallWithValue(address target, bytes memory data, uint256 value, string memory errorMessage) internal returns (bytes memory) {... */\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":618:1031  function isContract(address account) internal view returns (bool) {... */\n    tag_221:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":978:998  extcodesize(account) */\n      extcodesize\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":1016:1024  size > 0 */\n      iszero\n      iszero\n      swap1\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":618:1031  function isContract(address account) internal view returns (bool) {... */\n      jump\t// out\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6003:6728  function _verifyCallResult(bool success, bytes memory returndata, string memory errorMessage) private pure returns(bytes memory) {... */\n    tag_230:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6118:6130  bytes memory */\n      0x60\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6146:6153  success */\n      dup4\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6142:6722  if (success) {... */\n      iszero\n      tag_233\n      jumpi\n      pop\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6176:6186  returndata */\n      dup2\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6169:6186  return returndata */\n      jump(tag_166)\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6142:6722  if (success) {... */\n    tag_233:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6287:6304  returndata.length */\n      dup3\n      mload\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6287:6308  returndata.length > 0 */\n      iszero\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6283:6712  if (returndata.length > 0) {... */\n      tag_235\n      jumpi\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6545:6555  returndata */\n      dup3\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6539:6556  mload(returndata) */\n      mload\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6605:6620  returndata_size */\n      dup1\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6592:6602  returndata */\n      dup5\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6588:6590  32 */\n      0x20\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6584:6603  add(32, returndata) */\n      add\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6577:6621  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6494:6639  {... */\n    tag_235:\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6684:6696  errorMessage */\n      dup2\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":6677:6697  revert(errorMessage) */\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      dup1\n      dup1\n      0x20\n      add\n      dup3\n      dup2\n      sub\n      dup3\n      mstore\n      dup4\n      dup2\n      dup2\n      mload\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n    tag_237:\n      dup4\n      dup2\n      lt\n      iszero\n      tag_239\n      jumpi\n      dup2\n      dup2\n      add\n      mload\n      dup4\n      dup3\n      add\n      mstore\n      0x20\n      add\n      jump(tag_237)\n    tag_239:\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_240\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_240:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    stop\n    data_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb 456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473\n    data_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe 4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373\n    data_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c 416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c\n    data_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3 536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77\n    data_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe 4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n    data_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd 5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564\n\n    auxdata: 0xa264697066735822122075ed3ce19bc6a13a56c51118bf9bb6f6763a8c228ab27a11e037aea2f58e43da64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516115bd3803806115bd8339818101604052602081101561003357600080fd5b5051600061003f6100fb565b600080546001600160a01b0319166001600160a01b0383169081178255604051929350917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3506001600160a01b0381166100d6576040805162461bcd60e51b815260206004820152600f60248201526e4973207a65726f206164647265737360881b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b03929092169190911790556100ff565b3390565b6114af8061010e6000396000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c80637ac07dcc116100a2578063a8b0b3ed11610071578063a8b0b3ed14610287578063c54e44eb146102a4578063d12d9f15146102ac578063f2fde38b146102b4578063fddf3f73146102da57610116565b80637ac07dcc146102345780638c2f94101461025a5780638da5cb5b1461026257806394b918de1461026a57610116565b80636717f5b0116100e95780636717f5b0146101bb5780636bed55a6146101d85780636ff1c9bc146101e0578063715018a614610206578063747293fb1461020e57610116565b8063231a418c1461011b5780632aa11ffb1461015557806342177a581461017d5780635793d0af14610197575b600080fd5b6101416004803603602081101561013157600080fd5b50356001600160a01b03166102e2565b604080519115158252519081900360200190f35b61017b6004803603602081101561016b57600080fd5b50356001600160a01b03166103a8565b005b61018561046f565b60408051918252519081900360200190f35b61019f610480565b604080516001600160a01b039092168252519081900360200190f35b61017b600480360360208110156101d157600080fd5b5035610498565b6101856104f5565b61017b600480360360208110156101f657600080fd5b50356001600160a01b03166104fb565b61017b61071f565b6101416004803603602081101561022457600080fd5b50356001600160a01b03166107c1565b6101416004803603602081101561024a57600080fd5b50356001600160a01b0316610881565b61019f61088e565b61019f6108a6565b6101856004803603602081101561028057600080fd5b50356108b5565b61019f6004803603602081101561029d57600080fd5b5035610c55565b61019f610cb7565b61019f610ccf565b61017b600480360360208110156102ca57600080fd5b50356001600160a01b0316610cd5565b61019f610dcd565b60006102ec610ddc565b6000546001600160a01b0390811691161461033c576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b6001600160a01b038216610397576040805162461bcd60e51b815260206004820152601d60248201527f44656c43616c6c657220697320746865207a65726f2061646472657373000000604482015290519081900360640190fd5b6103a2600183610de0565b92915050565b6103b0610ddc565b6000546001600160a01b03908116911614610400576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b6001600160a01b03811661044d576040805162461bcd60e51b815260206004820152600f60248201526e4973207a65726f206164647265737360881b604482015290519081900360640190fd5b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600061047b6001610dfc565b905090565b73addeb3a8fb46ddc3fee55085b6ad8dab4c4fc77181565b6104a0610ddc565b6000546001600160a01b039081169116146104f0576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b600455565b60045481565b610503610ddc565b6000546001600160a01b03908116911614610553576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b6000816001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156105a257600080fd5b505afa1580156105b6573d6000803e3d6000fd5b505050506040513d60208110156105cc57600080fd5b505111610620576040805162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015290519081900360640190fd5b600354604080516370a0823160e01b815230600482015290516001600160a01b038085169363a9059cbb9391169184916370a08231916024808301926020929190829003018186803b15801561067557600080fd5b505afa158015610689573d6000803e3d6000fd5b505050506040513d602081101561069f57600080fd5b5051604080516001600160e01b031960e086901b1681526001600160a01b03909316600484015260248301919091525160448083019260209291908290030181600087803b1580156106f057600080fd5b505af1158015610704573d6000803e3d6000fd5b505050506040513d602081101561071a57600080fd5b505050565b610727610ddc565b6000546001600160a01b03908116911614610777576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60006107cb610ddc565b6000546001600160a01b0390811691161461081b576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b6001600160a01b038216610876576040805162461bcd60e51b815260206004820152601d60248201527f4e657743616c6c657220697320746865207a65726f2061646472657373000000604482015290519081900360640190fd5b6103a2600183610e07565b60006103a2600183610e1c565b73c05bb03bb7bfeb243ef364f544c81dd9a07040a281565b6000546001600160a01b031690565b60006108c033610881565b610902576040805162461bcd60e51b815260206004820152600e60248201526d2737ba103a34329031b0b63632b960911b604482015290519081900360640190fd5b60008211610957576040805162461bcd60e51b815260206004820181905260248201527f416d6f756e74206d7573742062652067726561746572207468616e207a65726f604482015290519081900360640190fd5b6004828155604080516370a0823160e01b8152309281019290925251839173a71edc38d189767582c38a3145b5873052c3e47a916370a0823191602480820192602092909190829003018186803b1580156109b157600080fd5b505afa1580156109c5573d6000803e3d6000fd5b505050506040513d60208110156109db57600080fd5b50511015610a30576040805162461bcd60e51b815260206004820152601d60248201527f496e73756666696369656e7420636f6e74726163742062616c616e6365000000604482015290519081900360640190fd5b60008073c05bb03bb7bfeb243ef364f544c81dd9a07040a26001600160a01b0316630902f1ac6040518163ffffffff1660e01b815260040160606040518083038186803b158015610a8057600080fd5b505afa158015610a94573d6000803e3d6000fd5b505050506040513d6060811015610aaa57600080fd5b5080516020909101516004546dffffffffffffffffffffffffffff928316945091169150600090610add906103e5610e31565b9050610af581610aef846103e8610e31565b90610e8a565b610b1684610b106103e5600454610e3190919063ffffffff16565b90610e31565b81610b1d57fe5b6004549190049450610b5a9073a71edc38d189767582c38a3145b5873052c3e47a9073c05bb03bb7bfeb243ef364f544c81dd9a07040a290610ee4565b604080516000808252602082019283905263022c0d9f60e01b8352602482018781526044830182905261dead60648401819052608060848501908152845160a4860181905273c05bb03bb7bfeb243ef364f544c81dd9a07040a29663022c0d9f968c969590939092909160c48501918083838a5b83811015610be6578181015183820152602001610bce565b50505050905090810190601f168015610c135780820380516001836020036101000a031916815260200191505b5095505050505050600060405180830381600087803b158015610c3557600080fd5b505af1158015610c49573d6000803e3d6000fd5b50505050505050919050565b60006001610c6161046f565b03821115610cac576040805162461bcd60e51b8152602060048201526013602482015272696e646578206f7574206f6620626f756e647360681b604482015290519081900360640190fd5b6103a2600183610f36565b73a71edc38d189767582c38a3145b5873052c3e47a81565b61dead81565b610cdd610ddc565b6000546001600160a01b03908116911614610d2d576040805162461bcd60e51b81526020600482018190526024820152600080516020611430833981519152604482015290519081900360640190fd5b6001600160a01b038116610d725760405162461bcd60e51b81526004018080602001828103825260268152602001806113c36026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b6003546001600160a01b031681565b3390565b6000610df5836001600160a01b038416610f42565b9392505050565b60006103a282611008565b6000610df5836001600160a01b03841661100c565b6000610df5836001600160a01b038416611056565b600082610e40575060006103a2565b82820282848281610e4d57fe5b0414610df55760405162461bcd60e51b815260040180806020018281038252602181526020018061140f6021913960400191505060405180910390fd5b600082820183811015610df5576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261071a90849061106e565b6000610df5838361111f565b60008181526001830160205260408120548015610ffe5783546000198083019190810190600090879083908110610f7557fe5b9060005260206000200154905080876000018481548110610f9257fe5b600091825260208083209091019290925582815260018981019092526040902090840190558654879080610fc257fe5b600190038181906000526020600020016000905590558660010160008781526020019081526020016000206000905560019450505050506103a2565b60009150506103a2565b5490565b60006110188383611056565b61104e575081546001818101845560008481526020808220909301849055845484825282860190935260409020919091556103a2565b5060006103a2565b60009081526001919091016020526040902054151590565b60606110c3826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111839092919063ffffffff16565b80519091501561071a578080602001905160208110156110e257600080fd5b505161071a5760405162461bcd60e51b815260040180806020018281038252602a815260200180611450602a913960400191505060405180910390fd5b815460009082106111615760405162461bcd60e51b81526004018080602001828103825260228152602001806113a16022913960400191505060405180910390fd5b82600001828154811061117057fe5b9060005260206000200154905092915050565b6060611192848460008561119a565b949350505050565b6060824710156111db5760405162461bcd60e51b81526004018080602001828103825260268152602001806113e96026913960400191505060405180910390fd5b6111e4856112f6565b611235576040805162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015290519081900360640190fd5b60006060866001600160a01b031685876040518082805190602001908083835b602083106112745780518252601f199092019160209182019101611255565b6001836020036101000a03801982511681845116808217855250505050505090500191505060006040518083038185875af1925050503d80600081146112d6576040519150601f19603f3d011682016040523d82523d6000602084013e6112db565b606091505b50915091506112eb8282866112fc565b979650505050505050565b3b151590565b6060831561130b575081610df5565b82511561131b5782518084602001fd5b8160405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561136557818101518382015260200161134d565b50505050905090810190601f1680156113925780820380516001836020036101000a031916815260200191505b509250505060405180910390fdfe456e756d657261626c655365743a20696e646578206f7574206f6620626f756e64734f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f774f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564a264697066735822122075ed3ce19bc6a13a56c51118bf9bb6f6763a8c228ab27a11e037aea2f58e43da64736f6c634300060c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x15BD CODESIZE SUB DUP1 PUSH2 0x15BD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x0 PUSH2 0x3F PUSH2 0xFB JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP3 SWAP4 POP SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP3 SWAP1 LOG3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD6 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4973207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0xFF JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH2 0x14AF DUP1 PUSH2 0x10E PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AC07DCC GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA8B0B3ED GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8B0B3ED EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD12D9F15 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xFDDF3F73 EQ PUSH2 0x2DA JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x7AC07DCC EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8C2F9410 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x26A JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6717F5B0 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6717F5B0 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6BED55A6 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x747293FB EQ PUSH2 0x20E JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x231A418C EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2AA11FFB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42177A58 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x5793D0AF EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x17B PUSH2 0x71F JUMP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x881 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x88E JUMP JUMPDEST PUSH2 0x19F PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x33C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x397 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C43616C6C657220697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x400 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4973207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH1 0x1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xADDEB3A8FB46DDC3FEE55085B6AD8DAB4C4FC771 DUP2 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x503 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x553 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT PUSH2 0x620 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 SWAP2 AND SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x704 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CB PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x81B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x876 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657743616C6C657220697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xE1C JUMP JUMPDEST PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C0 CALLER PUSH2 0x881 JUMP JUMPDEST PUSH2 0x902 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103A34329031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x957 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD DUP4 SWAP2 PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP5 POP SWAP2 AND SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xADD SWAP1 PUSH2 0x3E5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF5 DUP2 PUSH2 0xAEF DUP5 PUSH2 0x3E8 PUSH2 0xE31 JUMP JUMPDEST SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0xB16 DUP5 PUSH2 0xB10 PUSH2 0x3E5 PUSH1 0x4 SLOAD PUSH2 0xE31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xE31 JUMP JUMPDEST DUP2 PUSH2 0xB1D JUMPI INVALID JUMPDEST PUSH1 0x4 SLOAD SWAP2 SWAP1 DIV SWAP5 POP PUSH2 0xB5A SWAP1 PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A SWAP1 PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x44 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0xDEAD PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x84 DUP6 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD PUSH1 0xA4 DUP7 ADD DUP2 SWAP1 MSTORE PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 SWAP7 PUSH4 0x22C0D9F SWAP7 DUP13 SWAP7 SWAP6 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC4 DUP6 ADD SWAP2 DUP1 DUP4 DUP4 DUP11 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBCE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC13 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xC61 PUSH2 0x46F JUMP JUMPDEST SUB DUP3 GT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x696E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xF36 JUMP JUMPDEST PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0xCDD PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13C3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF42 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 DUP3 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE40 JUMPI POP PUSH1 0x0 PUSH2 0x3A2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE4D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x140F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x71A SWAP1 DUP5 SWAP1 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 DUP4 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xFFE JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xF75 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF92 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xFC2 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3A2 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x104E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10C3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x71A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1450 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13A1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1170 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1192 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x119A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13E9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E4 DUP6 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x1235 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1274 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12EB DUP3 DUP3 DUP7 PUSH2 0x12FC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x130B JUMPI POP DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x131B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1365 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x134D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734F776E61626C653A206E65 PUSH24 0x206F776E657220697320746865207A65726F206164647265 PUSH20 0x73416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122075ED3CE1 SWAP12 0xC6 LOG1 GASPRICE JUMP 0xC5 GT XOR 0xBF SWAP12 0xB6 0xF6 PUSH23 0x3A8C228AB27A11E037AEA2F58E43DA64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "199:3989:0:-:0;;;1839:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1839:169:0;343:17:6;363:12;:10;:12::i;:::-;385:6;:18;;-1:-1:-1;;;;;;385:18:6;-1:-1:-1;;;;;385:18:6;;;;;;;418:43;;385:18;;-1:-1:-1;385:18:6;418:43;;385:6;;418:43;-1:-1:-1;;;;;;1904:31:0;;1896:59;;;;;-1:-1:-1;;;1896:59:0;;;;;;;;;;;;-1:-1:-1;;;1896:59:0;;;;;;;;;;;;;;;1965:16;:36;;-1:-1:-1;;;;;;1965:36:0;-1:-1:-1;;;;;1965:36:0;;;;;;;;;;199:3989;;58:104:4;145:10;58:104;:::o;199:3989:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x116 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x7AC07DCC GT PUSH2 0xA2 JUMPI DUP1 PUSH4 0xA8B0B3ED GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xA8B0B3ED EQ PUSH2 0x287 JUMPI DUP1 PUSH4 0xC54E44EB EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0xD12D9F15 EQ PUSH2 0x2AC JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0xFDDF3F73 EQ PUSH2 0x2DA JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x7AC07DCC EQ PUSH2 0x234 JUMPI DUP1 PUSH4 0x8C2F9410 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x94B918DE EQ PUSH2 0x26A JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x6717F5B0 GT PUSH2 0xE9 JUMPI DUP1 PUSH4 0x6717F5B0 EQ PUSH2 0x1BB JUMPI DUP1 PUSH4 0x6BED55A6 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x6FF1C9BC EQ PUSH2 0x1E0 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x206 JUMPI DUP1 PUSH4 0x747293FB EQ PUSH2 0x20E JUMPI PUSH2 0x116 JUMP JUMPDEST DUP1 PUSH4 0x231A418C EQ PUSH2 0x11B JUMPI DUP1 PUSH4 0x2AA11FFB EQ PUSH2 0x155 JUMPI DUP1 PUSH4 0x42177A58 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x5793D0AF EQ PUSH2 0x197 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x131 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x2E2 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x16B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x3A8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x185 PUSH2 0x46F JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x19F PUSH2 0x480 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1D1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x498 JUMP JUMPDEST PUSH2 0x185 PUSH2 0x4F5 JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1F6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x4FB JUMP JUMPDEST PUSH2 0x17B PUSH2 0x71F JUMP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x224 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x7C1 JUMP JUMPDEST PUSH2 0x141 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x881 JUMP JUMPDEST PUSH2 0x19F PUSH2 0x88E JUMP JUMPDEST PUSH2 0x19F PUSH2 0x8A6 JUMP JUMPDEST PUSH2 0x185 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x280 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0x8B5 JUMP JUMPDEST PUSH2 0x19F PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x29D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH2 0xC55 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xCB7 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xCCF JUMP JUMPDEST PUSH2 0x17B PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x2CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0xCD5 JUMP JUMPDEST PUSH2 0x19F PUSH2 0xDCD JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2EC PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x33C JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x397 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x44656C43616C6C657220697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xDE0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3B0 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x400 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x44D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x4973207A65726F2061646472657373 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x47B PUSH1 0x1 PUSH2 0xDFC JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH20 0xADDEB3A8FB46DDC3FEE55085B6AD8DAB4C4FC771 DUP2 JUMP JUMPDEST PUSH2 0x4A0 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x4F0 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x503 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x553 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x5B6 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x5CC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD GT PUSH2 0x620 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 PUSH4 0xA9059CBB SWAP4 SWAP2 AND SWAP2 DUP5 SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x675 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x69F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP7 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND PUSH1 0x4 DUP5 ADD MSTORE PUSH1 0x24 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE MLOAD PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x6F0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x704 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x71A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x727 PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x777 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 DUP4 SWAP1 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7CB PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0x81B JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x876 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E657743616C6C657220697320746865207A65726F2061646472657373000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xE07 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xE1C JUMP JUMPDEST PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8C0 CALLER PUSH2 0x881 JUMP JUMPDEST PUSH2 0x902 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x2737BA103A34329031B0B63632B9 PUSH1 0x91 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 GT PUSH2 0x957 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416D6F756E74206D7573742062652067726561746572207468616E207A65726F PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP3 DUP2 SSTORE PUSH1 0x40 DUP1 MLOAD PUSH4 0x70A08231 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE MLOAD DUP4 SWAP2 PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A SWAP2 PUSH4 0x70A08231 SWAP2 PUSH1 0x24 DUP1 DUP3 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP1 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x9B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x9C5 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x9DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD LT ISZERO PUSH2 0xA30 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E7420636F6E74726163742062616C616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x902F1AC PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x60 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA80 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xA94 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x60 DUP2 LT ISZERO PUSH2 0xAAA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP1 MLOAD PUSH1 0x20 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SLOAD PUSH14 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFF SWAP3 DUP4 AND SWAP5 POP SWAP2 AND SWAP2 POP PUSH1 0x0 SWAP1 PUSH2 0xADD SWAP1 PUSH2 0x3E5 PUSH2 0xE31 JUMP JUMPDEST SWAP1 POP PUSH2 0xAF5 DUP2 PUSH2 0xAEF DUP5 PUSH2 0x3E8 PUSH2 0xE31 JUMP JUMPDEST SWAP1 PUSH2 0xE8A JUMP JUMPDEST PUSH2 0xB16 DUP5 PUSH2 0xB10 PUSH2 0x3E5 PUSH1 0x4 SLOAD PUSH2 0xE31 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 PUSH2 0xE31 JUMP JUMPDEST DUP2 PUSH2 0xB1D JUMPI INVALID JUMPDEST PUSH1 0x4 SLOAD SWAP2 SWAP1 DIV SWAP5 POP PUSH2 0xB5A SWAP1 PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A SWAP1 PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 SWAP1 PUSH2 0xEE4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP3 DUP4 SWAP1 MSTORE PUSH4 0x22C0D9F PUSH1 0xE0 SHL DUP4 MSTORE PUSH1 0x24 DUP3 ADD DUP8 DUP2 MSTORE PUSH1 0x44 DUP4 ADD DUP3 SWAP1 MSTORE PUSH2 0xDEAD PUSH1 0x64 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 PUSH1 0x84 DUP6 ADD SWAP1 DUP2 MSTORE DUP5 MLOAD PUSH1 0xA4 DUP7 ADD DUP2 SWAP1 MSTORE PUSH20 0xC05BB03BB7BFEB243EF364F544C81DD9A07040A2 SWAP7 PUSH4 0x22C0D9F SWAP7 DUP13 SWAP7 SWAP6 SWAP1 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH1 0xC4 DUP6 ADD SWAP2 DUP1 DUP4 DUP4 DUP11 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xBE6 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xBCE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC13 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP6 POP POP POP POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xC35 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC49 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH2 0xC61 PUSH2 0x46F JUMP JUMPDEST SUB DUP3 GT ISZERO PUSH2 0xCAC JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x13 PUSH1 0x24 DUP3 ADD MSTORE PUSH19 0x696E646578206F7574206F6620626F756E6473 PUSH1 0x68 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x3A2 PUSH1 0x1 DUP4 PUSH2 0xF36 JUMP JUMPDEST PUSH20 0xA71EDC38D189767582C38A3145B5873052C3E47A DUP2 JUMP JUMPDEST PUSH2 0xDEAD DUP2 JUMP JUMPDEST PUSH2 0xCDD PUSH2 0xDDC JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP2 AND EQ PUSH2 0xD2D JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1430 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0xD72 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13C3 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND SWAP4 SWAP3 AND SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 LOG3 PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0xF42 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A2 DUP3 PUSH2 0x1008 JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x100C JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x1056 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xE40 JUMPI POP PUSH1 0x0 PUSH2 0x3A2 JUMP JUMPDEST DUP3 DUP3 MUL DUP3 DUP5 DUP3 DUP2 PUSH2 0xE4D JUMPI INVALID JUMPDEST DIV EQ PUSH2 0xDF5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x21 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x140F PUSH1 0x21 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 DUP3 ADD DUP4 DUP2 LT ISZERO PUSH2 0xDF5 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x536166654D6174683A206164646974696F6E206F766572666C6F770000000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP1 DUP3 ADD DUP5 SWAP1 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0x64 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE PUSH1 0x20 DUP2 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0xA9059CBB PUSH1 0xE0 SHL OR SWAP1 MSTORE PUSH2 0x71A SWAP1 DUP5 SWAP1 PUSH2 0x106E JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDF5 DUP4 DUP4 PUSH2 0x111F JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP1 ISZERO PUSH2 0xFFE JUMPI DUP4 SLOAD PUSH1 0x0 NOT DUP1 DUP4 ADD SWAP2 SWAP1 DUP2 ADD SWAP1 PUSH1 0x0 SWAP1 DUP8 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0xF75 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xF92 JUMPI INVALID JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP3 DUP2 MSTORE PUSH1 0x1 DUP10 DUP2 ADD SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP5 ADD SWAP1 SSTORE DUP7 SLOAD DUP8 SWAP1 DUP1 PUSH2 0xFC2 JUMPI INVALID JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP7 PUSH1 0x1 ADD PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP5 POP POP POP POP POP PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP PUSH2 0x3A2 JUMP JUMPDEST SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1018 DUP4 DUP4 PUSH2 0x1056 JUMP JUMPDEST PUSH2 0x104E JUMPI POP DUP2 SLOAD PUSH1 0x1 DUP2 DUP2 ADD DUP5 SSTORE PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 KECCAK256 SWAP1 SWAP4 ADD DUP5 SWAP1 SSTORE DUP5 SLOAD DUP5 DUP3 MSTORE DUP3 DUP7 ADD SWAP1 SWAP4 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE PUSH2 0x3A2 JUMP JUMPDEST POP PUSH1 0x0 PUSH2 0x3A2 JUMP JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10C3 DUP3 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x20 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564 DUP2 MSTORE POP DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1183 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP1 MLOAD SWAP1 SWAP2 POP ISZERO PUSH2 0x71A JUMPI DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x10E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP MLOAD PUSH2 0x71A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x2A DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x1450 PUSH1 0x2A SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP3 LT PUSH2 0x1161 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x22 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13A1 PUSH1 0x22 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1170 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1192 DUP5 DUP5 PUSH1 0x0 DUP6 PUSH2 0x119A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 SELFBALANCE LT ISZERO PUSH2 0x11DB JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE PUSH1 0x26 DUP2 MSTORE PUSH1 0x20 ADD DUP1 PUSH2 0x13E9 PUSH1 0x26 SWAP2 CODECOPY PUSH1 0x40 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x11E4 DUP6 PUSH2 0x12F6 JUMP JUMPDEST PUSH2 0x1235 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP7 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 DUP8 PUSH1 0x40 MLOAD DUP1 DUP3 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 JUMPDEST PUSH1 0x20 DUP4 LT PUSH2 0x1274 JUMPI DUP1 MLOAD DUP3 MSTORE PUSH1 0x1F NOT SWAP1 SWAP3 ADD SWAP2 PUSH1 0x20 SWAP2 DUP3 ADD SWAP2 ADD PUSH2 0x1255 JUMP JUMPDEST PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB DUP1 NOT DUP3 MLOAD AND DUP2 DUP5 MLOAD AND DUP1 DUP3 OR DUP6 MSTORE POP POP POP POP POP POP SWAP1 POP ADD SWAP2 POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x12D6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x12DB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x12EB DUP3 DUP3 DUP7 PUSH2 0x12FC JUMP JUMPDEST SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST EXTCODESIZE ISZERO ISZERO SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP4 ISZERO PUSH2 0x130B JUMPI POP DUP2 PUSH2 0xDF5 JUMP JUMPDEST DUP3 MLOAD ISZERO PUSH2 0x131B JUMPI DUP3 MLOAD DUP1 DUP5 PUSH1 0x20 ADD REVERT JUMPDEST DUP2 PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1365 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x134D JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x1392 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT INVALID GASLIMIT PUSH15 0x756D657261626C655365743A20696E PUSH5 0x6578206F75 PUSH21 0x206F6620626F756E64734F776E61626C653A206E65 PUSH24 0x206F776E657220697320746865207A65726F206164647265 PUSH20 0x73416464726573733A20696E7375666669636965 PUSH15 0x742062616C616E636520666F722063 PUSH2 0x6C6C MSTORE8 PUSH2 0x6665 0x4D PUSH2 0x7468 GASPRICE KECCAK256 PUSH14 0x756C7469706C69636174696F6E20 PUSH16 0x766572666C6F774F776E61626C653A20 PUSH4 0x616C6C65 PUSH19 0x206973206E6F7420746865206F776E65725361 PUSH7 0x6545524332303A KECCAK256 GASLIMIT MSTORE NUMBER ORIGIN ADDRESS KECCAK256 PUSH16 0x7065726174696F6E20646964206E6F74 KECCAK256 PUSH20 0x756363656564A264697066735822122075ED3CE1 SWAP12 0xC6 LOG1 GASPRICE JUMP 0xC5 GT XOR 0xBF SWAP12 0xB6 0xF6 PUSH23 0x3A8C228AB27A11E037AEA2F58E43DA64736F6C63430006 0xC STOP CALLER ",
							"sourceMap": "199:3989:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2506:212;;;;;;;;;;;;;;;;-1:-1:-1;2506:212:0;-1:-1:-1;;;;;2506:212:0;;:::i;:::-;;;;;;;;;;;;;;;;;;2108:177;;;;;;;;;;;;;;;;-1:-1:-1;2108:177:0;-1:-1:-1;;;;;2108:177:0;;:::i;:::-;;2724:110;;;:::i;:::-;;;;;;;;;;;;;;;;1424:72;;;:::i;:::-;;;;-1:-1:-1;;;;;1424:72:0;;;;;;;;;;;;;;2014:88;;;;;;;;;;;;;;;;-1:-1:-1;2014:88:0;;:::i;1745:23::-;;;:::i;3932:254::-;;;;;;;;;;;;;;;;-1:-1:-1;3932:254:0;-1:-1:-1;;;;;3932:254:0;;:::i;1167:145:6:-;;;:::i;2291:209:0:-;;;;;;;;;;;;;;;;-1:-1:-1;2291:209:0;-1:-1:-1;;;;;2291:209:0;;:::i;2840:122::-;;;;;;;;;;;;;;;;-1:-1:-1;2840:122:0;-1:-1:-1;;;;;2840:122:0;;:::i;1502:77::-;;;:::i;544::6:-;;;:::i;3168:651:0:-;;;;;;;;;;;;;;;;-1:-1:-1;3168:651:0;;:::i;2968:194::-;;;;;;;;;;;;;;;;-1:-1:-1;2968:194:0;;:::i;1345:73::-;;;:::i;1585:83::-;;;:::i;1461:240:6:-;;;;;;;;;;;;;;;;-1:-1:-1;1461:240:6;-1:-1:-1;;;;;1461:240:6;;:::i;1691:31:0:-;;;:::i;2506:212::-;2571:4;758:12:6;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;2595:24:0;::::1;2587:66;;;::::0;;-1:-1:-1;;;2587:66:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2670:41;2691:7;2700:10;2670:20;:41::i;:::-;2663:48:::0;2506:212;-1:-1:-1;;2506:212:0:o;2108:177::-;758:12:6;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;2193:25:0;::::1;2185:53;;;::::0;;-1:-1:-1;;;2185:53:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;2185:53:0;;;;;;;;;;;;;::::1;;2248:16;:30:::0;;-1:-1:-1;;;;;;2248:30:0::1;-1:-1:-1::0;;;;;2248:30:0;;;::::1;::::0;;;::::1;::::0;;2108:177::o;2724:110::-;2772:7;2798:29;2819:7;2798:20;:29::i;:::-;2791:36;;2724:110;:::o;1424:72::-;1454:42;1424:72;:::o;2014:88::-;758:12:6;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;2078:8:0::1;:17:::0;2014:88::o;1745:23::-;;;;:::o;3932:254::-;758:12:6;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;4052:1:0::1;4017:6;-1:-1:-1::0;;;;;4010:24:0::1;;4043:4;4010:39;;;;;;;;;;;;;-1:-1:-1::0;;;;;4010:39:0::1;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4010:39:0;:43:::1;4002:85;;;::::0;;-1:-1:-1;;;4002:85:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;4121:16;::::0;4139:39:::1;::::0;;-1:-1:-1;;;4139:39:0;;4172:4:::1;4139:39;::::0;::::1;::::0;;;-1:-1:-1;;;;;4097:23:0;;::::1;::::0;::::1;::::0;4121:16;::::1;::::0;4097:23;;4139:24:::1;::::0;:39;;;;;::::1;::::0;;;;;;;;4097:23;4139:39;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;4139:39:0;4097:82:::1;::::0;;-1:-1:-1;;;;;;4097:82:0::1;::::0;;;;;;-1:-1:-1;;;;;4097:82:0;;::::1;;::::0;::::1;::::0;;;;;;;;;;;;;;4139:39:::1;::::0;4097:82;;;;;;;-1:-1:-1;4097:82:0;;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;;;3932:254:0:o;1167:145:6:-;758:12;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;1273:1:::1;1257:6:::0;;1236:40:::1;::::0;-1:-1:-1;;;;;1257:6:6;;::::1;::::0;1236:40:::1;::::0;1273:1;;1236:40:::1;1303:1;1286:19:::0;;-1:-1:-1;;;;;;1286:19:6::1;::::0;;1167:145::o;2291:209:0:-;2356:4;758:12:6;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;2380:24:0;::::1;2372:66;;;::::0;;-1:-1:-1;;;2372:66:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;2455:38;2473:7;2482:10;2455:17;:38::i;2840:122::-:0;2894:4;2917:38;2940:7;2949:5;2917:22;:38::i;1502:77::-;1537:42;1502:77;:::o;544::6:-;582:7;608:6;-1:-1:-1;;;;;608:6:6;544:77;:::o;3168:651:0:-;3228:17;3869:20;3878:10;3869:8;:20::i;:::-;3861:47;;;;;-1:-1:-1;;;3861:47:0;;;;;;;;;;;;-1:-1:-1;;;3861:47:0;;;;;;;;;;;;;;;3274:1:::1;3264:7;:11;3256:56;;;::::0;;-1:-1:-1;;;3256:56:0;;::::1;;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3322:8;:18:::0;;;3367:37:::1;::::0;;-1:-1:-1;;;3367:37:0;;3398:4:::1;3367:37:::0;;::::1;::::0;;;;;3333:7;;1376:42:::1;::::0;3367:22:::1;::::0;:37;;;;;::::1;::::0;;;;;;;;;1376:42;3367:37;::::1;;::::0;::::1;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3367:37:0;:49:::1;;3359:91;;;::::0;;-1:-1:-1;;;3359:91:0;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;3461:16;3479::::0;1537:42:::1;-1:-1:-1::0;;;;;3500:30:0::1;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;::::0;::::1;;-1:-1:-1::0;3500:32:0;;::::1;::::0;;::::1;::::0;3568:8:::1;::::0;3460:72:::1;::::0;;::::1;::::0;-1:-1:-1;3460:72:0;::::1;::::0;-1:-1:-1;3542:23:0::1;::::0;3568:17:::1;::::0;3581:3:::1;3568:12;:17::i;:::-;3542:43:::0;-1:-1:-1;3641:39:0::1;3542:43:::0;3641:18:::1;:8:::0;3654:4:::1;3641:12;:18::i;:::-;:22:::0;::::1;:39::i;:::-;3607:31;3629:8;3607:17;3620:3;3607:8;;:12;;:17;;;;:::i;:::-;:21:::0;::::1;:31::i;:::-;:73;;;;;3726:8;::::0;3607:73;;::::1;::::0;-1:-1:-1;3690:45:0::1;::::0;1376:42:::1;::::0;1537::::1;::::0;3690:25:::1;:45::i;:::-;3799:12;::::0;;3780:1:::1;3799:12:::0;;;::::1;::::0;::::1;::::0;;;;-1:-1:-1;;;3745:67:0;;;;;;;;;;;;;;1626:42:::1;3745:67:::0;;;;;;;;;;;;;;;;;;;;;1537:42:::1;::::0;3745:23:::1;::::0;3769:9;;3780:1;3799:12;;3745:67;;;;;;;;;;3799:12;3780:1;3745:67:::1;;;;;;;::::0;;::::1;::::0;;;::::1;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;3918:1;;;3168:651:::0;;;:::o;2968:194::-;3024:7;3080:1;3060:17;:15;:17::i;:::-;:21;3050:6;:31;;3042:63;;;;;-1:-1:-1;;;3042:63:0;;;;;;;;;;;;-1:-1:-1;;;3042:63:0;;;;;;;;;;;;;;;3122:33;3139:7;3148:6;3122:16;:33::i;1345:73::-;1376:42;1345:73;:::o;1585:83::-;1626:42;1585:83;:::o;1461:240:6:-;758:12;:10;:12::i;:::-;748:6;;-1:-1:-1;;;;;748:6:6;;;:22;;;740:67;;;;;-1:-1:-1;;;740:67:6;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;740:67:6;;;;;;;;;;;;;;;-1:-1:-1;;;;;1549:22:6;::::1;1541:73;;;;-1:-1:-1::0;;;1541:73:6::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1650:6;::::0;;1629:38:::1;::::0;-1:-1:-1;;;;;1629:38:6;;::::1;::::0;1650:6;::::1;::::0;1629:38:::1;::::0;::::1;1677:6;:17:::0;;-1:-1:-1;;;;;;1677:17:6::1;-1:-1:-1::0;;;;;1677:17:6;;;::::1;::::0;;;::::1;::::0;;1461:240::o;1691:31:0:-;;;-1:-1:-1;;;;;1691:31:0;;:::o;58:104:4:-;145:10;58:104;:::o;5985:147:5:-;6058:4;6081:44;6089:3;-1:-1:-1;;;;;6109:14:5;;6081:7;:44::i;:::-;6074:51;5985:147;-1:-1:-1;;;5985:147:5:o;6450:115::-;6513:7;6539:19;6547:3;6539:7;:19::i;5676:141::-;5746:4;5769:41;5774:3;-1:-1:-1;;;;;5794:14:5;;5769:4;:41::i;6213:156::-;6293:4;6316:46;6326:3;-1:-1:-1;;;;;6346:14:5;;6316:9;:46::i;1584:459:8:-;1642:7;1883:6;1879:45;;-1:-1:-1;1912:1:8;1905:8;;1879:45;1946:5;;;1950:1;1946;:5;:1;1969:5;;;;;:10;1961:56;;;;-1:-1:-1;;;1961:56:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;278:176;336:7;367:5;;;390:6;;;;382:46;;;;;-1:-1:-1;;;382:46:8;;;;;;;;;;;;;;;;;;;;;;;;;;;198:175:7;307:58;;;-1:-1:-1;;;;;307:58:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;307:58:7;-1:-1:-1;;;307:58:7;;;280:86;;300:5;;280:19;:86::i;6897:147:5:-;6971:7;7013:22;7017:3;7029:5;7013:3;:22::i;1459:1512::-;1525:4;1662:19;;;:12;;;:19;;;;;;1696:15;;1692:1273;;2125:18;;-1:-1:-1;;2077:14:5;;;;2125:22;;;;2053:21;;2125:3;;:22;;2407;;;;;;;;;;;;;;2387:42;;2550:9;2521:3;:11;;2533:13;2521:26;;;;;;;;;;;;;;;;;;;:38;;;;2625:23;;;2667:1;2625:12;;;:23;;;;;;2651:17;;;2625:43;;2774:17;;2625:3;;2774:17;;;;;;;;;;;;;;;;;;;;;;2866:3;:12;;:19;2879:5;2866:19;;;;;;;;;;;2859:26;;;2907:4;2900:11;;;;;;;;1692:1273;2949:5;2942:12;;;;;3260:107;3342:18;;3260:107::o;887:404::-;950:4;971:21;981:3;986:5;971:9;:21::i;:::-;966:319;;-1:-1:-1;1008:23:5;;;;;;;;:11;:23;;;;;;;;;;;;;1188:18;;1166:19;;;:12;;;:19;;;;;;:40;;;;1220:11;;966:319;-1:-1:-1;1269:5:5;1262:12;;3052:127;3125:4;3148:19;;;:12;;;;;:19;;;;;;:24;;;3052:127::o;2461:751:7:-;2880:23;2906:69;2934:4;2906:69;;;;;;;;;;;;;;;;;2914:5;-1:-1:-1;;;;;2906:27:7;;;:69;;;;;:::i;:::-;2989:17;;2880:95;;-1:-1:-1;2989:21:7;2985:221;;3129:10;3118:30;;;;;;;;;;;;;;;-1:-1:-1;3118:30:7;3110:85;;;;-1:-1:-1;;;3110:85:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3699:201:5;3793:18;;3766:7;;3793:26;-1:-1:-1;3785:73:5;;;;-1:-1:-1;;;3785:73:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3875:3;:11;;3887:5;3875:18;;;;;;;;;;;;;;;;3868:25;;3699:201;;;;:::o;3473:193:3:-;3576:12;3607:52;3629:6;3637:4;3643:1;3646:12;3607:21;:52::i;:::-;3600:59;3473:193;-1:-1:-1;;;;3473:193:3:o;4500:523::-;4627:12;4684:5;4659:21;:30;;4651:81;;;;-1:-1:-1;;;4651:81:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4750:18;4761:6;4750:10;:18::i;:::-;4742:60;;;;;-1:-1:-1;;;4742:60:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;4873:12;4887:23;4914:6;-1:-1:-1;;;;;4914:11:3;4934:5;4942:4;4914:33;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4914:33:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4872:75;;;;4964:52;4982:7;4991:10;5003:12;4964:17;:52::i;:::-;4957:59;4500:523;-1:-1:-1;;;;;;;4500:523:3:o;618:413::-;978:20;1016:8;;;618:413::o;6003:725::-;6118:12;6146:7;6142:580;;;-1:-1:-1;6176:10:3;6169:17;;6142:580;6287:17;;:21;6283:429;;6545:10;6539:17;6605:15;6592:10;6588:2;6584:19;6577:44;6494:145;6684:12;6677:20;;-1:-1:-1;;;6677:20:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1059000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ROO()": "309",
								"ROO_USDT()": "264",
								"USDT()": "263",
								"addCaller(address)": "infinite",
								"amountIn()": "1043",
								"delCaller(address)": "infinite",
								"destroyAddress()": "285",
								"emergencyAddress()": "1147",
								"emergencyWithdraw(address)": "infinite",
								"getCaller(uint256)": "infinite",
								"getCallerLength()": "1141",
								"isCaller(address)": "1277",
								"owner()": "1104",
								"renounceOwnership()": "infinite",
								"setAmountIn(uint256)": "infinite",
								"setEmergencyAddress(address)": "infinite",
								"swap(uint256)": "infinite",
								"transferOwnership(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "CODESIZE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSHSIZE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "LT",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "tag",
									"source": 0,
									"value": "2"
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1839,
									"end": 2008,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 343,
									"end": 360,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 363,
									"end": 375,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 363,
									"end": 373,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "7"
								},
								{
									"begin": 363,
									"end": 375,
									"name": "JUMP",
									"source": 6,
									"value": "[in]"
								},
								{
									"begin": 363,
									"end": 375,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 363,
									"end": 375,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 385,
									"end": 391,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 385,
									"end": 403,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 385,
									"end": 403,
									"name": "AND",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 385,
									"end": 403,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 418,
									"end": 461,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 418,
									"end": 461,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 385,
									"end": 403,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 418,
									"end": 461,
									"name": "PUSH",
									"source": 6,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 418,
									"end": 461,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 385,
									"end": 391,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 385,
									"end": 391,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 418,
									"end": 461,
									"name": "LOG3",
									"source": 6
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1904,
									"end": 1935,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1904,
									"end": 1935,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "461BCD"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E5"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "F"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4973207A65726F2061646472657373"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "88"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "44"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "PUSH",
									"source": 0,
									"value": "64"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 1896,
									"end": 1955,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 1981,
									"name": "PUSH",
									"source": 0,
									"value": "3"
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "AND",
									"source": 0
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "A0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1965,
									"end": 2001,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 58,
									"end": 162,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 58,
									"end": 162,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 145,
									"end": 155,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 58,
									"end": 162,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 58,
									"end": 162,
									"name": "JUMP",
									"source": 4,
									"value": "[out]"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 199,
									"end": 4188,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122075ed3ce19bc6a13a56c51118bf9bb6f6763a8c228ab27a11e037aea2f58e43da64736f6c634300060c0033",
									".code": [
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "7AC07DCC"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "A8B0B3ED"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "A8B0B3ED"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "C54E44EB"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "D12D9F15"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "F2FDE38B"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "FDDF3F73"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "7AC07DCC"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "8C2F9410"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "8DA5CB5B"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "94B918DE"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "6717F5B0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "6717F5B0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "6BED55A6"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "6FF1C9BC"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "715018A6"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "747293FB"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "231A418C"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "2AA11FFB"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "42177A58"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "5793D0AF"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 199,
											"end": 4188,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "tag",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "35"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "10"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "14"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 544,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "32"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "19"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "CALLDATASIZE",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "65"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2571,
											"end": 2575,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "70"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "72"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2595,
											"end": 2619,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "44656C43616C6C657220697320746865207A65726F2061646472657373000000"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2587,
											"end": 2653,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2711,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2691,
											"end": 2698,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2700,
											"end": 2710,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2670,
											"end": 2690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 2670,
											"end": 2711,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2670,
											"end": 2711,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2670,
											"end": 2711,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2663,
											"end": 2711,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2506,
											"end": 2718,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "78"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "79"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2193,
											"end": 2218,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "F"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4973207A65726F2061646472657373"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "88"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 2185,
											"end": 2238,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2264,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2248,
											"end": 2278,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2108,
											"end": 2285,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "tag",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2772,
											"end": 2779,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2798,
											"end": 2827,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2798,
											"end": 2818,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 2798,
											"end": 2827,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2798,
											"end": 2827,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 2798,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2827,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2791,
											"end": 2827,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2724,
											"end": 2834,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1454,
											"end": 1496,
											"name": "PUSH",
											"source": 0,
											"value": "ADDEB3A8FB46DDC3FEE55085B6AD8DAB4C4FC771"
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1424,
											"end": 1496,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "86"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "87"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2078,
											"end": 2086,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2078,
											"end": 2095,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2014,
											"end": 2102,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1745,
											"end": 1768,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "91"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4052,
											"end": 4053,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4017,
											"end": 4023,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4034,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4043,
											"end": 4047,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4010,
											"end": 4049,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4010,
											"end": 4053,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 4002,
											"end": 4087,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4172,
											"end": 4176,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "PUSH",
											"source": 0,
											"value": "A9059CBB"
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4121,
											"end": 4137,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4163,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 4139,
											"end": 4163,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4120,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "tag",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4139,
											"end": 4178,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 4097,
											"end": 4179,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3932,
											"end": 4186,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "tag",
											"source": 6,
											"value": "43"
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "107"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "108"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1276,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1236,
											"end": 1276,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1257,
											"end": 1263,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1276,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1236,
											"end": 1276,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1273,
											"end": 1274,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1236,
											"end": 1276,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1303,
											"end": 1304,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1286,
											"end": 1305,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1167,
											"end": 1312,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "tag",
											"source": 0,
											"value": "46"
										},
										{
											"begin": 2291,
											"end": 2500,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2356,
											"end": 2360,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "111"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "112"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2380,
											"end": 2404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2380,
											"end": 2404,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "4E657743616C6C657220697320746865207A65726F2061646472657373000000"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 2372,
											"end": 2438,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2473,
											"end": 2480,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2482,
											"end": 2492,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2472,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2455,
											"end": 2493,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2840,
											"end": 2962,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2894,
											"end": 2898,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2917,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 2940,
											"end": 2947,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2917,
											"end": 2939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2917,
											"end": 2955,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "PUSH",
											"source": 0,
											"value": "C05BB03BB7BFEB243EF364F544C81DD9A07040A2"
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1502,
											"end": 1579,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "tag",
											"source": 6,
											"value": "53"
										},
										{
											"begin": 544,
											"end": 621,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 582,
											"end": 589,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 608,
											"end": 614,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 608,
											"end": 614,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 544,
											"end": 621,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 544,
											"end": 621,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "tag",
											"source": 0,
											"value": "56"
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3228,
											"end": 3245,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3878,
											"end": 3888,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 3869,
											"end": 3877,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "tag",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 3869,
											"end": 3889,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "E"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA103A34329031B0B63632B9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "91"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3861,
											"end": 3908,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3274,
											"end": 3275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3264,
											"end": 3271,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3264,
											"end": 3275,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "416D6F756E74206D7573742062652067726561746572207468616E207A65726F"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3256,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3330,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3322,
											"end": 3340,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70A08231"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3398,
											"end": 3402,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3340,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3333,
											"end": 3340,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "A71EDC38D189767582C38A3145B5873052C3E47A"
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "PUSH",
											"source": 0,
											"value": "70A08231"
										},
										{
											"begin": 3367,
											"end": 3389,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3367,
											"end": 3404,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3416,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3367,
											"end": 3416,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "1D"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "496E73756666696369656E7420636F6E74726163742062616C616E6365000000"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 3359,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3461,
											"end": 3477,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3479,
											"end": 3495,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "PUSH",
											"source": 0,
											"value": "C05BB03BB7BFEB243EF364F544C81DD9A07040A2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3530,
											"name": "PUSH",
											"source": 0,
											"value": "902F1AC"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "133"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3500,
											"end": 3532,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3576,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3568,
											"end": 3576,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3532,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3542,
											"end": 3565,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3581,
											"end": 3584,
											"name": "PUSH",
											"source": 0,
											"value": "3E5"
										},
										{
											"begin": 3568,
											"end": 3580,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 3568,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3542,
											"end": 3585,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3641,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3542,
											"end": 3585,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3641,
											"end": 3649,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3654,
											"end": 3658,
											"name": "PUSH",
											"source": 0,
											"value": "3E8"
										},
										{
											"begin": 3641,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "tag",
											"source": 0,
											"value": "138"
										},
										{
											"begin": 3641,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3663,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3641,
											"end": 3663,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "139"
										},
										{
											"begin": 3641,
											"end": 3680,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3641,
											"end": 3680,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 3641,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3629,
											"end": 3637,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3620,
											"end": 3623,
											"name": "PUSH",
											"source": 0,
											"value": "3E5"
										},
										{
											"begin": 3607,
											"end": 3615,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3607,
											"end": 3615,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3619,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3607,
											"end": 3619,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "tag",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 3607,
											"end": 3624,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 3607,
											"end": 3638,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3607,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "140"
										},
										{
											"begin": 3607,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "INVALID",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "tag",
											"source": 0,
											"value": "142"
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3726,
											"end": 3734,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3726,
											"end": 3734,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3607,
											"end": 3680,
											"name": "SWAP5",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3690,
											"end": 3735,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3690,
											"end": 3735,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "A71EDC38D189767582C38A3145B5873052C3E47A"
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "PUSH",
											"source": 0,
											"value": "C05BB03BB7BFEB243EF364F544C81DD9A07040A2"
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3690,
											"end": 3715,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "144"
										},
										{
											"begin": 3690,
											"end": 3735,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3690,
											"end": 3735,
											"name": "tag",
											"source": 0,
											"value": "143"
										},
										{
											"begin": 3690,
											"end": 3735,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "22C0D9F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "A4"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "PUSH",
											"source": 0,
											"value": "C05BB03BB7BFEB243EF364F544C81DD9A07040A2"
										},
										{
											"begin": 1537,
											"end": 1579,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3768,
											"name": "PUSH",
											"source": 0,
											"value": "22C0D9F"
										},
										{
											"begin": 3745,
											"end": 3768,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "DUP13",
											"source": 0
										},
										{
											"begin": 3769,
											"end": 3778,
											"name": "SWAP7",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "C4"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3799,
											"end": 3811,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3780,
											"end": 3781,
											"name": "DUP11",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "147"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "149"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "150"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SWAP6",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "151"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3745,
											"end": 3812,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3918,
											"end": 3919,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3168,
											"end": 3819,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 2968,
											"end": 3162,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3031,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3080,
											"end": 3081,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3060,
											"end": 3075,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 3060,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3060,
											"end": 3081,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3056,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3081,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 3050,
											"end": 3081,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "696E646578206F7574206F6620626F756E6473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "68"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "PUSH",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 3042,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3155,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 3139,
											"end": 3146,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3148,
											"end": 3154,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3122,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "158"
										},
										{
											"begin": 3122,
											"end": 3155,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1376,
											"end": 1418,
											"name": "PUSH",
											"source": 0,
											"value": "A71EDC38D189767582C38A3145B5873052C3E47A"
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1345,
											"end": 1418,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1626,
											"end": 1668,
											"name": "PUSH",
											"source": 0,
											"value": "DEAD"
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1585,
											"end": 1668,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "tag",
											"source": 6,
											"value": "66"
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 758,
											"end": 770,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 758,
											"end": 768,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "71"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMP",
											"source": 6,
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "tag",
											"source": 6,
											"value": "160"
										},
										{
											"begin": 758,
											"end": 770,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 748,
											"end": 754,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 754,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 748,
											"end": 770,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "44"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "PUSH",
											"source": 6,
											"value": "64"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 740,
											"end": 807,
											"name": "tag",
											"source": 6,
											"value": "161"
										},
										{
											"begin": 740,
											"end": 807,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1549,
											"end": 1571,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1549,
											"end": 1571,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH data",
											"source": 6,
											"value": "245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "26"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "CODECOPY",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "tag",
											"source": 6,
											"value": "163"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1650,
											"end": 1656,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "PUSH",
											"source": 6,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1629,
											"end": 1667,
											"name": "LOG3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1683,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1677,
											"end": 1694,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1461,
											"end": 1701,
											"name": "JUMP",
											"source": 6,
											"value": "[out]"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "PUSH",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1691,
											"end": 1722,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 58,
											"end": 162,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 58,
											"end": 162,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 145,
											"end": 155,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 58,
											"end": 162,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 58,
											"end": 162,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5985,
											"end": 6132,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 5985,
											"end": 6132,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6058,
											"end": 6062,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6081,
											"end": 6125,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6089,
											"end": 6092,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6109,
											"end": 6123,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6088,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 6081,
											"end": 6125,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6081,
											"end": 6125,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6081,
											"end": 6125,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6074,
											"end": 6125,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5985,
											"end": 6132,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5985,
											"end": 6132,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6450,
											"end": 6565,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 6450,
											"end": 6565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6513,
											"end": 6520,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 6547,
											"end": 6550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6539,
											"end": 6546,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 6539,
											"end": 6558,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5676,
											"end": 5817,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5676,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5746,
											"end": 5750,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5769,
											"end": 5810,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 5774,
											"end": 5777,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5794,
											"end": 5808,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5794,
											"end": 5808,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5769,
											"end": 5773,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 5769,
											"end": 5810,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6213,
											"end": 6369,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 6213,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6316,
											"end": 6362,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 6326,
											"end": 6329,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6346,
											"end": 6360,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6346,
											"end": 6360,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 6316,
											"end": 6325,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 6316,
											"end": 6362,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1584,
											"end": 2043,
											"name": "tag",
											"source": 8,
											"value": "136"
										},
										{
											"begin": 1584,
											"end": 2043,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1642,
											"end": 1649,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1883,
											"end": 1889,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1924,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1879,
											"end": 1924,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 1905,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "75"
										},
										{
											"begin": 1905,
											"end": 1913,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1879,
											"end": 1924,
											"name": "tag",
											"source": 8,
											"value": "178"
										},
										{
											"begin": 1879,
											"end": 1924,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "MUL",
											"source": 8
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "DUP5",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1951,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1946,
											"end": 1947,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "INVALID",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "tag",
											"source": 8,
											"value": "179"
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1974,
											"name": "DIV",
											"source": 8
										},
										{
											"begin": 1969,
											"end": 1979,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH data",
											"source": 8,
											"value": "9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "21"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "CODECOPY",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1961,
											"end": 2017,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 278,
											"end": 454,
											"name": "tag",
											"source": 8,
											"value": "139"
										},
										{
											"begin": 278,
											"end": 454,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 336,
											"end": 343,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 367,
											"end": 372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 367,
											"end": 372,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 367,
											"end": 372,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 390,
											"end": 396,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 390,
											"end": 396,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 390,
											"end": 396,
											"name": "LT",
											"source": 8
										},
										{
											"begin": 390,
											"end": 396,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "166"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "20"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "1B"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "24"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "536166654D6174683A206164646974696F6E206F766572666C6F770000000000"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "44"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "PUSH",
											"source": 8,
											"value": "64"
										},
										{
											"begin": 382,
											"end": 428,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 382,
											"end": 428,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 198,
											"end": 373,
											"name": "tag",
											"source": 7,
											"value": "144"
										},
										{
											"begin": 198,
											"end": 373,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "24"
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "64"
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 307,
											"end": 365,
											"name": "AND",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 307,
											"end": 365,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 307,
											"end": 365,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 280,
											"end": 366,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 280,
											"end": 366,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 300,
											"end": 305,
											"name": "DUP5",
											"source": 7
										},
										{
											"begin": 300,
											"end": 305,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 280,
											"end": 299,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 280,
											"end": 366,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 6897,
											"end": 7044,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6897,
											"end": 7044,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6971,
											"end": 6978,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7013,
											"end": 7035,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7017,
											"end": 7020,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7029,
											"end": 7034,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7013,
											"end": 7016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 7013,
											"end": 7035,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1459,
											"end": 2971,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1459,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1529,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1662,
											"end": 1681,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1696,
											"end": 1711,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 2965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1692,
											"end": 2965,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2143,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2077,
											"end": 2091,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2091,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2091,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2077,
											"end": 2091,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2074,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2128,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2147,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2429,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2429,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2387,
											"end": 2429,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2550,
											"end": 2559,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2524,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2532,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2532,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2533,
											"end": 2546,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2547,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2521,
											"end": 2559,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2667,
											"end": 2668,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2625,
											"end": 2637,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2637,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2637,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2648,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2668,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2651,
											"end": 2668,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2668,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2668,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2628,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2625,
											"end": 2628,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2791,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2878,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2866,
											"end": 2878,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2879,
											"end": 2884,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2866,
											"end": 2885,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2859,
											"end": 2885,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2859,
											"end": 2885,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 2907,
											"end": 2911,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2900,
											"end": 2911,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1692,
											"end": 2965,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 1692,
											"end": 2965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2949,
											"end": 2954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2942,
											"end": 2954,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3367,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 3260,
											"end": 3367,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3342,
											"end": 3360,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3260,
											"end": 3367,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 887,
											"end": 1291,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 887,
											"end": 1291,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 950,
											"end": 954,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 971,
											"end": 992,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 981,
											"end": 984,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 971,
											"end": 980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 971,
											"end": 992,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 971,
											"end": 992,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 971,
											"end": 992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1285,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 966,
											"end": 1285,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1019,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1008,
											"end": 1031,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1178,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1185,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1166,
											"end": 1206,
											"name": "SSTORE",
											"source": 5
										},
										{
											"begin": 1220,
											"end": 1231,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1220,
											"end": 1231,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 966,
											"end": 1285,
											"name": "tag",
											"source": 5,
											"value": "201"
										},
										{
											"begin": 966,
											"end": 1285,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1269,
											"end": 1274,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1262,
											"end": 1274,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3179,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 3052,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3125,
											"end": 3129,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3160,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3167,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3172,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3172,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3148,
											"end": 3172,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3052,
											"end": 3179,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2461,
											"end": 3212,
											"name": "tag",
											"source": 7,
											"value": "185"
										},
										{
											"begin": 2461,
											"end": 3212,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2903,
											"name": "PUSH",
											"source": 7,
											"value": "60"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2934,
											"end": 2938,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "5361666545524332303A206C6F772D6C6576656C2063616C6C206661696C6564"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2914,
											"end": 2919,
											"name": "DUP6",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2906,
											"end": 2933,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2933,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "207"
										},
										{
											"begin": 2906,
											"end": 2933,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "PUSH",
											"source": 7,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "JUMP",
											"source": 7,
											"value": "[in]"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "tag",
											"source": 7,
											"value": "206"
										},
										{
											"begin": 2906,
											"end": 2975,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3006,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2989,
											"end": 3006,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2975,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2880,
											"end": 2975,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2989,
											"end": 3010,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2985,
											"end": 3206,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 2985,
											"end": 3206,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3129,
											"end": 3139,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "LT",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "tag",
											"source": 7,
											"value": "209"
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3118,
											"end": 3148,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "105"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP3",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "20"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH data",
											"source": 7,
											"value": "E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "2A"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "CODECOPY",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 3110,
											"end": 3195,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3811,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3766,
											"end": 3773,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH data",
											"source": 5,
											"value": "45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "CODECOPY",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3785,
											"end": 3858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3878,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3886,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3887,
											"end": 3892,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "INVALID",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "KECCAK256",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3875,
											"end": 3893,
											"name": "SLOAD",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3893,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3868,
											"end": 3893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3699,
											"end": 3900,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3473,
											"end": 3666,
											"name": "tag",
											"source": 3,
											"value": "207"
										},
										{
											"begin": 3473,
											"end": 3666,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3576,
											"end": 3588,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 3607,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3629,
											"end": 3635,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3637,
											"end": 3641,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 3643,
											"end": 3644,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3658,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 3607,
											"end": 3628,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 3607,
											"end": 3659,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 3607,
											"end": 3659,
											"name": "tag",
											"source": 3,
											"value": "216"
										},
										{
											"begin": 3607,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 3600,
											"end": 3659,
											"name": "SWAP5",
											"source": 3
										},
										{
											"begin": 3473,
											"end": 3666,
											"name": "SWAP4",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3473,
											"end": 3666,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 4500,
											"end": 5023,
											"name": "tag",
											"source": 3,
											"value": "217"
										},
										{
											"begin": 4500,
											"end": 5023,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4627,
											"end": 4639,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4684,
											"end": 4689,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4680,
											"name": "SELFBALANCE",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4689,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4659,
											"end": 4689,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH data",
											"source": 3,
											"value": "565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "26"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "CODECOPY",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 4651,
											"end": 4732,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4761,
											"end": 4767,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4750,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 4750,
											"end": 4768,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "1D"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "24"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "416464726573733A2063616C6C20746F206E6F6E2D636F6E7472616374000000"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "44"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "PUSH",
											"source": 3,
											"value": "64"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "tag",
											"source": 3,
											"value": "222"
										},
										{
											"begin": 4742,
											"end": 4802,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4887,
											"end": 4910,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4914,
											"end": 4920,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4925,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4934,
											"end": 4939,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4942,
											"end": 4946,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "tag",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "223"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP6",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP8",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "CALL",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "3F"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "tag",
											"source": 3,
											"value": "228"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "tag",
											"source": 3,
											"value": "227"
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4914,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4947,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 4872,
											"end": 4947,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4982,
											"end": 4989,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 4991,
											"end": 5001,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 5003,
											"end": 5015,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 4964,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "JUMP",
											"source": 3,
											"value": "[in]"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "tag",
											"source": 3,
											"value": "229"
										},
										{
											"begin": 4964,
											"end": 5016,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4957,
											"end": 5016,
											"name": "SWAP8",
											"source": 3
										},
										{
											"begin": 4500,
											"end": 5023,
											"name": "SWAP7",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4500,
											"end": 5023,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 618,
											"end": 1031,
											"name": "tag",
											"source": 3,
											"value": "221"
										},
										{
											"begin": 618,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 978,
											"end": 998,
											"name": "EXTCODESIZE",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1024,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1024,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1016,
											"end": 1024,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 618,
											"end": 1031,
											"name": "JUMP",
											"source": 3,
											"value": "[out]"
										},
										{
											"begin": 6003,
											"end": 6728,
											"name": "tag",
											"source": 3,
											"value": "230"
										},
										{
											"begin": 6003,
											"end": 6728,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6118,
											"end": 6130,
											"name": "PUSH",
											"source": 3,
											"value": "60"
										},
										{
											"begin": 6146,
											"end": 6153,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6722,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6722,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6142,
											"end": 6722,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6176,
											"end": 6186,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "166"
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6142,
											"end": 6722,
											"name": "tag",
											"source": 3,
											"value": "233"
										},
										{
											"begin": 6142,
											"end": 6722,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6304,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6304,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6287,
											"end": 6308,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6283,
											"end": 6712,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6283,
											"end": 6712,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6545,
											"end": 6555,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6539,
											"end": 6556,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6605,
											"end": 6620,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6592,
											"end": 6602,
											"name": "DUP5",
											"source": 3
										},
										{
											"begin": 6588,
											"end": 6590,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6584,
											"end": 6603,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6577,
											"end": 6621,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 6494,
											"end": 6639,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 6494,
											"end": 6639,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6684,
											"end": 6696,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "tag",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "237"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "tag",
											"source": 3,
											"value": "239"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "100"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "EXP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "tag",
											"source": 3,
											"value": "240"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 6677,
											"end": 6697,
											"name": "REVERT",
											"source": 3
										}
									],
									".data": {
										"245F15FF17F551913A7A18385165551503906A406F905AC1C2437281A7CD0CFE": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
										"45D6834E6193A687012A3AD777F612279E549B6945364D9D2324F48610D3CBB": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
										"565F1A77334FC4792800921178C71E4521ACFFAB18FF9E7885B49377EE80AB4C": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
										"9113BB53C2876A3805B2C9242029423FC540A728243CE887AB24C82CF119FBA3": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
										"9924EBDF1ADD33D25D4EF888E16131F0A5687B0580A36C21B5C301A6C462EFFE": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
										"E11AD79D1E4A7F2E5F376964CB99E8E8F7904E3FC16A109F7A7ECB9AA7956DCD": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564"
									}
								}
							}
						},
						"methodIdentifiers": {
							"ROO()": "5793d0af",
							"ROO_USDT()": "8c2f9410",
							"USDT()": "c54e44eb",
							"addCaller(address)": "747293fb",
							"amountIn()": "6bed55a6",
							"delCaller(address)": "231a418c",
							"destroyAddress()": "d12d9f15",
							"emergencyAddress()": "fddf3f73",
							"emergencyWithdraw(address)": "6ff1c9bc",
							"getCaller(uint256)": "a8b0b3ed",
							"getCallerLength()": "42177a58",
							"isCaller(address)": "7ac07dcc",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"setAmountIn(uint256)": "6717f5b0",
							"setEmergencyAddress(address)": "2aa11ffb",
							"swap(uint256)": "94b918de",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_emergencyAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ROO\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ROO_USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newCaller\",\"type\":\"address\"}],\"name\":\"addCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountIn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_delCaller\",\"type\":\"address\"}],\"name\":\"delCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"destroyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"emergencyAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"emergencyWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"}],\"name\":\"getCaller\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCallerLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_call\",\"type\":\"address\"}],\"name\":\"isCaller\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newIn\",\"type\":\"uint256\"}],\"name\":\"setAmountIn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAddress\",\"type\":\"address\"}],\"name\":\"setEmergencyAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/ROO_Repurchase.sol\":\"Repurchase\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/ROO_Repurchase.sol\":{\"keccak256\":\"0x8c775839df62194859331de5a91450aabbc768983ae5986be407f645fec4af62\",\"urls\":[\"bzz-raw://b46d90429cf65142b91657b5456dbf910bcb237417035315327aa9a5767e59cc\",\"dweb:/ipfs/Qmdusc5dEABLNjVAmJfZxzJhk3wMyQPo45qzwfnJmFvpgL\"]},\"ROO_Repurchase/contracts/interface/IBxhPair.sol\":{\"keccak256\":\"0xdab09fb6a3159fd2d4ac4d1269530d7c51f51be16c1fbcd393f5bbebe65afef0\",\"urls\":[\"bzz-raw://d68e162bf6d54b523b29591d213b5949503fc0c4ad58bd2cba40c0f038a8e06d\",\"dweb:/ipfs/QmQEKCikRJPWzDozhvG1bWx5Ap7uBVHLirAV8Fhz8o2yq3\"]},\"ROO_Repurchase/contracts/interface/IERC20.sol\":{\"keccak256\":\"0x95bd15a4236be3a8c397bb8efb4e63831dcc882ea897441f21aca1e8dcde8484\",\"urls\":[\"bzz-raw://c2d5f9b8b0b37e3de60e9a5a850e1ebb482c89e8ff33dd8ae9e3b8fc7469f46c\",\"dweb:/ipfs/QmPLuY51jTPy5wZboWDTZgdsRdeyU6PJTAYfxwvSD6QLbi\"]},\"ROO_Repurchase/contracts/library/Address.sol\":{\"keccak256\":\"0x28433e5e22c7df13113658747c4cca17a1696634ebf2a1d59b4fe9866004e24a\",\"urls\":[\"bzz-raw://4e5d49c9acdb47c4152a84593a6ec41d09a3e21c6f268675b59bd3a425f21d2a\",\"dweb:/ipfs/QmZnJfsPVV7i42x6wZR98JSndQXtA8YXuQmJeMfCpSGkgE\"]},\"ROO_Repurchase/contracts/library/Context.sol\":{\"keccak256\":\"0xf63ca8ce53c902257179260d241e13a13179e7134637776981094270a1281714\",\"urls\":[\"bzz-raw://d1176ba537d326c802cc7376e6a23a4fd472278e2b4d9f90f4d6d21c8ba49829\",\"dweb:/ipfs/QmNuuL6gRBcEphXZWWDLaH9pBJkKMSMpnnt1CA3BgQDEYs\"]},\"ROO_Repurchase/contracts/library/EnumerableSet.sol\":{\"keccak256\":\"0x008ac67f0a19919ae5dd76643412b407c854901fb7fa7c07ae9fae1bd8372ce2\",\"urls\":[\"bzz-raw://1b896ce5205ad7bc742e7e5f3f6d990e64fd887b5aa7216eb95190f48286554a\",\"dweb:/ipfs/QmRFwz4bGggxmAuxb2cTRSAz6GqK9uqZH2g8joY947CtWD\"]},\"ROO_Repurchase/contracts/library/Ownable.sol\":{\"keccak256\":\"0x2212c9692d625b55ec06d1578e4ca15612cec9c565e57c213a5a0fb7bf630ffd\",\"urls\":[\"bzz-raw://291e1a13ad1c786faaf73df8ae2b7aa6ec792c2023aedf2f2a757d261b1ce973\",\"dweb:/ipfs/QmSBeUyeuFEAKqxwv3MQSYToEDPThCX2TBJn7F4dMzeXi2\"]},\"ROO_Repurchase/contracts/library/SafeERC20.sol\":{\"keccak256\":\"0x9d8a93f488dfa28c65e93f732461211e099ed0b4f2bb7fdaaea0b8e25e35cab0\",\"urls\":[\"bzz-raw://139405cbe6f3daee0d8a0f32d27f212e9034f870b1c35ccd817f7e41606af269\",\"dweb:/ipfs/Qmbg9u7RgW25EQQBhUjvoWoh6H61v5W6ZgHTYU6qMHRiBb\"]},\"ROO_Repurchase/contracts/library/SafeMath.sol\":{\"keccak256\":\"0xf80a234b67630d85a7ca2da332167d683d344ad7100b904bb808585b86ab0a26\",\"urls\":[\"bzz-raw://7bed3dcf7784c76717ccb2efa49f9bb8fcbd1fdf455e2bfd537605ec4ac71bb0\",\"dweb:/ipfs/QmWjjJhDDNf5nmhwqRyEpmsCGiBwkj5mbdTp1wY3EyQWuX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1413,
								"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 19,
								"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
								"label": "_caller",
								"offset": 0,
								"slot": "1",
								"type": "t_struct(AddressSet)1202_storage"
							},
							{
								"astId": 33,
								"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
								"label": "emergencyAddress",
								"offset": 0,
								"slot": "3",
								"type": "t_address"
							},
							{
								"astId": 35,
								"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
								"label": "amountIn",
								"offset": 0,
								"slot": "4",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_bytes32)dyn_storage": {
								"base": "t_bytes32",
								"encoding": "dynamic_array",
								"label": "bytes32[]",
								"numberOfBytes": "32"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_bytes32,t_uint256)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(AddressSet)1202_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.AddressSet",
								"members": [
									{
										"astId": 1201,
										"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
										"label": "_inner",
										"offset": 0,
										"slot": "0",
										"type": "t_struct(Set)937_storage"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Set)937_storage": {
								"encoding": "inplace",
								"label": "struct EnumerableSet.Set",
								"members": [
									{
										"astId": 932,
										"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
										"label": "_values",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_bytes32)dyn_storage"
									},
									{
										"astId": 936,
										"contract": "ROO_Repurchase/contracts/ROO_Repurchase.sol:Repurchase",
										"label": "_indexes",
										"offset": 0,
										"slot": "1",
										"type": "t_mapping(t_bytes32,t_uint256)"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/interface/IBxhPair.sol": {
				"IBxhPair": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Burn",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"name": "Mint",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1In",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "Swap",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"indexed": false,
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								}
							],
							"name": "Sync",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINIMUM_LIQUIDITY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "burn",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount0",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "factory",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getReserves",
							"outputs": [
								{
									"internalType": "uint112",
									"name": "reserve0",
									"type": "uint112"
								},
								{
									"internalType": "uint112",
									"name": "reserve1",
									"type": "uint112"
								},
								{
									"internalType": "uint32",
									"name": "blockTimestampLast",
									"type": "uint32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "kLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "mint",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "baseDecimal",
									"type": "uint256"
								}
							],
							"name": "price",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price0CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "price1CumulativeLast",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								}
							],
							"name": "skim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount0Out",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount1Out",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "swap",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "sync",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token0",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "token1",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"MINIMUM_LIQUIDITY()": "ba9a7a56",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address)": "89afcb44",
							"decimals()": "313ce567",
							"factory()": "c45a0155",
							"getReserves()": "0902f1ac",
							"initialize(address,address)": "485cc955",
							"kLast()": "7464fc3d",
							"mint(address)": "6a627842",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"price(address,uint256)": "ad9b8024",
							"price0CumulativeLast()": "5909c0d5",
							"price1CumulativeLast()": "5a3d5493",
							"skim(address)": "bc25cf77",
							"swap(uint256,uint256,address,bytes)": "022c0d9f",
							"symbol()": "95d89b41",
							"sync()": "fff6cae9",
							"token0()": "0dfe1681",
							"token1()": "d21220a7",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1In\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"indexed\":false,\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"}],\"name\":\"Sync\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINIMUM_LIQUIDITY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getReserves\",\"outputs\":[{\"internalType\":\"uint112\",\"name\":\"reserve0\",\"type\":\"uint112\"},{\"internalType\":\"uint112\",\"name\":\"reserve1\",\"type\":\"uint112\"},{\"internalType\":\"uint32\",\"name\":\"blockTimestampLast\",\"type\":\"uint32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"baseDecimal\",\"type\":\"uint256\"}],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price0CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price1CumulativeLast\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"skim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount0Out\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount1Out\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"swap\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"sync\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token0\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token1\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/interface/IBxhPair.sol\":\"IBxhPair\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/interface/IBxhPair.sol\":{\"keccak256\":\"0xdab09fb6a3159fd2d4ac4d1269530d7c51f51be16c1fbcd393f5bbebe65afef0\",\"urls\":[\"bzz-raw://d68e162bf6d54b523b29591d213b5949503fc0c4ad58bd2cba40c0f038a8e06d\",\"dweb:/ipfs/QmQEKCikRJPWzDozhvG1bWx5Ap7uBVHLirAV8Fhz8o2yq3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/interface/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `recipient`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `sender` to `recipient` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/interface/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/interface/IERC20.sol\":{\"keccak256\":\"0x95bd15a4236be3a8c397bb8efb4e63831dcc882ea897441f21aca1e8dcde8484\",\"urls\":[\"bzz-raw://c2d5f9b8b0b37e3de60e9a5a850e1ebb482c89e8ff33dd8ae9e3b8fc7469f46c\",\"dweb:/ipfs/QmPLuY51jTPy5wZboWDTZgdsRdeyU6PJTAYfxwvSD6QLbi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/Address.sol": {
				"Address": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ROO_Repurchase/contracts/library/Address.sol\":26:6730  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ROO_Repurchase/contracts/library/Address.sol\":26:6730  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122017c8bd019d1f1412945ab1e3355725e5d5c199da25447e5bc7ea0cd822327e3a64736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017c8bd019d1f1412945ab1e3355725e5d5c199da25447e5bc7ea0cd822327e3a64736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xC8 0xBD ADD SWAP14 0x1F EQ SLT SWAP5 GAS 0xB1 0xE3 CALLDATALOAD JUMPI 0x25 0xE5 0xD5 0xC1 SWAP10 0xDA 0x25 DIFFICULTY PUSH31 0x5BC7EA0CD822327E3A64736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "26:6704:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122017c8bd019d1f1412945ab1e3355725e5d5c199da25447e5bc7ea0cd822327e3a64736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 OR 0xC8 0xBD ADD SWAP14 0x1F EQ SLT SWAP5 GAS 0xB1 0xE3 CALLDATALOAD JUMPI 0x25 0xE5 0xD5 0xC1 SWAP10 0xDA 0x25 DIFFICULTY PUSH31 0x5BC7EA0CD822327E3A64736F6C634300060C00330000000000000000000000 ",
							"sourceMap": "26:6704:3:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_verifyCallResult(bool,bytes memory,string memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCall(address,bytes memory,string memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256,string memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory,string memory)": "infinite",
								"isContract(address)": "infinite",
								"sendValue(address payable,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH",
									"source": 3,
									"value": "B"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "MLOAD",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "BYTE",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "EQ",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "INVALID",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "ADDRESS",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "PUSH",
									"source": 3,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "MSTORE8",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP3",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 26,
									"end": 6730,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122017c8bd019d1f1412945ab1e3355725e5d5c199da25447e5bc7ea0cd822327e3a64736f6c634300060c0033",
									".code": [
										{
											"begin": 26,
											"end": 6730,
											"name": "PUSHDEPLOYADDRESS",
											"source": 3
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "ADDRESS",
											"source": 3
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 26,
											"end": 6730,
											"name": "REVERT",
											"source": 3
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/Address.sol\":\"Address\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/library/Address.sol\":{\"keccak256\":\"0x28433e5e22c7df13113658747c4cca17a1696634ebf2a1d59b4fe9866004e24a\",\"urls\":[\"bzz-raw://4e5d49c9acdb47c4152a84593a6ec41d09a3e21c6f268675b59bd3a425f21d2a\",\"dweb:/ipfs/QmZnJfsPVV7i42x6wZR98JSndQXtA8YXuQmJeMfCpSGkgE\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/library/Context.sol\":{\"keccak256\":\"0xf63ca8ce53c902257179260d241e13a13179e7134637776981094270a1281714\",\"urls\":[\"bzz-raw://d1176ba537d326c802cc7376e6a23a4fd472278e2b4d9f90f4d6d21c8ba49829\",\"dweb:/ipfs/QmNuuL6gRBcEphXZWWDLaH9pBJkKMSMpnnt1CA3BgQDEYs\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/EnumerableSet.sol": {
				"EnumerableSet": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":0:8598  library EnumerableSet {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ROO_Repurchase/contracts/library/EnumerableSet.sol\":0:8598  library EnumerableSet {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220d06b8b1b722fb3a0b83fc26f0bc0949341a72ce61320fc2c6c8697e67dac478164736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d06b8b1b722fb3a0b83fc26f0bc0949341a72ce61320fc2c6c8697e67dac478164736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH12 0x8B1B722FB3A0B83FC26F0BC0 SWAP5 SWAP4 COINBASE 0xA7 0x2C 0xE6 SGT KECCAK256 0xFC 0x2C PUSH13 0x8697E67DAC478164736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "0:8598:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220d06b8b1b722fb3a0b83fc26f0bc0949341a72ce61320fc2c6c8697e67dac478164736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD0 PUSH12 0x8B1B722FB3A0B83FC26F0BC0 SWAP5 SWAP4 COINBASE 0xA7 0x2C 0xE6 SGT KECCAK256 0xFC 0x2C PUSH13 0x8697E67DAC478164736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "0:8598:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_add(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_at(struct EnumerableSet.Set storage pointer,uint256)": "infinite",
								"_contains(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"_length(struct EnumerableSet.Set storage pointer)": "infinite",
								"_remove(struct EnumerableSet.Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"add(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"add(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.AddressSet storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.Bytes32Set storage pointer,uint256)": "infinite",
								"at(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"contains(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"contains(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"contains(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite",
								"length(struct EnumerableSet.AddressSet storage pointer)": "infinite",
								"length(struct EnumerableSet.Bytes32Set storage pointer)": "infinite",
								"length(struct EnumerableSet.UintSet storage pointer)": "infinite",
								"remove(struct EnumerableSet.AddressSet storage pointer,address)": "infinite",
								"remove(struct EnumerableSet.Bytes32Set storage pointer,bytes32)": "infinite",
								"remove(struct EnumerableSet.UintSet storage pointer,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "INVALID",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 0,
									"end": 8598,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d06b8b1b722fb3a0b83fc26f0bc0949341a72ce61320fc2c6c8697e67dac478164736f6c634300060c0033",
									".code": [
										{
											"begin": 0,
											"end": 8598,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 0,
											"end": 8598,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/library/EnumerableSet.sol\":{\"keccak256\":\"0x008ac67f0a19919ae5dd76643412b407c854901fb7fa7c07ae9fae1bd8372ce2\",\"urls\":[\"bzz-raw://1b896ce5205ad7bc742e7e5f3f6d990e64fd887b5aa7216eb95190f48286554a\",\"dweb:/ipfs/QmRFwz4bGggxmAuxb2cTRSAz6GqK9uqZH2g8joY947CtWD\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/library/Context.sol\":{\"keccak256\":\"0xf63ca8ce53c902257179260d241e13a13179e7134637776981094270a1281714\",\"urls\":[\"bzz-raw://d1176ba537d326c802cc7376e6a23a4fd472278e2b4d9f90f4d6d21c8ba49829\",\"dweb:/ipfs/QmNuuL6gRBcEphXZWWDLaH9pBJkKMSMpnnt1CA3BgQDEYs\"]},\"ROO_Repurchase/contracts/library/Ownable.sol\":{\"keccak256\":\"0x2212c9692d625b55ec06d1578e4ca15612cec9c565e57c213a5a0fb7bf630ffd\",\"urls\":[\"bzz-raw://291e1a13ad1c786faaf73df8ae2b7aa6ec792c2023aedf2f2a757d261b1ce973\",\"dweb:/ipfs/QmSBeUyeuFEAKqxwv3MQSYToEDPThCX2TBJn7F4dMzeXi2\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1413,
								"contract": "ROO_Repurchase/contracts/library/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":110:3214  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ROO_Repurchase/contracts/library/SafeERC20.sol\":110:3214  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122046c57adda9349fe966e24ce0f332c831fd3d8c8a40242495490441e94393afb364736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046c57adda9349fe966e24ce0f332c831fd3d8c8a40242495490441e94393afb364736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xC5 PUSH27 0xDDA9349FE966E24CE0F332C831FD3D8C8A40242495490441E94393 0xAF 0xB3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "110:3104:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea264697066735822122046c57adda9349fe966e24ce0f332c831fd3d8c8a40242495490441e94393afb364736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CHAINID 0xC5 PUSH27 0xDDA9349FE966E24CE0F332C831FD3D8C8A40242495490441E94393 0xAF 0xB3 PUSH5 0x736F6C6343 STOP MOD 0xC STOP CALLER ",
							"sourceMap": "110:3104:7:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"safeApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH #[$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH [$]",
									"source": 7,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH",
									"source": 7,
									"value": "B"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "CODECOPY",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP1",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "MLOAD",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "BYTE",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "EQ",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH [tag]",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "JUMPI",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "INVALID",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "tag",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "JUMPDEST",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "ADDRESS",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "MSTORE",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "PUSH",
									"source": 7,
									"value": "73"
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "MSTORE8",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP3",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 110,
									"end": 3214,
									"name": "RETURN",
									"source": 7
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122046c57adda9349fe966e24ce0f332c831fd3d8c8a40242495490441e94393afb364736f6c634300060c0033",
									".code": [
										{
											"begin": 110,
											"end": 3214,
											"name": "PUSHDEPLOYADDRESS",
											"source": 7
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "ADDRESS",
											"source": 7
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "80"
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 110,
											"end": 3214,
											"name": "REVERT",
											"source": 7
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/interface/IERC20.sol\":{\"keccak256\":\"0x95bd15a4236be3a8c397bb8efb4e63831dcc882ea897441f21aca1e8dcde8484\",\"urls\":[\"bzz-raw://c2d5f9b8b0b37e3de60e9a5a850e1ebb482c89e8ff33dd8ae9e3b8fc7469f46c\",\"dweb:/ipfs/QmPLuY51jTPy5wZboWDTZgdsRdeyU6PJTAYfxwvSD6QLbi\"]},\"ROO_Repurchase/contracts/library/Address.sol\":{\"keccak256\":\"0x28433e5e22c7df13113658747c4cca17a1696634ebf2a1d59b4fe9866004e24a\",\"urls\":[\"bzz-raw://4e5d49c9acdb47c4152a84593a6ec41d09a3e21c6f268675b59bd3a425f21d2a\",\"dweb:/ipfs/QmZnJfsPVV7i42x6wZR98JSndQXtA8YXuQmJeMfCpSGkgE\"]},\"ROO_Repurchase/contracts/library/SafeERC20.sol\":{\"keccak256\":\"0x9d8a93f488dfa28c65e93f732461211e099ed0b4f2bb7fdaaea0b8e25e35cab0\",\"urls\":[\"bzz-raw://139405cbe6f3daee0d8a0f32d27f212e9034f870b1c35ccd817f7e41606af269\",\"dweb:/ipfs/Qmbg9u7RgW25EQQBhUjvoWoh6H61v5W6ZgHTYU6qMHRiBb\"]},\"ROO_Repurchase/contracts/library/SafeMath.sol\":{\"keccak256\":\"0xf80a234b67630d85a7ca2da332167d683d344ad7100b904bb808585b86ab0a26\",\"urls\":[\"bzz-raw://7bed3dcf7784c76717ccb2efa49f9bb8fcbd1fdf455e2bfd537605ec4ac71bb0\",\"dweb:/ipfs/QmWjjJhDDNf5nmhwqRyEpmsCGiBwkj5mbdTp1wY3EyQWuX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ROO_Repurchase/contracts/library/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":26:4604  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  invalid\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"ROO_Repurchase/contracts/library/SafeMath.sol\":26:4604  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212209ab8c5a86b0bed5a816b9ca9daf7e4ac3ca02e4a87957d3026da8477c4eccdc064736f6c634300060c0033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60566023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ab8c5a86b0bed5a816b9ca9daf7e4ac3ca02e4a87957d3026da8477c4eccdc064736f6c634300060c0033",
							"opcodes": "PUSH1 0x56 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xB8 0xC5 0xA8 PUSH12 0xBED5A816B9CA9DAF7E4AC3C LOG0 0x2E 0x4A DUP8 SWAP6 PUSH30 0x3026DA8477C4ECCDC064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "26:4578:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212209ab8c5a86b0bed5a816b9ca9daf7e4ac3ca02e4a87957d3026da8477c4eccdc064736f6c634300060c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP11 0xB8 0xC5 0xA8 PUSH12 0xBED5A816B9CA9DAF7E4AC3C LOG0 0x2E 0x4A DUP8 SWAP6 PUSH30 0x3026DA8477C4ECCDC064736F6C634300060C003300000000000000000000 ",
							"sourceMap": "26:4578:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17200",
								"executionCost": "97",
								"totalCost": "17297"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"div(uint256,uint256)": "infinite",
								"div(uint256,uint256,string memory)": "infinite",
								"mod(uint256,uint256)": "infinite",
								"mod(uint256,uint256,string memory)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite",
								"sub(uint256,uint256,string memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "INVALID",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 26,
									"end": 4604,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212209ab8c5a86b0bed5a816b9ca9daf7e4ac3ca02e4a87957d3026da8477c4eccdc064736f6c634300060c0033",
									".code": [
										{
											"begin": 26,
											"end": 4604,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 26,
											"end": 4604,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.12+commit.27d51765\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ROO_Repurchase/contracts/library/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"ROO_Repurchase/contracts/library/SafeMath.sol\":{\"keccak256\":\"0xf80a234b67630d85a7ca2da332167d683d344ad7100b904bb808585b86ab0a26\",\"urls\":[\"bzz-raw://7bed3dcf7784c76717ccb2efa49f9bb8fcbd1fdf455e2bfd537605ec4ac71bb0\",\"dweb:/ipfs/QmWjjJhDDNf5nmhwqRyEpmsCGiBwkj5mbdTp1wY3EyQWuX\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/ROO_Repurchase.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/ROO_Repurchase.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/interface/IBxhPair.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/interface/IBxhPair.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/interface/IERC20.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/interface/IERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/Address.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/Address.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/Context.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/Context.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/EnumerableSet.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/EnumerableSet.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/Ownable.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/Ownable.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/SafeERC20.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/SafeERC20.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "ROO_Repurchase/contracts/library/SafeMath.sol: Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/SafeMath.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3420",
				"formattedMessage": "ROO_Repurchase/contracts/library/EnumerableSet.sol: Warning: Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.12;\"\n",
				"message": "Source file does not specify required compiler version! Consider adding \"pragma solidity ^0.6.12;\"",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "ROO_Repurchase/contracts/library/EnumerableSet.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"ROO_Repurchase/contracts/ROO_Repurchase.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/ROO_Repurchase.sol",
					"exportedSymbols": {
						"Repurchase": [
							334
						]
					},
					"id": 335,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/Ownable.sol",
							"file": "./library/Ownable.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 1515,
							"src": "26:31:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/SafeMath.sol",
							"file": "./library/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 1922,
							"src": "58:32:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/SafeERC20.sol",
							"file": "./library/SafeERC20.sol",
							"id": 4,
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 1727,
							"src": "91:33:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/EnumerableSet.sol",
							"file": "./library/EnumerableSet.sol",
							"id": 5,
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 1407,
							"src": "125:37:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/interface/IBxhPair.sol",
							"file": "./interface/IBxhPair.sol",
							"id": 6,
							"nodeType": "ImportDirective",
							"scope": 335,
							"sourceUnit": 586,
							"src": "163:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 7,
										"name": "Ownable",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1514,
										"src": "222:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Ownable_$1514",
											"typeString": "contract Ownable"
										}
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "222:7:0"
								}
							],
							"contractDependencies": [
								928,
								1514
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 334,
							"linearizedBaseContracts": [
								334,
								1514,
								928
							],
							"name": "Repurchase",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 11,
									"libraryName": {
										"contractScope": null,
										"id": 9,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1921,
										"src": "242:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1921",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "236:27:0",
									"typeName": {
										"id": 10,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "255:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 14,
									"libraryName": {
										"contractScope": null,
										"id": 12,
										"name": "SafeERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1726,
										"src": "274:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeERC20_$1726",
											"typeString": "library SafeERC20"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "268:27:0",
									"typeName": {
										"contractScope": null,
										"id": 13,
										"name": "IERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 662,
										"src": "288:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$662",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"id": 17,
									"libraryName": {
										"contractScope": null,
										"id": 15,
										"name": "EnumerableSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1406,
										"src": "307:13:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_EnumerableSet_$1406",
											"typeString": "library EnumerableSet"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "301:49:0",
									"typeName": {
										"contractScope": null,
										"id": 16,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1202,
										"src": "325:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									}
								},
								{
									"constant": false,
									"id": 19,
									"mutability": "mutable",
									"name": "_caller",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "355:40:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
										"typeString": "struct EnumerableSet.AddressSet"
									},
									"typeName": {
										"contractScope": null,
										"id": 18,
										"name": "EnumerableSet.AddressSet",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1202,
										"src": "355:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
											"typeString": "struct EnumerableSet.AddressSet"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "c54e44eb",
									"id": 22,
									"mutability": "constant",
									"name": "USDT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1345:73:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 20,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1345:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307861373145644333386431383937363735383243333841333134356235383733303532633365343761",
										"id": 21,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1376:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xa71EdC38d189767582C38A3145b5873052c3e47a"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "5793d0af",
									"id": 25,
									"mutability": "constant",
									"name": "ROO",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1424:72:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 23,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1424:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307841446445623341386642343644446333666545353530383562364144384461423443346643373731",
										"id": 24,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1454:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xADdEb3A8fB46DDc3feE55085b6AD8DaB4C4fC771"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8c2f9410",
									"id": 28,
									"mutability": "constant",
									"name": "ROO_USDT",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1502:77:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 26,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1502:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307843303562623033624237624645423234334546333634463534346338316444396130373034306132",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1537:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0xC05bb03bB7bFEB243EF364F544c81dD9a07040a2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "d12d9f15",
									"id": 31,
									"mutability": "constant",
									"name": "destroyAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1585:83:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 29,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1585:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307830303030303030303030303030303030303030303030303030303030303030303030303064456144",
										"id": 30,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1626:42:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_address_payable",
											"typeString": "address payable"
										},
										"value": "0x000000000000000000000000000000000000dEaD"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fddf3f73",
									"id": 33,
									"mutability": "mutable",
									"name": "emergencyAddress",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1691:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 32,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1691:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6bed55a6",
									"id": 35,
									"mutability": "mutable",
									"name": "amountIn",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 334,
									"src": "1745:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 34,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1745:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 54,
										"nodeType": "Block",
										"src": "1886:122:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 41,
																"name": "_emergencyAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 37,
																"src": "1904:17:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 44,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1933:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 43,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1925:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 42,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1925:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 45,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1925:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1904:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4973207a65726f2061646472657373",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1937:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81e99e08e44b9138afb13d9a32a8ddc1a1a55a2bb040363069ff93f24d3a4aea",
																"typeString": "literal_string \"Is zero address\""
															},
															"value": "Is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81e99e08e44b9138afb13d9a32a8ddc1a1a55a2bb040363069ff93f24d3a4aea",
																"typeString": "literal_string \"Is zero address\""
															}
														],
														"id": 40,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1896:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 48,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1896:59:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 49,
												"nodeType": "ExpressionStatement",
												"src": "1896:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 52,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 50,
														"name": "emergencyAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "1965:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 51,
														"name": "_emergencyAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 37,
														"src": "1984:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1965:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 53,
												"nodeType": "ExpressionStatement",
												"src": "1965:36:0"
											}
										]
									},
									"documentation": null,
									"id": 55,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 38,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 37,
												"mutability": "mutable",
												"name": "_emergencyAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 55,
												"src": "1852:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 36,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1852:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1851:27:0"
									},
									"returnParameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1886:0:0"
									},
									"scope": 334,
									"src": "1839:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "2068:34:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 64,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 62,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "2078:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 63,
														"name": "_newIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 57,
														"src": "2089:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2078:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 65,
												"nodeType": "ExpressionStatement",
												"src": "2078:17:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6717f5b0",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 60,
											"modifierName": {
												"argumentTypes": null,
												"id": 59,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "2058:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2058:9:0"
										}
									],
									"name": "setAmountIn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 57,
												"mutability": "mutable",
												"name": "_newIn",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 67,
												"src": "2035:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 56,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2035:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2034:16:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2068:0:0"
									},
									"scope": 334,
									"src": "2014:88:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 88,
										"nodeType": "Block",
										"src": "2175:110:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 80,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 75,
																"name": "_newAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 69,
																"src": "2193:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2216:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 77,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2208:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 76,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2208:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2208:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2193:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4973207a65726f2061646472657373",
															"id": 81,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2220:17:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_81e99e08e44b9138afb13d9a32a8ddc1a1a55a2bb040363069ff93f24d3a4aea",
																"typeString": "literal_string \"Is zero address\""
															},
															"value": "Is zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_81e99e08e44b9138afb13d9a32a8ddc1a1a55a2bb040363069ff93f24d3a4aea",
																"typeString": "literal_string \"Is zero address\""
															}
														],
														"id": 74,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2185:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2185:53:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 83,
												"nodeType": "ExpressionStatement",
												"src": "2185:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 86,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 84,
														"name": "emergencyAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 33,
														"src": "2248:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 85,
														"name": "_newAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 69,
														"src": "2267:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2248:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 87,
												"nodeType": "ExpressionStatement",
												"src": "2248:30:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "2aa11ffb",
									"id": 89,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 72,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "2165:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2165:9:0"
										}
									],
									"name": "setEmergencyAddress",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "_newAddress",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 89,
												"src": "2137:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2136:21:0"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2175:0:0"
									},
									"scope": 334,
									"src": "2108:177:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 114,
										"nodeType": "Block",
										"src": "2362:138:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 99,
																"name": "_newCaller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "2380:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 102,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2402:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 101,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2394:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 100,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2394:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 103,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2394:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2380:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e657743616c6c657220697320746865207a65726f2061646472657373",
															"id": 105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2406:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f1aa412b74ffe33e82099578a45382f340c2a3faacbf0c79083b117d975a890e",
																"typeString": "literal_string \"NewCaller is the zero address\""
															},
															"value": "NewCaller is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f1aa412b74ffe33e82099578a45382f340c2a3faacbf0c79083b117d975a890e",
																"typeString": "literal_string \"NewCaller is the zero address\""
															}
														],
														"id": 98,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2372:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2372:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 107,
												"nodeType": "ExpressionStatement",
												"src": "2372:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 110,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2473:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 111,
															"name": "_newCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 91,
															"src": "2482:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 108,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "2455:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1406_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 109,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1225,
														"src": "2455:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1202_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2455:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 97,
												"id": 113,
												"nodeType": "Return",
												"src": "2448:45:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "747293fb",
									"id": 115,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 94,
											"modifierName": {
												"argumentTypes": null,
												"id": 93,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "2337:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "addCaller",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "_newCaller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2310:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 90,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2310:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2309:20:0"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 115,
												"src": "2356:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 95,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2356:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2355:6:0"
									},
									"scope": 334,
									"src": "2291:209:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 140,
										"nodeType": "Block",
										"src": "2577:141:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 130,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 125,
																"name": "_delCaller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 117,
																"src": "2595:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 128,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2617:1:0",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 127,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2609:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 126,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2609:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 129,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2609:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "2595:24:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "44656c43616c6c657220697320746865207a65726f2061646472657373",
															"id": 131,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2621:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_052000a4fb6ca18d171ed47e25fb758f2f95c7a4dc5e6f0aa33d501a3aa9b0d4",
																"typeString": "literal_string \"DelCaller is the zero address\""
															},
															"value": "DelCaller is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_052000a4fb6ca18d171ed47e25fb758f2f95c7a4dc5e6f0aa33d501a3aa9b0d4",
																"typeString": "literal_string \"DelCaller is the zero address\""
															}
														],
														"id": 124,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2587:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2587:66:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "2587:66:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 136,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2691:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 137,
															"name": "_delCaller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "2700:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 134,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "2670:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1406_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 135,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "remove",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1248,
														"src": "2670:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$1202_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
														}
													},
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2670:41:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 123,
												"id": 139,
												"nodeType": "Return",
												"src": "2663:48:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "231a418c",
									"id": 141,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 120,
											"modifierName": {
												"argumentTypes": null,
												"id": 119,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "2552:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "2552:9:0"
										}
									],
									"name": "delCaller",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "_delCaller",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 141,
												"src": "2525:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 116,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2525:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2524:20:0"
									},
									"returnParameters": {
										"id": 123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 141,
												"src": "2571:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 121,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2571:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2570:6:0"
									},
									"scope": 334,
									"src": "2506:212:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 151,
										"nodeType": "Block",
										"src": "2781:53:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 148,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2819:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 146,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "2798:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1406_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 147,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1285,
														"src": "2798:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1202_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (uint256)"
														}
													},
													"id": 149,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:29:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 145,
												"id": 150,
												"nodeType": "Return",
												"src": "2791:36:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "42177a58",
									"id": 152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCallerLength",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2748:2:0"
									},
									"returnParameters": {
										"id": 145,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 152,
												"src": "2772:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2772:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2771:9:0"
									},
									"scope": 334,
									"src": "2724:110:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "2900:62:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 161,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "2940:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 162,
															"name": "_call",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "2949:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 159,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "2917:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1406_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "contains",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1271,
														"src": "2917:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1202_storage_ptr_$_t_address_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) view returns (bool)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2917:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 158,
												"id": 164,
												"nodeType": "Return",
												"src": "2910:45:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "7ac07dcc",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isCaller",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "_call",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2858:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 153,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2857:15:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 166,
												"src": "2894:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2894:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2893:6:0"
									},
									"scope": 334,
									"src": "2840:122:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "3032:130:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 179,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 174,
																"name": "_index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 168,
																"src": "3050:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 178,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 175,
																		"name": "getCallerLength",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 152,
																		"src": "3060:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
																			"typeString": "function () view returns (uint256)"
																		}
																	},
																	"id": 176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3060:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 177,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3080:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "3060:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3050:31:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "696e646578206f7574206f6620626f756e6473",
															"id": 180,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3083:21:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_eed516072b2550c72e3348ead859d99a87d4879a686eafecb170998606c300b2",
																"typeString": "literal_string \"index out of bounds\""
															},
															"value": "index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_eed516072b2550c72e3348ead859d99a87d4879a686eafecb170998606c300b2",
																"typeString": "literal_string \"index out of bounds\""
															}
														],
														"id": 173,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3042:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3042:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 182,
												"nodeType": "ExpressionStatement",
												"src": "3042:63:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 185,
															"name": "_caller",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 19,
															"src": "3139:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 186,
															"name": "_index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 168,
															"src": "3148:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_AddressSet_$1202_storage",
																"typeString": "struct EnumerableSet.AddressSet storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 183,
															"name": "EnumerableSet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "3122:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_EnumerableSet_$1406_$",
																"typeString": "type(library EnumerableSet)"
															}
														},
														"id": 184,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "at",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1308,
														"src": "3122:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$1202_storage_ptr_$_t_uint256_$returns$_t_address_$",
															"typeString": "function (struct EnumerableSet.AddressSet storage pointer,uint256) view returns (address)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3122:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 172,
												"id": 188,
												"nodeType": "Return",
												"src": "3115:40:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "a8b0b3ed",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCaller",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 168,
												"mutability": "mutable",
												"name": "_index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 190,
												"src": "2987:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 167,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2987:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2986:16:0"
									},
									"returnParameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 190,
												"src": "3024:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3024:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3023:9:0"
									},
									"scope": 334,
									"src": "2968:194:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "3246:573:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 202,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 200,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 192,
																"src": "3264:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 201,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3274:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3264:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 203,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3277:34:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															},
															"value": "Amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_335ff2e4b249975444723ab3dc1716db90a7dff95cbce35a34ad25055762f887",
																"typeString": "literal_string \"Amount must be greater than zero\""
															}
														],
														"id": 199,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3256:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:56:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 205,
												"nodeType": "ExpressionStatement",
												"src": "3256:56:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 206,
														"name": "amountIn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 35,
														"src": "3322:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 207,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 192,
														"src": "3333:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3322:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 209,
												"nodeType": "ExpressionStatement",
												"src": "3322:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 217,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "3398:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Repurchase_$334",
																					"typeString": "contract Repurchase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Repurchase_$334",
																					"typeString": "contract Repurchase"
																				}
																			],
																			"id": 216,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3390:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 215,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3390:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3390:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 212,
																				"name": "USDT",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 22,
																				"src": "3374:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 211,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "3367:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 213,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3367:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 214,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 601,
																	"src": "3367:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 219,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3367:37:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 220,
																"name": "amountIn",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 35,
																"src": "3408:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3367:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 222,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3418:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 210,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3359:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3359:91:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 224,
												"nodeType": "ExpressionStatement",
												"src": "3359:91:0"
											},
											{
												"assignments": [
													226,
													228,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 226,
														"mutability": "mutable",
														"name": "reserve0",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 281,
														"src": "3461:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 225,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3461:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 228,
														"mutability": "mutable",
														"name": "reserve1",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 281,
														"src": "3479:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 227,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3479:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 234,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 230,
																	"name": "ROO_USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "3509:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 229,
																"name": "IBxhPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "3500:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBxhPair_$585_$",
																	"typeString": "type(contract IBxhPair)"
																}
															},
															"id": 231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3500:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBxhPair_$585",
																"typeString": "contract IBxhPair"
															}
														},
														"id": 232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getReserves",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 518,
														"src": "3500:30:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
															"typeString": "function () view external returns (uint112,uint112,uint32)"
														}
													},
													"id": 233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3500:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
														"typeString": "tuple(uint112,uint112,uint32)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3460:72:0"
											},
											{
												"assignments": [
													236
												],
												"declarations": [
													{
														"constant": false,
														"id": 236,
														"mutability": "mutable",
														"name": "amountInWithFee",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 281,
														"src": "3542:23:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 235,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3542:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 241,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "393937",
															"id": 239,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3581:3:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															},
															"value": "997"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_997_by_1",
																"typeString": "int_const 997"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 237,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "3568:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "mul",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1834,
														"src": "3568:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 240,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3568:17:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3542:43:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 258,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 242,
														"name": "amountOut",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 197,
														"src": "3595:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 257,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 248,
																	"name": "reserve0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 226,
																	"src": "3629:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "393937",
																			"id": 245,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3620:3:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_997_by_1",
																				"typeString": "int_const 997"
																			},
																			"value": "997"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_997_by_1",
																				"typeString": "int_const 997"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 243,
																			"name": "amountIn",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 35,
																			"src": "3607:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 244,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1834,
																		"src": "3607:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 246,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3607:17:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "mul",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1834,
																"src": "3607:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3607:31:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 255,
																	"name": "amountInWithFee",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 236,
																	"src": "3664:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "31303030",
																			"id": 252,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3654:4:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			},
																			"value": "1000"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_1000_by_1",
																				"typeString": "int_const 1000"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"id": 250,
																			"name": "reserve1",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 228,
																			"src": "3641:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 251,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "mul",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1834,
																		"src": "3641:12:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 253,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3641:18:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 254,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "add",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1754,
																"src": "3641:22:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 256,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3641:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "3607:73:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3595:85:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 259,
												"nodeType": "ExpressionStatement",
												"src": "3595:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 264,
															"name": "ROO_USDT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "3716:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 265,
															"name": "amountIn",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 35,
															"src": "3726:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 261,
																	"name": "USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 22,
																	"src": "3697:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 260,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "3690:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3690:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														"id": 263,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "safeTransfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1547,
														"src": "3690:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$662_$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3690:45:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 267,
												"nodeType": "ExpressionStatement",
												"src": "3690:45:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 272,
															"name": "amountOut",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 197,
															"src": "3769:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 273,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3780:1:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 274,
															"name": "destroyAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 31,
															"src": "3783:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 277,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3809:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 276,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "3799:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (bytes memory)"
																},
																"typeName": {
																	"id": 275,
																	"name": "bytes",
																	"nodeType": "ElementaryTypeName",
																	"src": "3803:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_storage_ptr",
																		"typeString": "bytes"
																	}
																}
															},
															"id": 278,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3799:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 269,
																	"name": "ROO_USDT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 28,
																	"src": "3754:8:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 268,
																"name": "IBxhPair",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 585,
																"src": "3745:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBxhPair_$585_$",
																	"typeString": "type(contract IBxhPair)"
																}
															},
															"id": 270,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3745:18:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBxhPair_$585",
																"typeString": "contract IBxhPair"
															}
														},
														"id": 271,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "swap",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 560,
														"src": "3745:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_uint256_$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (uint256,uint256,address,bytes memory) external"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3745:67:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "ExpressionStatement",
												"src": "3745:67:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "94b918de",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 195,
											"modifierName": {
												"argumentTypes": null,
												"id": 194,
												"name": "onlyCaller",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 294,
												"src": "3208:10:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3208:10:0"
										}
									],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 192,
												"mutability": "mutable",
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "3182:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3182:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3181:17:0"
									},
									"returnParameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "amountOut",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 282,
												"src": "3228:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3228:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3227:19:0"
									},
									"scope": 334,
									"src": "3168:651:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 293,
										"nodeType": "Block",
										"src": "3851:75:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": -15,
																		"src": "3878:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "3878:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																],
																"id": 285,
																"name": "isCaller",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 166,
																"src": "3869:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3869:20:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4e6f74207468652063616c6c6572",
															"id": 289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3891:16:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b0cd7a9823a3ced8e226143c8a21af7dbaeb2773b117bbfc31399bfe870ac82e",
																"typeString": "literal_string \"Not the caller\""
															},
															"value": "Not the caller"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b0cd7a9823a3ced8e226143c8a21af7dbaeb2773b117bbfc31399bfe870ac82e",
																"typeString": "literal_string \"Not the caller\""
															}
														],
														"id": 284,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3861:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3861:47:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 291,
												"nodeType": "ExpressionStatement",
												"src": "3861:47:0"
											},
											{
												"id": 292,
												"nodeType": "PlaceholderStatement",
												"src": "3918:1:0"
											}
										]
									},
									"documentation": null,
									"id": 294,
									"name": "onlyCaller",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3848:2:0"
									},
									"src": "3829:97:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 332,
										"nodeType": "Block",
										"src": "3992:194:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 312,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 308,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -28,
																				"src": "4043:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Repurchase_$334",
																					"typeString": "contract Repurchase"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Repurchase_$334",
																					"typeString": "contract Repurchase"
																				}
																			],
																			"id": 307,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4035:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 306,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4035:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 309,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4035:13:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 303,
																				"name": "_token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 296,
																				"src": "4017:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"id": 302,
																			"name": "IERC20",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 662,
																			"src": "4010:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																				"typeString": "type(contract IERC20)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4010:14:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$662",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 305,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "balanceOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 601,
																	"src": "4010:24:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view external returns (uint256)"
																	}
																},
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4010:39:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 311,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4052:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4010:43:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "496e73756666696369656e7420636f6e74726163742062616c616e6365",
															"id": 313,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4055:31:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															},
															"value": "Insufficient contract balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ec83fd00432662dbf5dd2aac1f81c346fbe87acecf7cd3f016ab25f549f71749",
																"typeString": "literal_string \"Insufficient contract balance\""
															}
														],
														"id": 301,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4002:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 314,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4002:85:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 315,
												"nodeType": "ExpressionStatement",
												"src": "4002:85:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 320,
															"name": "emergencyAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 33,
															"src": "4121:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 327,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4172:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Repurchase_$334",
																				"typeString": "contract Repurchase"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Repurchase_$334",
																				"typeString": "contract Repurchase"
																			}
																		],
																		"id": 326,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4164:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 325,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4164:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 328,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4164:13:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 322,
																			"name": "_token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 296,
																			"src": "4146:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 321,
																		"name": "IERC20",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 662,
																		"src": "4139:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																			"typeString": "type(contract IERC20)"
																		}
																	},
																	"id": 323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4139:14:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balanceOf",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 601,
																"src": "4139:24:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address) view external returns (uint256)"
																}
															},
															"id": 329,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4139:39:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 317,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 296,
																	"src": "4104:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 316,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 662,
																"src": "4097:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$662_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 318,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4097:14:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														"id": 319,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 611,
														"src": "4097:23:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 330,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4097:82:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 331,
												"nodeType": "ExpressionStatement",
												"src": "4097:82:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "6ff1c9bc",
									"id": 333,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 299,
											"modifierName": {
												"argumentTypes": null,
												"id": 298,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "3982:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3982:9:0"
										}
									],
									"name": "emergencyWithdraw",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 296,
												"mutability": "mutable",
												"name": "_token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 333,
												"src": "3959:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 295,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3959:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3958:16:0"
									},
									"returnParameters": {
										"id": 300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3992:0:0"
									},
									"scope": 334,
									"src": "3932:254:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 335,
							"src": "199:3989:0"
						}
					],
					"src": "0:4189:0"
				},
				"id": 0
			},
			"ROO_Repurchase/contracts/interface/IBxhPair.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/interface/IBxhPair.sol",
					"exportedSymbols": {
						"IBxhPair": [
							585
						]
					},
					"id": 586,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 336,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 585,
							"linearizedBaseContracts": [
								585
							],
							"name": "IBxhPair",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 344,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 343,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "67:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 337,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "67:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 340,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "90:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "90:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 344,
												"src": "115:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 341,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "115:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "66:60:1"
									},
									"src": "52:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 352,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "147:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "147:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "169:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "169:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 352,
												"src": "189:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 349,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "189:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "146:54:1"
									},
									"src": "132:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "06fdde03",
									"id": 357,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "220:2:1"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 357,
												"src": "246:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 354,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "246:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "245:15:1"
									},
									"scope": 585,
									"src": "207:54:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "95d89b41",
									"id": 362,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 358,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:2:1"
									},
									"returnParameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 362,
												"src": "308:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 359,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "308:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "307:15:1"
									},
									"scope": 585,
									"src": "267:56:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "313ce567",
									"id": 367,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 363,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "346:2:1"
									},
									"returnParameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 367,
												"src": "372:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 364,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "372:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "371:7:1"
									},
									"scope": 585,
									"src": "329:50:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "18160ddd",
									"id": 372,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 368,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "405:2:1"
									},
									"returnParameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 372,
												"src": "431:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 369,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "431:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "430:6:1"
									},
									"scope": 585,
									"src": "385:52:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "70a08231",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "462:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 373,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:15:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 379,
												"src": "500:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 376,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "500:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "499:6:1"
									},
									"scope": 585,
									"src": "443:63:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "dd62ed3e",
									"id": 388,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "531:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 380,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "531:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "546:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "546:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "530:32:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 388,
												"src": "586:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 385,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "586:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "585:6:1"
									},
									"scope": 585,
									"src": "512:80:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "095ea7b3",
									"id": 397,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 390,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "615:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 389,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "615:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "632:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 391,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "632:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "614:29:1"
									},
									"returnParameters": {
										"id": 396,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 395,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 397,
												"src": "662:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 394,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "662:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "661:6:1"
									},
									"scope": 585,
									"src": "598:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "a9059cbb",
									"id": 406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 402,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 398,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "704:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 400,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:1"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 406,
												"src": "734:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 403,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:1"
									},
									"scope": 585,
									"src": "674:66:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "23b872dd",
									"id": 417,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 408,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "768:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "768:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "782:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "782:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "794:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 411,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "794:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "767:38:1"
									},
									"returnParameters": {
										"id": 416,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 415,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 417,
												"src": "824:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 414,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "824:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "823:6:1"
									},
									"scope": 585,
									"src": "746:84:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "3644e515",
									"id": 422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "861:2:1"
									},
									"returnParameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 422,
												"src": "887:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 419,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "887:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "886:9:1"
									},
									"scope": 585,
									"src": "836:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "30adf81f",
									"id": 427,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:2:1"
									},
									"returnParameters": {
										"id": 426,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 425,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 427,
												"src": "952:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 424,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "952:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "951:9:1"
									},
									"scope": 585,
									"src": "902:59:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7ecebe00",
									"id": 434,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 430,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 429,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "983:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 428,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "983:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "982:15:1"
									},
									"returnParameters": {
										"id": 433,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 434,
												"src": "1021:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 431,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1021:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1020:6:1"
									},
									"scope": 585,
									"src": "967:60:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d505accf",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1049:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1049:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1064:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 437,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1064:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1081:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 439,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1081:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1093:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1093:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "v",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1108:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 443,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1108:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "r",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1117:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 445,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1117:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "s",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 451,
												"src": "1128:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 447,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1128:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1048:90:1"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1147:0:1"
									},
									"scope": 585,
									"src": "1033:115:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 459,
									"name": "Mint",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 453,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "1165:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 452,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1165:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 455,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "1189:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1189:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 457,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 459,
												"src": "1203:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 456,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1203:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1164:52:1"
									},
									"src": "1154:63:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 469,
									"name": "Burn",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 468,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 461,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "1233:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 460,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 463,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "1257:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 462,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 465,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "1271:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 464,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1271:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 467,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 469,
												"src": "1285:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 466,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1232:72:1"
									},
									"src": "1222:83:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 483,
									"name": "Swap",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 482,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1330:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1330:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 473,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1362:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 472,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1362:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 475,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1In",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1386:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 474,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1386:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1410:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1410:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 479,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1435:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 478,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1435:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 481,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 483,
												"src": "1460:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 480,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1460:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1320:164:1"
									},
									"src": "1310:175:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 489,
									"name": "Sync",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 485,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "1501:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 484,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1501:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 487,
												"indexed": false,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 489,
												"src": "1519:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 486,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1500:36:1"
									},
									"src": "1490:47:1"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ba9a7a56",
									"id": 494,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "MINIMUM_LIQUIDITY",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1569:2:1"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 492,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 494,
												"src": "1595:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 491,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1595:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1594:6:1"
									},
									"scope": 585,
									"src": "1543:58:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "c45a0155",
									"id": 499,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "factory",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 495,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1623:2:1"
									},
									"returnParameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 499,
												"src": "1649:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1649:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1648:9:1"
									},
									"scope": 585,
									"src": "1607:51:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0dfe1681",
									"id": 504,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token0",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1679:2:1"
									},
									"returnParameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 502,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 504,
												"src": "1705:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1704:9:1"
									},
									"scope": 585,
									"src": "1664:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "d21220a7",
									"id": 509,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "token1",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 505,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1735:2:1"
									},
									"returnParameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 509,
												"src": "1761:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1760:9:1"
									},
									"scope": 585,
									"src": "1720:50:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "0902f1ac",
									"id": 518,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getReserves",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 510,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:2:1"
									},
									"returnParameters": {
										"id": 517,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 512,
												"mutability": "mutable",
												"name": "reserve0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "1822:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 511,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1822:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 514,
												"mutability": "mutable",
												"name": "reserve1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "1840:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 513,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "1840:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 516,
												"mutability": "mutable",
												"name": "blockTimestampLast",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 518,
												"src": "1858:25:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 515,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "1858:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1821:63:1"
									},
									"scope": 585,
									"src": "1776:109:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5909c0d5",
									"id": 523,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price0CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1920:2:1"
									},
									"returnParameters": {
										"id": 522,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 523,
												"src": "1946:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 520,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1946:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1945:6:1"
									},
									"scope": 585,
									"src": "1891:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "5a3d5493",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price1CumulativeLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:1"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 528,
												"src": "2013:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2013:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2012:6:1"
									},
									"scope": 585,
									"src": "1958:61:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "7464fc3d",
									"id": 533,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "kLast",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2039:2:1"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 533,
												"src": "2065:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 530,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2065:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2064:6:1"
									},
									"scope": 585,
									"src": "2025:46:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "6a627842",
									"id": 540,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 536,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 535,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2091:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 534,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2091:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2090:12:1"
									},
									"returnParameters": {
										"id": 539,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 538,
												"mutability": "mutable",
												"name": "liquidity",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 540,
												"src": "2121:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 537,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2121:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2120:16:1"
									},
									"scope": 585,
									"src": "2077:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "89afcb44",
									"id": 549,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 542,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 549,
												"src": "2157:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 541,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2156:12:1"
									},
									"returnParameters": {
										"id": 548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 545,
												"mutability": "mutable",
												"name": "amount0",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 549,
												"src": "2187:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 544,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2187:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 547,
												"mutability": "mutable",
												"name": "amount1",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 549,
												"src": "2201:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 546,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2201:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2186:28:1"
									},
									"scope": 585,
									"src": "2143:72:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "022c0d9f",
									"id": 560,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "swap",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 558,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "amount0Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "2235:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2235:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 553,
												"mutability": "mutable",
												"name": "amount1Out",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "2252:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 552,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2252:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 555,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "2269:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2269:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 560,
												"src": "2281:19:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 556,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2281:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2234:67:1"
									},
									"returnParameters": {
										"id": 559,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2310:0:1"
									},
									"scope": 585,
									"src": "2221:90:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "bc25cf77",
									"id": 565,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "skim",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 562,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 565,
												"src": "2331:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 561,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2330:12:1"
									},
									"returnParameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2351:0:1"
									},
									"scope": 585,
									"src": "2317:35:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "fff6cae9",
									"id": 568,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "sync",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2371:2:1"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2382:0:1"
									},
									"scope": 585,
									"src": "2358:25:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "ad9b8024",
									"id": 577,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "price",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 573,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 577,
												"src": "2404:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 572,
												"mutability": "mutable",
												"name": "baseDecimal",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 577,
												"src": "2419:19:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 571,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2419:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2403:36:1"
									},
									"returnParameters": {
										"id": 576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 575,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 577,
												"src": "2463:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 574,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2463:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2462:9:1"
									},
									"scope": 585,
									"src": "2389:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"functionSelector": "485cc955",
									"id": 584,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "initialize",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 579,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2498:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 578,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2498:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 581,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 584,
												"src": "2507:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 580,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2507:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2497:18:1"
									},
									"returnParameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2524:0:1"
									},
									"scope": 585,
									"src": "2478:47:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 586,
							"src": "27:2500:1"
						}
					],
					"src": "0:2527:1"
				},
				"id": 1
			},
			"ROO_Repurchase/contracts/interface/IERC20.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/interface/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							662
						]
					},
					"id": 663,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 587,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 662,
							"linearizedBaseContracts": [
								662
							],
							"name": "IERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": null,
									"documentation": {
										"id": 588,
										"nodeType": "StructuredDocumentation",
										"src": "51:66:2",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 593,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "142:2:2"
									},
									"returnParameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 591,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 593,
												"src": "168:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "168:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "167:9:2"
									},
									"scope": 662,
									"src": "122:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "183:72:2",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 601,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "279:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "279:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "278:17:2"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 601,
												"src": "319:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 598,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "319:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "318:9:2"
									},
									"scope": 662,
									"src": "260:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 602,
										"nodeType": "StructuredDocumentation",
										"src": "334:209:2",
										"text": " @dev Moves `amount` tokens from the caller's account to `recipient`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 611,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "566:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 603,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 606,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "585:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "585:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "565:35:2"
									},
									"returnParameters": {
										"id": 610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 609,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 611,
												"src": "619:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 608,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "619:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "618:6:2"
									},
									"scope": 662,
									"src": "548:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 612,
										"nodeType": "StructuredDocumentation",
										"src": "631:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 621,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 614,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "919:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 613,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "919:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 616,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "934:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 615,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "918:32:2"
									},
									"returnParameters": {
										"id": 620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 619,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 621,
												"src": "974:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "974:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "973:9:2"
									},
									"scope": 662,
									"src": "900:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 622,
										"nodeType": "StructuredDocumentation",
										"src": "989:642:2",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 624,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "1653:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 623,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1653:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "1670:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 625,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1670:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1652:33:2"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 631,
												"src": "1704:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 628,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1704:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1703:6:2"
									},
									"scope": 662,
									"src": "1636:74:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "1716:296:2",
										"text": " @dev Moves `amount` tokens from `sender` to `recipient` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 634,
												"mutability": "mutable",
												"name": "sender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "2039:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 633,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 636,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "2055:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 635,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2055:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 638,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "2074:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 637,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2074:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2038:51:2"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 643,
												"src": "2108:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 640,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2108:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2107:6:2"
									},
									"scope": 662,
									"src": "2017:97:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "2120:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 652,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 651,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 652,
												"src": "2298:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 645,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 648,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 652,
												"src": "2320:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 647,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 650,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 652,
												"src": "2340:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 649,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2297:57:2"
									},
									"src": "2283:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 653,
										"nodeType": "StructuredDocumentation",
										"src": "2361:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 661,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 660,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 655,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "2529:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 657,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "2552:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 656,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2552:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 659,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 661,
												"src": "2577:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 658,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2577:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2528:63:2"
									},
									"src": "2514:78:2"
								}
							],
							"scope": 663,
							"src": "28:2566:2"
						}
					],
					"src": "0:2594:2"
				},
				"id": 2
			},
			"ROO_Repurchase/contracts/library/Address.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/Address.sol",
					"exportedSymbols": {
						"Address": [
							905
						]
					},
					"id": 906,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 664,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 905,
							"linearizedBaseContracts": [
								905
							],
							"name": "Address",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 680,
										"nodeType": "Block",
										"src": "684:347:3",
										"statements": [
											{
												"assignments": [
													673
												],
												"declarations": [
													{
														"constant": false,
														"id": 673,
														"mutability": "mutable",
														"name": "size",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 680,
														"src": "881:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 672,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "881:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 674,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "881:12:3"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "968:32:3",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "970:28:3",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nodeType": "YulIdentifier",
																		"src": "990:7:3"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "978:11:3"
																},
																"nodeType": "YulFunctionCall",
																"src": "978:20:3"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "970:4:3"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 667,
														"isOffset": false,
														"isSlot": false,
														"src": "990:7:3",
														"valueSize": 1
													},
													{
														"declaration": 673,
														"isOffset": false,
														"isSlot": false,
														"src": "970:4:3",
														"valueSize": 1
													}
												],
												"id": 675,
												"nodeType": "InlineAssembly",
												"src": "959:41:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 678,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 676,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 673,
														"src": "1016:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1023:1:3",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1016:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 671,
												"id": 679,
												"nodeType": "Return",
												"src": "1009:15:3"
											}
										]
									},
									"documentation": {
										"id": 665,
										"nodeType": "StructuredDocumentation",
										"src": "48:565:3",
										"text": " @dev Returns true if `account` is a contract.\n [IMPORTANT]\n ====\n It is unsafe to assume that an address for which this function returns\n false is an externally-owned account (EOA) and not a contract.\n Among others, `isContract` will return false for the following\n types of addresses:\n  - an externally-owned account\n  - a contract in construction\n  - an address where a contract will be created\n  - an address where a contract lived, but was destroyed\n ===="
									},
									"id": 681,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 667,
												"mutability": "mutable",
												"name": "account",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "638:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 666,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "638:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "637:17:3"
									},
									"returnParameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 670,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 681,
												"src": "678:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 669,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "678:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "677:6:3"
									},
									"scope": 905,
									"src": "618:413:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 714,
										"nodeType": "Block",
										"src": "2019:320:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 696,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 692,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "2045:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		],
																		"id": 691,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2037:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 690,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2037:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 693,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2037:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 694,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2037:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 695,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "2062:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2037:31:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e6365",
															"id": 697,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2070:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															},
															"value": "Address: insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5597a22abd0ef5332f8053862eb236db7590f17e2b93a53f63a103becfb561f9",
																"typeString": "literal_string \"Address: insufficient balance\""
															}
														],
														"id": 689,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2029:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 698,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2029:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 699,
												"nodeType": "ExpressionStatement",
												"src": "2029:73:3"
											},
											{
												"assignments": [
													701,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 701,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 714,
														"src": "2191:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 700,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "2191:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													null
												],
												"id": 708,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"hexValue": "",
															"id": 706,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2241:2:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 702,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 684,
																"src": "2209:9:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 703,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2209:14:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 705,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 704,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 686,
																"src": "2232:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "2209:31:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2209:35:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2190:54:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 710,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 701,
															"src": "2262:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20756e61626c6520746f2073656e642076616c75652c20726563697069656e74206d61792068617665207265766572746564",
															"id": 711,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2271:60:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															},
															"value": "Address: unable to send value, recipient may have reverted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_51ddaa38748c0a1144620fb5bfe8edab31ea437571ad591a7734bbfd0429aeae",
																"typeString": "literal_string \"Address: unable to send value, recipient may have reverted\""
															}
														],
														"id": 709,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "2254:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2254:78:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 713,
												"nodeType": "ExpressionStatement",
												"src": "2254:78:3"
											}
										]
									},
									"documentation": {
										"id": 682,
										"nodeType": "StructuredDocumentation",
										"src": "1037:906:3",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://diligence.consensys.net/posts/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.5.11/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 684,
												"mutability": "mutable",
												"name": "recipient",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 715,
												"src": "1967:25:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 683,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1967:15:3",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 686,
												"mutability": "mutable",
												"name": "amount",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 715,
												"src": "1994:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 685,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1994:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1966:43:3"
									},
									"returnParameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2019:0:3"
									},
									"scope": 905,
									"src": "1948:391:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 731,
										"nodeType": "Block",
										"src": "3169:82:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 726,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 718,
															"src": "3197:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 727,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 720,
															"src": "3205:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3211:32:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															},
															"value": "Address: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_24d7ab5d382116e64324f19950ca9340b8af1ddeb09a8d026e0a3c6a01dcc9df",
																"typeString": "literal_string \"Address: low-level call failed\""
															}
														],
														"id": 725,
														"name": "functionCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															732,
															752
														],
														"referencedDeclaration": 752,
														"src": "3184:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3184:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 724,
												"id": 730,
												"nodeType": "Return",
												"src": "3177:67:3"
											}
										]
									},
									"documentation": {
										"id": 716,
										"nodeType": "StructuredDocumentation",
										"src": "2345:730:3",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain`call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason, it is bubbled up by this\n function (like regular Solidity function calls).\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert.\n _Available since v3.1._"
									},
									"id": 732,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 718,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "3102:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 717,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3102:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 720,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "3118:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 719,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3118:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3101:35:3"
									},
									"returnParameters": {
										"id": 724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 723,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 732,
												"src": "3155:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 722,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3155:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3154:14:3"
									},
									"scope": 905,
									"src": "3080:171:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 751,
										"nodeType": "Block",
										"src": "3590:76:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 745,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 735,
															"src": "3629:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 746,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 737,
															"src": "3637:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "30",
															"id": 747,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3643:1:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														{
															"argumentTypes": null,
															"id": 748,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "3646:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 744,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															822
														],
														"referencedDeclaration": 822,
														"src": "3607:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3607:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 743,
												"id": 750,
												"nodeType": "Return",
												"src": "3600:59:3"
											}
										]
									},
									"documentation": {
										"id": 733,
										"nodeType": "StructuredDocumentation",
										"src": "3257:211:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`], but with\n `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 752,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 740,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 735,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 752,
												"src": "3495:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 734,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3495:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 737,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 752,
												"src": "3511:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3511:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 752,
												"src": "3530:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 738,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3530:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3494:63:3"
									},
									"returnParameters": {
										"id": 743,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 742,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 752,
												"src": "3576:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 741,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3576:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3575:14:3"
									},
									"scope": 905,
									"src": "3473:193:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 771,
										"nodeType": "Block",
										"src": "4141:111:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 765,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 755,
															"src": "4180:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 766,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 757,
															"src": "4188:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 767,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "4194:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c2063616c6c20776974682076616c7565206661696c6564",
															"id": 768,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4201:43:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															},
															"value": "Address: low-level call with value failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_88a4a0b5e975840320a0475d4027005235904fdb5ece94df156f3d717cb2dbfc",
																"typeString": "literal_string \"Address: low-level call with value failed\""
															}
														],
														"id": 764,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															772,
															822
														],
														"referencedDeclaration": 822,
														"src": "4158:21:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256,string memory) returns (bytes memory)"
														}
													},
													"id": 769,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4158:87:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 763,
												"id": 770,
												"nodeType": "Return",
												"src": "4151:94:3"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "3672:351:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`.\n _Available since v3.1._"
									},
									"id": 772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "4059:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4059:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "4075:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4075:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "4094:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4094:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4058:50:3"
									},
									"returnParameters": {
										"id": 763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 772,
												"src": "4127:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 761,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4127:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4126:14:3"
									},
									"scope": 905,
									"src": "4028:224:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 821,
										"nodeType": "Block",
										"src": "4641:382:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 793,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 789,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "4667:4:3",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Address_$905",
																				"typeString": "library Address"
																			}
																		],
																		"id": 788,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4659:7:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 787,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4659:7:3",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 790,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4659:13:3",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 791,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "4659:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 792,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "4684:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4659:30:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a20696e73756666696369656e742062616c616e636520666f722063616c6c",
															"id": 794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4691:40:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															},
															"value": "Address: insufficient balance for call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_565f1a77334fc4792800921178c71e4521acffab18ff9e7885b49377ee80ab4c",
																"typeString": "literal_string \"Address: insufficient balance for call\""
															}
														],
														"id": 786,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4651:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 795,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4651:81:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 796,
												"nodeType": "ExpressionStatement",
												"src": "4651:81:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 799,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 775,
																	"src": "4761:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 798,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "4750:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4750:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 801,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4770:31:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															},
															"value": "Address: call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cc2e4e38850b7c0a3e942cfed89b71c77302df25bcb2ec297a0c4ff9ff6b90ad",
																"typeString": "literal_string \"Address: call to non-contract\""
															}
														],
														"id": 797,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4742:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4742:60:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 803,
												"nodeType": "ExpressionStatement",
												"src": "4742:60:3"
											},
											{
												"assignments": [
													805,
													807
												],
												"declarations": [
													{
														"constant": false,
														"id": 805,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 821,
														"src": "4873:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 804,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4873:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 807,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 821,
														"src": "4887:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 806,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4887:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 814,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 812,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 777,
															"src": "4942:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 808,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 775,
																"src": "4914:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 809,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "call",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "4914:11:3",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 811,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"argumentTypes": null,
																"id": 810,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 779,
																"src": "4934:5:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4914:27:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4914:33:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4872:75:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 816,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 805,
															"src": "4982:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 817,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 807,
															"src": "4991:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 818,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 781,
															"src": "5003:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 815,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "4964:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 819,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4964:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 785,
												"id": 820,
												"nodeType": "Return",
												"src": "4957:59:3"
											}
										]
									},
									"documentation": {
										"id": 773,
										"nodeType": "StructuredDocumentation",
										"src": "4258:237:3",
										"text": " @dev Same as {xref-Address-functionCallWithValue-address-bytes-uint256-}[`functionCallWithValue`], but\n with `errorMessage` as a fallback revert reason when `target` reverts.\n _Available since v3.1._"
									},
									"id": 822,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 775,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "4531:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 774,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4531:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 777,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "4547:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 776,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4547:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 779,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "4566:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 778,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4566:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 781,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "4581:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 780,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4581:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4530:78:3"
									},
									"returnParameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 822,
												"src": "4627:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 783,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4627:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4626:14:3"
									},
									"scope": 905,
									"src": "4500:523:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 838,
										"nodeType": "Block",
										"src": "5300:97:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 833,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 825,
															"src": "5336:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 834,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 827,
															"src": "5344:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a206c6f772d6c6576656c207374617469632063616c6c206661696c6564",
															"id": 835,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5350:39:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															},
															"value": "Address: low-level static call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_90ec82aa826a536a4cbfae44ecfa384680faa9a4b77344bce96aa761ad904df0",
																"typeString": "literal_string \"Address: low-level static call failed\""
															}
														],
														"id": 832,
														"name": "functionStaticCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															839,
															874
														],
														"referencedDeclaration": 874,
														"src": "5317:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,string memory) view returns (bytes memory)"
														}
													},
													"id": 836,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5317:73:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 831,
												"id": 837,
												"nodeType": "Return",
												"src": "5310:80:3"
											}
										]
									},
									"documentation": {
										"id": 823,
										"nodeType": "StructuredDocumentation",
										"src": "5029:166:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 839,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 825,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "5228:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 824,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5228:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 827,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "5244:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 826,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5244:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5227:35:3"
									},
									"returnParameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 830,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 839,
												"src": "5286:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5286:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5285:14:3"
									},
									"scope": 905,
									"src": "5200:197:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 873,
										"nodeType": "Block",
										"src": "5709:288:3",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 853,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 842,
																	"src": "5738:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 852,
																"name": "isContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 681,
																"src": "5727:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
																	"typeString": "function (address) view returns (bool)"
																}
															},
															"id": 854,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5727:18:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "416464726573733a207374617469632063616c6c20746f206e6f6e2d636f6e7472616374",
															"id": 855,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5747:38:3",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															},
															"value": "Address: static call to non-contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c79cc78e4f16ce3933a42b84c73868f93bb4a59c031a0acf576679de98c608a9",
																"typeString": "literal_string \"Address: static call to non-contract\""
															}
														],
														"id": 851,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "5719:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5719:67:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 857,
												"nodeType": "ExpressionStatement",
												"src": "5719:67:3"
											},
											{
												"assignments": [
													859,
													861
												],
												"declarations": [
													{
														"constant": false,
														"id": 859,
														"mutability": "mutable",
														"name": "success",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 873,
														"src": "5857:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 858,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5857:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"value": null,
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 861,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 873,
														"src": "5871:23:3",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 860,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5871:5:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 866,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 864,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 844,
															"src": "5916:4:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 862,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "5898:6:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 863,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "5898:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 865,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5898:23:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5856:65:3"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 868,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 859,
															"src": "5956:7:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 869,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 861,
															"src": "5965:10:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"id": 870,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 846,
															"src": "5977:12:3",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 867,
														"name": "_verifyCallResult",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "5938:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_bool_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (bool,bytes memory,string memory) pure returns (bytes memory)"
														}
													},
													"id": 871,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5938:52:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 850,
												"id": 872,
												"nodeType": "Return",
												"src": "5931:59:3"
											}
										]
									},
									"documentation": {
										"id": 840,
										"nodeType": "StructuredDocumentation",
										"src": "5403:173:3",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-string-}[`functionCall`],\n but performing a static call.\n _Available since v3.3._"
									},
									"id": 874,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 847,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 842,
												"mutability": "mutable",
												"name": "target",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "5609:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 841,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5609:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 844,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "5625:17:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 843,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5625:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "5644:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 845,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "5644:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5608:63:3"
									},
									"returnParameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 849,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 874,
												"src": "5695:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 848,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5695:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5694:14:3"
									},
									"scope": 905,
									"src": "5581:416:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "6132:596:3",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 885,
													"name": "success",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 876,
													"src": "6146:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 901,
													"nodeType": "Block",
													"src": "6203:519:3",
													"statements": [
														{
															"condition": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 892,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 889,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 878,
																		"src": "6287:10:3",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "6287:17:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 891,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6307:1:3",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "6287:21:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"falseBody": {
																"id": 899,
																"nodeType": "Block",
																"src": "6659:53:3",
																"statements": [
																	{
																		"expression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 896,
																					"name": "errorMessage",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 880,
																					"src": "6684:12:3",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 895,
																				"name": "revert",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [
																					-19,
																					-19
																				],
																				"referencedDeclaration": -19,
																				"src": "6677:6:3",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (string memory) pure"
																				}
																			},
																			"id": 897,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6677:20:3",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 898,
																		"nodeType": "ExpressionStatement",
																		"src": "6677:20:3"
																	}
																]
															},
															"id": 900,
															"nodeType": "IfStatement",
															"src": "6283:429:3",
															"trueBody": {
																"id": 894,
																"nodeType": "Block",
																"src": "6310:343:3",
																"statements": [
																	{
																		"AST": {
																			"nodeType": "YulBlock",
																			"src": "6494:145:3",
																			"statements": [
																				{
																					"nodeType": "YulVariableDeclaration",
																					"src": "6516:40:3",
																					"value": {
																						"arguments": [
																							{
																								"name": "returndata",
																								"nodeType": "YulIdentifier",
																								"src": "6545:10:3"
																							}
																						],
																						"functionName": {
																							"name": "mload",
																							"nodeType": "YulIdentifier",
																							"src": "6539:5:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6539:17:3"
																					},
																					"variables": [
																						{
																							"name": "returndata_size",
																							"nodeType": "YulTypedName",
																							"src": "6520:15:3",
																							"type": ""
																						}
																					]
																				},
																				{
																					"expression": {
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nodeType": "YulLiteral",
																										"src": "6588:2:3",
																										"type": "",
																										"value": "32"
																									},
																									{
																										"name": "returndata",
																										"nodeType": "YulIdentifier",
																										"src": "6592:10:3"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nodeType": "YulIdentifier",
																									"src": "6584:3:3"
																								},
																								"nodeType": "YulFunctionCall",
																								"src": "6584:19:3"
																							},
																							{
																								"name": "returndata_size",
																								"nodeType": "YulIdentifier",
																								"src": "6605:15:3"
																							}
																						],
																						"functionName": {
																							"name": "revert",
																							"nodeType": "YulIdentifier",
																							"src": "6577:6:3"
																						},
																						"nodeType": "YulFunctionCall",
																						"src": "6577:44:3"
																					},
																					"nodeType": "YulExpressionStatement",
																					"src": "6577:44:3"
																				}
																			]
																		},
																		"evmVersion": "istanbul",
																		"externalReferences": [
																			{
																				"declaration": 878,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6545:10:3",
																				"valueSize": 1
																			},
																			{
																				"declaration": 878,
																				"isOffset": false,
																				"isSlot": false,
																				"src": "6592:10:3",
																				"valueSize": 1
																			}
																		],
																		"id": 893,
																		"nodeType": "InlineAssembly",
																		"src": "6485:154:3"
																	}
																]
															}
														}
													]
												},
												"id": 902,
												"nodeType": "IfStatement",
												"src": "6142:580:3",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "6155:42:3",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 886,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 878,
																"src": "6176:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 884,
															"id": 887,
															"nodeType": "Return",
															"src": "6169:17:3"
														}
													]
												}
											}
										]
									},
									"documentation": null,
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_verifyCallResult",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 876,
												"mutability": "mutable",
												"name": "success",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "6030:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 875,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6030:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 878,
												"mutability": "mutable",
												"name": "returndata",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "6044:23:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 877,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6044:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 880,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "6069:26:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 879,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "6069:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6029:67:3"
									},
									"returnParameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 883,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 904,
												"src": "6118:12:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 882,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6118:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6117:14:3"
									},
									"scope": 905,
									"src": "6003:725:3",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 906,
							"src": "26:6704:3"
						}
					],
					"src": "0:6730:3"
				},
				"id": 3
			},
			"ROO_Repurchase/contracts/library/Context.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/Context.sol",
					"exportedSymbols": {
						"Context": [
							928
						]
					},
					"id": 929,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 907,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 928,
							"linearizedBaseContracts": [
								928
							],
							"name": "Context",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 915,
										"nodeType": "Block",
										"src": "128:34:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 912,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "145:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "145:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 911,
												"id": 914,
												"nodeType": "Return",
												"src": "138:17:4"
											}
										]
									},
									"documentation": null,
									"id": 916,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "77:2:4"
									},
									"returnParameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 916,
												"src": "111:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "111:15:4",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "110:17:4"
									},
									"scope": 928,
									"src": "58:104:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 926,
										"nodeType": "Block",
										"src": "233:165:4",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 921,
													"name": "this",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": -28,
													"src": "243:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_Context_$928",
														"typeString": "contract Context"
													}
												},
												"id": 922,
												"nodeType": "ExpressionStatement",
												"src": "243:4:4"
											},
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"id": 923,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": -15,
														"src": "383:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "383:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 920,
												"id": 925,
												"nodeType": "Return",
												"src": "376:15:4"
											}
										]
									},
									"documentation": null,
									"id": 927,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 917,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "185:2:4"
									},
									"returnParameters": {
										"id": 920,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 919,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 927,
												"src": "219:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 918,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "219:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "218:14:4"
									},
									"scope": 928,
									"src": "168:230:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 929,
							"src": "26:374:4"
						}
					],
					"src": "0:400:4"
				},
				"id": 4
			},
			"ROO_Repurchase/contracts/library/EnumerableSet.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/EnumerableSet.sol",
					"exportedSymbols": {
						"EnumerableSet": [
							1406
						]
					},
					"id": 1407,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1406,
							"linearizedBaseContracts": [
								1406
							],
							"name": "EnumerableSet",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EnumerableSet.Set",
									"id": 937,
									"members": [
										{
											"constant": false,
											"id": 932,
											"mutability": "mutable",
											"name": "_values",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 937,
											"src": "522:17:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
												"typeString": "bytes32[]"
											},
											"typeName": {
												"baseType": {
													"id": 930,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "522:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 931,
												"length": null,
												"nodeType": "ArrayTypeName",
												"src": "522:9:5",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
													"typeString": "bytes32[]"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 936,
											"mutability": "mutable",
											"name": "_indexes",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 937,
											"src": "673:37:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
												"typeString": "mapping(bytes32 => uint256)"
											},
											"typeName": {
												"id": 935,
												"keyType": {
													"id": 933,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "673:28:5",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
													"typeString": "mapping(bytes32 => uint256)"
												},
												"valueType": {
													"id": 934,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Set",
									"nodeType": "StructDefinition",
									"scope": 1406,
									"src": "468:249:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 977,
										"nodeType": "Block",
										"src": "956:335:5",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "970:22:5",
													"subExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 948,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 940,
																"src": "981:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															{
																"argumentTypes": null,
																"id": 949,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 942,
																"src": "986:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"id": 947,
															"name": "_contains",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1076,
															"src": "971:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
																"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
															}
														},
														"id": 950,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "971:21:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 975,
													"nodeType": "Block",
													"src": "1248:37:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 973,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1269:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 946,
															"id": 974,
															"nodeType": "Return",
															"src": "1262:12:5"
														}
													]
												},
												"id": 976,
												"nodeType": "IfStatement",
												"src": "966:319:5",
												"trueBody": {
													"id": 972,
													"nodeType": "Block",
													"src": "994:248:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 957,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "1025:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 952,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "1008:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 955,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 932,
																		"src": "1008:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 956,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "push",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1008:16:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypush_nonpayable$_t_bytes32_$returns$__$",
																		"typeString": "function (bytes32)"
																	}
																},
																"id": 958,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1008:23:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 959,
															"nodeType": "ExpressionStatement",
															"src": "1008:23:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 960,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "1166:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 963,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 936,
																		"src": "1166:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 964,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 962,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 942,
																		"src": "1179:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1166:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 965,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 940,
																			"src": "1188:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 966,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 932,
																		"src": "1188:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 967,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1188:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1166:40:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 969,
															"nodeType": "ExpressionStatement",
															"src": "1166:40:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1227:4:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 946,
															"id": 971,
															"nodeType": "Return",
															"src": "1220:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "723:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 978,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "901:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 939,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 937,
													"src": "901:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "918:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 941,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "918:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "900:32:5"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 978,
												"src": "950:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 944,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "950:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:6:5"
									},
									"scope": 1406,
									"src": "887:404:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1057,
										"nodeType": "Block",
										"src": "1531:1440:5",
										"statements": [
											{
												"assignments": [
													989
												],
												"declarations": [
													{
														"constant": false,
														"id": 989,
														"mutability": "mutable",
														"name": "valueIndex",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1057,
														"src": "1641:18:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 988,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1641:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 994,
												"initialValue": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 990,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 981,
															"src": "1662:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 991,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_indexes",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 936,
														"src": "1662:12:5",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
															"typeString": "mapping(bytes32 => uint256)"
														}
													},
													"id": 993,
													"indexExpression": {
														"argumentTypes": null,
														"id": 992,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1675:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1662:19:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1641:40:5"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 997,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 995,
														"name": "valueIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 989,
														"src": "1696:10:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 996,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1710:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1696:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1055,
													"nodeType": "Block",
													"src": "2928:37:5",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "66616c7365",
																"id": 1053,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2949:5:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 987,
															"id": 1054,
															"nodeType": "Return",
															"src": "2942:12:5"
														}
													]
												},
												"id": 1056,
												"nodeType": "IfStatement",
												"src": "1692:1273:5",
												"trueBody": {
													"id": 1052,
													"nodeType": "Block",
													"src": "1713:1209:5",
													"statements": [
														{
															"assignments": [
																999
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 999,
																	"mutability": "mutable",
																	"name": "toDeleteIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1052,
																	"src": "2053:21:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 998,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2053:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1003,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1002,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1000,
																	"name": "valueIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 989,
																	"src": "2077:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1001,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2090:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2077:14:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2053:38:5"
														},
														{
															"assignments": [
																1005
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1005,
																	"mutability": "mutable",
																	"name": "lastIndex",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1052,
																	"src": "2105:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 1004,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2105:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1011,
															"initialValue": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1010,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1006,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2125:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1007,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 932,
																		"src": "2125:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1008,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2125:18:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 1009,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2146:1:5",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "2125:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2105:42:5"
														},
														{
															"assignments": [
																1013
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 1013,
																	"mutability": "mutable",
																	"name": "lastvalue",
																	"nodeType": "VariableDeclaration",
																	"overrides": null,
																	"scope": 1052,
																	"src": "2387:17:5",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 1012,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "2387:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"value": null,
																	"visibility": "internal"
																}
															],
															"id": 1018,
															"initialValue": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1014,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2407:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1015,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "2407:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1017,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 1016,
																	"name": "lastIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "2419:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2407:22:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2387:42:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1025,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1019,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2521:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1022,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 932,
																		"src": "2521:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1023,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1021,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "2533:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2521:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"id": 1024,
																	"name": "lastvalue",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1013,
																	"src": "2550:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																"src": "2521:38:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"id": 1026,
															"nodeType": "ExpressionStatement",
															"src": "2521:38:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1027,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2625:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1030,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 936,
																		"src": "2625:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1031,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1029,
																		"name": "lastvalue",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1013,
																		"src": "2638:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2625:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"id": 1032,
																		"name": "toDeleteIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 999,
																		"src": "2651:13:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"argumentTypes": null,
																		"hexValue": "31",
																		"id": 1033,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2667:1:5",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "2651:17:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2625:43:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1036,
															"nodeType": "ExpressionStatement",
															"src": "2625:43:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1037,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2774:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1040,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_values",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 932,
																		"src": "2774:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																			"typeString": "bytes32[] storage ref"
																		}
																	},
																	"id": 1041,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "pop",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2774:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_arraypop_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1042,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2774:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1043,
															"nodeType": "ExpressionStatement",
															"src": "2774:17:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"id": 1048,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "delete",
																"prefix": true,
																"src": "2859:26:5",
																"subExpression": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1044,
																			"name": "set",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 981,
																			"src": "2866:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																				"typeString": "struct EnumerableSet.Set storage pointer"
																			}
																		},
																		"id": 1045,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "_indexes",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 936,
																		"src": "2866:12:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																			"typeString": "mapping(bytes32 => uint256)"
																		}
																	},
																	"id": 1047,
																	"indexExpression": {
																		"argumentTypes": null,
																		"id": 1046,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 983,
																		"src": "2879:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2866:19:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1049,
															"nodeType": "ExpressionStatement",
															"src": "2859:26:5"
														},
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "74727565",
																"id": 1050,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2907:4:5",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 987,
															"id": 1051,
															"nodeType": "Return",
															"src": "2900:11:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 979,
										"nodeType": "StructuredDocumentation",
										"src": "1297:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1058,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "1476:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 980,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 937,
													"src": "1476:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 983,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "1493:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 982,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1493:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1475:32:5"
									},
									"returnParameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1058,
												"src": "1525:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 985,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1525:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1524:6:5"
									},
									"scope": 1406,
									"src": "1459:1512:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1075,
										"nodeType": "Block",
										"src": "3131:48:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1073,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1068,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1061,
																"src": "3148:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																	"typeString": "struct EnumerableSet.Set storage pointer"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_indexes",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 936,
															"src": "3148:12:5",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_uint256_$",
																"typeString": "mapping(bytes32 => uint256)"
															}
														},
														"id": 1071,
														"indexExpression": {
															"argumentTypes": null,
															"id": 1070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1063,
															"src": "3161:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3148:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1072,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3171:1:5",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3148:24:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1067,
												"id": 1074,
												"nodeType": "Return",
												"src": "3141:31:5"
											}
										]
									},
									"documentation": {
										"id": 1059,
										"nodeType": "StructuredDocumentation",
										"src": "2977:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1076,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1064,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1061,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1076,
												"src": "3071:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1060,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 937,
													"src": "3071:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1063,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1076,
												"src": "3088:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1062,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3088:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3070:32:5"
									},
									"returnParameters": {
										"id": 1067,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1076,
												"src": "3125:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1065,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3125:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3124:6:5"
									},
									"scope": 1406,
									"src": "3052:127:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "3325:42:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"expression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1084,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "3342:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1085,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "3342:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1086,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"referencedDeclaration": null,
													"src": "3342:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1083,
												"id": 1087,
												"nodeType": "Return",
												"src": "3335:25:5"
											}
										]
									},
									"documentation": {
										"id": 1077,
										"nodeType": "StructuredDocumentation",
										"src": "3185:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "3277:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1078,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 937,
													"src": "3277:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3276:17:5"
									},
									"returnParameters": {
										"id": 1083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1082,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1089,
												"src": "3316:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1081,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3316:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3315:9:5"
									},
									"scope": 1406,
									"src": "3260:107:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1113,
										"nodeType": "Block",
										"src": "3775:125:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1104,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1100,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "3793:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																			"typeString": "struct EnumerableSet.Set storage pointer"
																		}
																	},
																	"id": 1101,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_values",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 932,
																	"src": "3793:11:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
																		"typeString": "bytes32[] storage ref"
																	}
																},
																"id": 1102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "length",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3793:18:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1103,
																"name": "index",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "3814:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3793:26:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "456e756d657261626c655365743a20696e646578206f7574206f6620626f756e6473",
															"id": 1105,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3821:36:5",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															},
															"value": "EnumerableSet: index out of bounds"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_045d6834e6193a687012a3ad777f612279e549b6945364d9d2324f48610d3cbb",
																"typeString": "literal_string \"EnumerableSet: index out of bounds\""
															}
														],
														"id": 1099,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3785:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1106,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3785:73:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1107,
												"nodeType": "ExpressionStatement",
												"src": "3785:73:5"
											},
											{
												"expression": {
													"argumentTypes": null,
													"baseExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1108,
															"name": "set",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1092,
															"src": "3875:3:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
																"typeString": "struct EnumerableSet.Set storage pointer"
															}
														},
														"id": 1109,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "_values",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 932,
														"src": "3875:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_bytes32_$dyn_storage",
															"typeString": "bytes32[] storage ref"
														}
													},
													"id": 1111,
													"indexExpression": {
														"argumentTypes": null,
														"id": 1110,
														"name": "index",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1094,
														"src": "3887:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3875:18:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1098,
												"id": 1112,
												"nodeType": "Return",
												"src": "3868:25:5"
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "3372:322:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "3712:15:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1091,
													"name": "Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 937,
													"src": "3712:3:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
														"typeString": "struct EnumerableSet.Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "3729:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3729:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3711:32:5"
									},
									"returnParameters": {
										"id": 1098,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1114,
												"src": "3766:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1096,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3766:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3765:9:5"
									},
									"scope": 1406,
									"src": "3699:201:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "private"
								},
								{
									"canonicalName": "EnumerableSet.Bytes32Set",
									"id": 1117,
									"members": [
										{
											"constant": false,
											"id": 1116,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1117,
											"src": "3953:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1115,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 937,
												"src": "3953:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Bytes32Set",
									"nodeType": "StructDefinition",
									"scope": 1406,
									"src": "3925:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "4216:47:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1128,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "4238:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1129,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "4238:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1130,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1122,
															"src": "4250:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1127,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "4233:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4233:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1126,
												"id": 1132,
												"nodeType": "Return",
												"src": "4226:30:5"
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "3976:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1134,
												"src": "4153:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1119,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1117,
													"src": "4153:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1134,
												"src": "4177:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1121,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4177:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4152:39:5"
									},
									"returnParameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1134,
												"src": "4210:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4210:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4209:6:5"
									},
									"scope": 1406,
									"src": "4140:123:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "4510:50:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1145,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1137,
																"src": "4535:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1146,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "4535:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1147,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1139,
															"src": "4547:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1144,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "4527:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4527:26:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1143,
												"id": 1149,
												"nodeType": "Return",
												"src": "4520:33:5"
											}
										]
									},
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "4269:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1151,
												"src": "4447:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1136,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1117,
													"src": "4447:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1151,
												"src": "4471:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1138,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4471:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4446:39:5"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1142,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1151,
												"src": "4504:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1141,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4504:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4503:6:5"
									},
									"scope": 1406,
									"src": "4431:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1167,
										"nodeType": "Block",
										"src": "4727:52:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1162,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1154,
																"src": "4754:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1163,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "4754:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1164,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1156,
															"src": "4766:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1161,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "4744:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4744:28:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1160,
												"id": 1166,
												"nodeType": "Return",
												"src": "4737:35:5"
											}
										]
									},
									"documentation": {
										"id": 1152,
										"nodeType": "StructuredDocumentation",
										"src": "4566:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1168,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1154,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1168,
												"src": "4659:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1153,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1117,
													"src": "4659:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1156,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1168,
												"src": "4683:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4658:39:5"
									},
									"returnParameters": {
										"id": 1160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1159,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1168,
												"src": "4721:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1158,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4721:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4720:6:5"
									},
									"scope": 1406,
									"src": "4641:138:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1181,
										"nodeType": "Block",
										"src": "4932:43:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1177,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1171,
																"src": "4957:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1178,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "4957:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1176,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "4949:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1179,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4949:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1175,
												"id": 1180,
												"nodeType": "Return",
												"src": "4942:26:5"
											}
										]
									},
									"documentation": {
										"id": 1169,
										"nodeType": "StructuredDocumentation",
										"src": "4785:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1182,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1171,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "4876:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1170,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1117,
													"src": "4876:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4875:24:5"
									},
									"returnParameters": {
										"id": 1175,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1174,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1182,
												"src": "4923:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4923:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4922:9:5"
									},
									"scope": 1406,
									"src": "4860:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1198,
										"nodeType": "Block",
										"src": "5390:46:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1193,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "5411:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
																	"typeString": "struct EnumerableSet.Bytes32Set storage pointer"
																}
															},
															"id": 1194,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1116,
															"src": "5411:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"id": 1195,
															"name": "index",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1187,
															"src": "5423:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1192,
														"name": "_at",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1114,
														"src": "5407:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
														}
													},
													"id": 1196,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5407:22:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 1191,
												"id": 1197,
												"nodeType": "Return",
												"src": "5400:29:5"
											}
										]
									},
									"documentation": {
										"id": 1183,
										"nodeType": "StructuredDocumentation",
										"src": "4980:322:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1199,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1185,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1199,
												"src": "5319:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
													"typeString": "struct EnumerableSet.Bytes32Set"
												},
												"typeName": {
													"contractScope": null,
													"id": 1184,
													"name": "Bytes32Set",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1117,
													"src": "5319:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Set_$1117_storage_ptr",
														"typeString": "struct EnumerableSet.Bytes32Set"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1187,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1199,
												"src": "5343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5318:39:5"
									},
									"returnParameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1199,
												"src": "5381:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1189,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5381:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5380:9:5"
									},
									"scope": 1406,
									"src": "5307:129:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.AddressSet",
									"id": 1202,
									"members": [
										{
											"constant": false,
											"id": 1201,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1202,
											"src": "5489:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1200,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 937,
												"src": "5489:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "AddressSet",
									"nodeType": "StructDefinition",
									"scope": 1406,
									"src": "5461:45:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1224,
										"nodeType": "Block",
										"src": "5752:65:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1213,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1205,
																"src": "5774:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1214,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "5774:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1219,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1207,
																			"src": "5802:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1218,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5794:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1217,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "5794:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5794:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1216,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5786:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1215,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "5786:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5786:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1212,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "5769:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5769:41:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1211,
												"id": 1223,
												"nodeType": "Return",
												"src": "5762:48:5"
											}
										]
									},
									"documentation": {
										"id": 1203,
										"nodeType": "StructuredDocumentation",
										"src": "5512:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1225,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "5689:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1204,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1202,
													"src": "5689:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1207,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "5713:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5713:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5688:39:5"
									},
									"returnParameters": {
										"id": 1211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1225,
												"src": "5746:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5746:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "5745:6:5"
									},
									"scope": 1406,
									"src": "5676:141:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1247,
										"nodeType": "Block",
										"src": "6064:68:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1236,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1228,
																"src": "6089:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1237,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "6089:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1242,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1230,
																			"src": "6117:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1241,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6109:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1240,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6109:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1243,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6109:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6101:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1238,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6101:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1244,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6101:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1235,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "6081:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1245,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6081:44:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1234,
												"id": 1246,
												"nodeType": "Return",
												"src": "6074:51:5"
											}
										]
									},
									"documentation": {
										"id": 1226,
										"nodeType": "StructuredDocumentation",
										"src": "5823:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1228,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1248,
												"src": "6001:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1227,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1202,
													"src": "6001:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1230,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1248,
												"src": "6025:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6000:39:5"
									},
									"returnParameters": {
										"id": 1234,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1233,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1248,
												"src": "6058:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1232,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6058:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6057:6:5"
									},
									"scope": 1406,
									"src": "5985:147:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "6299:70:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1259,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "6326:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1260,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "6326:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1265,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1253,
																			"src": "6354:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 1264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6346:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint256_$",
																			"typeString": "type(uint256)"
																		},
																		"typeName": {
																			"id": 1263,
																			"name": "uint256",
																			"nodeType": "ElementaryTypeName",
																			"src": "6346:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1266,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6346:14:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1262,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6338:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1261,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "6338:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1267,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6338:23:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1258,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "6316:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6316:46:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1257,
												"id": 1269,
												"nodeType": "Return",
												"src": "6309:53:5"
											}
										]
									},
									"documentation": {
										"id": 1249,
										"nodeType": "StructuredDocumentation",
										"src": "6138:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1251,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1271,
												"src": "6231:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1250,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1202,
													"src": "6231:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1271,
												"src": "6255:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1252,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6255:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6230:39:5"
									},
									"returnParameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1271,
												"src": "6293:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1255,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "6293:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6292:6:5"
									},
									"scope": 1406,
									"src": "6213:156:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "6522:43:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1280,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1274,
																"src": "6547:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
																	"typeString": "struct EnumerableSet.AddressSet storage pointer"
																}
															},
															"id": 1281,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1201,
															"src": "6547:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1279,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "6539:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6539:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1278,
												"id": 1283,
												"nodeType": "Return",
												"src": "6532:26:5"
											}
										]
									},
									"documentation": {
										"id": 1272,
										"nodeType": "StructuredDocumentation",
										"src": "6375:70:5",
										"text": " @dev Returns the number of values in the set. O(1)."
									},
									"id": 1285,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1285,
												"src": "6466:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1273,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1202,
													"src": "6466:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6465:24:5"
									},
									"returnParameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1285,
												"src": "6513:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6512:9:5"
									},
									"scope": 1406,
									"src": "6450:115:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "6980:64:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"expression": {
																				"argumentTypes": null,
																				"id": 1300,
																				"name": "set",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1288,
																				"src": "7017:3:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
																					"typeString": "struct EnumerableSet.AddressSet storage pointer"
																				}
																			},
																			"id": 1301,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "_inner",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1201,
																			"src": "7017:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Set_$937_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			}
																		},
																		{
																			"argumentTypes": null,
																			"id": 1302,
																			"name": "index",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1290,
																			"src": "7029:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_struct$_Set_$937_storage",
																				"typeString": "struct EnumerableSet.Set storage ref"
																			},
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1299,
																		"name": "_at",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1114,
																		"src": "7013:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																			"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																		}
																	},
																	"id": 1303,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7013:22:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"id": 1298,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7005:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1297,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "7005:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7005:31:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6997:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 1295,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "6997:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6997:40:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 1294,
												"id": 1306,
												"nodeType": "Return",
												"src": "6990:47:5"
											}
										]
									},
									"documentation": {
										"id": 1286,
										"nodeType": "StructuredDocumentation",
										"src": "6570:322:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1291,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1288,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1308,
												"src": "6909:22:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
													"typeString": "struct EnumerableSet.AddressSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1287,
													"name": "AddressSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1202,
													"src": "6909:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSet_$1202_storage_ptr",
														"typeString": "struct EnumerableSet.AddressSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1290,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1308,
												"src": "6933:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1289,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6933:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6908:39:5"
									},
									"returnParameters": {
										"id": 1294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1293,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1308,
												"src": "6971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "6970:9:5"
									},
									"scope": 1406,
									"src": "6897:147:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"canonicalName": "EnumerableSet.UintSet",
									"id": 1311,
									"members": [
										{
											"constant": false,
											"id": 1310,
											"mutability": "mutable",
											"name": "_inner",
											"nodeType": "VariableDeclaration",
											"overrides": null,
											"scope": 1311,
											"src": "7092:10:5",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
												"typeString": "struct EnumerableSet.Set"
											},
											"typeName": {
												"contractScope": null,
												"id": 1309,
												"name": "Set",
												"nodeType": "UserDefinedTypeName",
												"referencedDeclaration": 937,
												"src": "7092:3:5",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Set_$937_storage_ptr",
													"typeString": "struct EnumerableSet.Set"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "UintSet",
									"nodeType": "StructDefinition",
									"scope": 1406,
									"src": "7067:42:5",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1330,
										"nodeType": "Block",
										"src": "7352:56:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1322,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1314,
																"src": "7374:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1323,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1310,
															"src": "7374:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1326,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1316,
																	"src": "7394:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7386:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1324,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7386:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1327,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7386:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1321,
														"name": "_add",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 978,
														"src": "7369:4:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1328,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7369:32:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1320,
												"id": 1329,
												"nodeType": "Return",
												"src": "7362:39:5"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "7115:159:5",
										"text": " @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."
									},
									"id": 1331,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "7292:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1313,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1311,
													"src": "7292:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1316,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "7313:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7313:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7291:36:5"
									},
									"returnParameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1331,
												"src": "7346:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1318,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7346:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7345:6:5"
									},
									"scope": 1406,
									"src": "7279:129:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1350,
										"nodeType": "Block",
										"src": "7652:59:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1342,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1334,
																"src": "7677:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1343,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1310,
															"src": "7677:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1346,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1336,
																	"src": "7697:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1345,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7689:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1344,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7689:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1347,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7689:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1341,
														"name": "_remove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1058,
														"src": "7669:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"
														}
													},
													"id": 1348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7669:35:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1340,
												"id": 1349,
												"nodeType": "Return",
												"src": "7662:42:5"
											}
										]
									},
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "7414:157:5",
										"text": " @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."
									},
									"id": 1351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "remove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "7592:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1333,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1311,
													"src": "7592:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1336,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "7613:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7613:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7591:36:5"
									},
									"returnParameters": {
										"id": 1340,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1339,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1351,
												"src": "7646:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1338,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7646:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7645:6:5"
									},
									"scope": 1406,
									"src": "7576:135:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1370,
										"nodeType": "Block",
										"src": "7875:61:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1362,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1354,
																"src": "7902:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1363,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1310,
															"src": "7902:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1366,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1356,
																	"src": "7922:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1365,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7914:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 1364,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "7914:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1367,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7914:14:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1361,
														"name": "_contains",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1076,
														"src": "7892:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_bytes32_$returns$_t_bool_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"
														}
													},
													"id": 1368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7892:37:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1360,
												"id": 1369,
												"nodeType": "Return",
												"src": "7885:44:5"
											}
										]
									},
									"documentation": {
										"id": 1352,
										"nodeType": "StructuredDocumentation",
										"src": "7717:70:5",
										"text": " @dev Returns true if the value is in the set. O(1)."
									},
									"id": 1371,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "contains",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1354,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "7810:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1353,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1311,
													"src": "7810:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "7831:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7809:36:5"
									},
									"returnParameters": {
										"id": 1360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1359,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1371,
												"src": "7869:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1358,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7869:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "7868:6:5"
									},
									"scope": 1406,
									"src": "7792:144:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1384,
										"nodeType": "Block",
										"src": "8086:43:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 1380,
																"name": "set",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1374,
																"src": "8111:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
																	"typeString": "struct EnumerableSet.UintSet storage pointer"
																}
															},
															"id": 1381,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "_inner",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1310,
															"src": "8111:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Set_$937_storage",
																"typeString": "struct EnumerableSet.Set storage ref"
															}
														],
														"id": 1379,
														"name": "_length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1089,
														"src": "8103:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$returns$_t_uint256_$",
															"typeString": "function (struct EnumerableSet.Set storage pointer) view returns (uint256)"
														}
													},
													"id": 1382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8103:19:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1378,
												"id": 1383,
												"nodeType": "Return",
												"src": "8096:26:5"
											}
										]
									},
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "7942:70:5",
										"text": " @dev Returns the number of values on the set. O(1)."
									},
									"id": 1385,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "length",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1375,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "8033:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1373,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1311,
													"src": "8033:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8032:21:5"
									},
									"returnParameters": {
										"id": 1378,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1377,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1385,
												"src": "8077:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1376,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8077:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8076:9:5"
									},
									"scope": 1406,
									"src": "8017:112:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1404,
										"nodeType": "Block",
										"src": "8541:55:5",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"id": 1398,
																		"name": "set",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1388,
																		"src": "8570:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
																			"typeString": "struct EnumerableSet.UintSet storage pointer"
																		}
																	},
																	"id": 1399,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "_inner",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1310,
																	"src": "8570:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Set_$937_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1400,
																	"name": "index",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1390,
																	"src": "8582:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_struct$_Set_$937_storage",
																		"typeString": "struct EnumerableSet.Set storage ref"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1397,
																"name": "_at",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1114,
																"src": "8566:3:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_struct$_Set_$937_storage_ptr_$_t_uint256_$returns$_t_bytes32_$",
																	"typeString": "function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"
																}
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8566:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 1396,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8558:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 1395,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8558:7:5",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 1402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8558:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1394,
												"id": 1403,
												"nodeType": "Return",
												"src": "8551:38:5"
											}
										]
									},
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "8134:322:5",
										"text": " @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."
									},
									"id": 1405,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "at",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1391,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "set",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8473:19:5",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
													"typeString": "struct EnumerableSet.UintSet"
												},
												"typeName": {
													"contractScope": null,
													"id": 1387,
													"name": "UintSet",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 1311,
													"src": "8473:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_UintSet_$1311_storage_ptr",
														"typeString": "struct EnumerableSet.UintSet"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1390,
												"mutability": "mutable",
												"name": "index",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8494:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1389,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8494:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8472:36:5"
									},
									"returnParameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1405,
												"src": "8532:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1392,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8532:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "8531:9:5"
									},
									"scope": 1406,
									"src": "8461:135:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1407,
							"src": "0:8598:5"
						}
					],
					"src": "0:8598:5"
				},
				"id": 5
			},
			"ROO_Repurchase/contracts/library/Ownable.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/Ownable.sol",
					"exportedSymbols": {
						"Ownable": [
							1514
						]
					},
					"id": 1515,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1408,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:6"
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/Context.sol",
							"file": "./Context.sol",
							"id": 1409,
							"nodeType": "ImportDirective",
							"scope": 1515,
							"sourceUnit": 929,
							"src": "26:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 1410,
										"name": "Context",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 928,
										"src": "80:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Context_$928",
											"typeString": "contract Context"
										}
									},
									"id": 1411,
									"nodeType": "InheritanceSpecifier",
									"src": "80:7:6"
								}
							],
							"contractDependencies": [
								928
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1514,
							"linearizedBaseContracts": [
								1514,
								928
							],
							"name": "Ownable",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 1413,
									"mutability": "mutable",
									"name": "_owner",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 1514,
									"src": "94:22:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 1412,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "94:7:6",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 1419,
									"name": "OwnershipTransferred",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1419,
												"src": "150:29:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1414,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "150:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1417,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1419,
												"src": "181:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1416,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "149:57:6"
									},
									"src": "123:84:6"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "333:135:6",
										"statements": [
											{
												"assignments": [
													1424
												],
												"declarations": [
													{
														"constant": false,
														"id": 1424,
														"mutability": "mutable",
														"name": "msgSender",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1440,
														"src": "343:17:6",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1423,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "343:7:6",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1427,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1425,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 916,
														"src": "363:10:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
															"typeString": "function () view returns (address payable)"
														}
													},
													"id": 1426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "363:12:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "343:32:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1428,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "385:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1429,
														"name": "msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1424,
														"src": "394:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "385:18:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1431,
												"nodeType": "ExpressionStatement",
												"src": "385:18:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1435,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "447:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1434,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "439:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1433,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "439:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1436,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "439:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 1437,
															"name": "msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1424,
															"src": "451:9:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1432,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "418:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "418:43:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1439,
												"nodeType": "EmitStatement",
												"src": "413:48:6"
											}
										]
									},
									"documentation": {
										"id": 1420,
										"nodeType": "StructuredDocumentation",
										"src": "213:91:6",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 1441,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "321:2:6"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "333:0:6"
									},
									"scope": 1514,
									"src": "309:159:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1449,
										"nodeType": "Block",
										"src": "591:30:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 1447,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1413,
													"src": "608:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1446,
												"id": 1448,
												"nodeType": "Return",
												"src": "601:13:6"
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "474:65:6",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 1450,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "558:2:6"
									},
									"returnParameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1450,
												"src": "582:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "581:9:6"
									},
									"scope": 1514,
									"src": "544:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1462,
										"nodeType": "Block",
										"src": "730:95:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1457,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1454,
																"name": "_owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1413,
																"src": "748:6:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1455,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 916,
																	"src": "758:10:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_payable_$",
																		"typeString": "function () view returns (address payable)"
																	}
																},
																"id": 1456,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "758:12:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "748:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 1458,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "772:34:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 1453,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "740:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1459,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "740:67:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1460,
												"nodeType": "ExpressionStatement",
												"src": "740:67:6"
											},
											{
												"id": 1461,
												"nodeType": "PlaceholderStatement",
												"src": "817:1:6"
											}
										]
									},
									"documentation": {
										"id": 1451,
										"nodeType": "StructuredDocumentation",
										"src": "627:77:6",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 1463,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "727:2:6"
									},
									"src": "709:116:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1484,
										"nodeType": "Block",
										"src": "1221:91:6",
										"statements": [
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1470,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1257:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 1473,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1273:1:6",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1265:7:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1471,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1265:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1474,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1265:10:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														],
														"id": 1469,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "1236:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1236:40:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "EmitStatement",
												"src": "1231:45:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1482,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1477,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1286:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1303:1:6",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1295:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1478,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1295:7:6",
																"typeDescriptions": {
																	"typeIdentifier": null,
																	"typeString": null
																}
															}
														},
														"id": 1481,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1295:10:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "1286:19:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1483,
												"nodeType": "ExpressionStatement",
												"src": "1286:19:6"
											}
										]
									},
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "831:331:6",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 1485,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1467,
											"modifierName": {
												"argumentTypes": null,
												"id": 1466,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "1211:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1211:9:6"
										}
									],
									"name": "renounceOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1465,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1193:2:6"
									},
									"returnParameters": {
										"id": 1468,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:6"
									},
									"scope": 1514,
									"src": "1167:145:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1512,
										"nodeType": "Block",
										"src": "1531:170:6",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1494,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1488,
																"src": "1549:8:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"hexValue": "30",
																		"id": 1497,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1569:1:6",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1561:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1495,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1561:7:6",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 1498,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1561:10:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "1549:22:6",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 1500,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1573:40:6",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 1493,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1541:7:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1541:73:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "ExpressionStatement",
												"src": "1541:73:6"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1504,
															"name": "_owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1413,
															"src": "1650:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 1505,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1488,
															"src": "1658:8:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1503,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1419,
														"src": "1629:20:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1629:38:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1507,
												"nodeType": "EmitStatement",
												"src": "1624:43:6"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 1508,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1413,
														"src": "1677:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 1509,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1488,
														"src": "1686:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1677:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1511,
												"nodeType": "ExpressionStatement",
												"src": "1677:17:6"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "1318:138:6",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 1513,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 1491,
											"modifierName": {
												"argumentTypes": null,
												"id": 1490,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 1463,
												"src": "1521:9:6",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "1521:9:6"
										}
									],
									"name": "transferOwnership",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1488,
												"mutability": "mutable",
												"name": "newOwner",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1513,
												"src": "1488:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1487,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1488:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1487:18:6"
									},
									"returnParameters": {
										"id": 1492,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1531:0:6"
									},
									"scope": 1514,
									"src": "1461:240:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1515,
							"src": "51:1652:6"
						}
					],
					"src": "0:1703:6"
				},
				"id": 6
			},
			"ROO_Repurchase/contracts/library/SafeERC20.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/SafeERC20.sol",
					"exportedSymbols": {
						"SafeERC20": [
							1726
						]
					},
					"id": 1727,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1516,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:7"
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/SafeMath.sol",
							"file": "./SafeMath.sol",
							"id": 1517,
							"nodeType": "ImportDirective",
							"scope": 1727,
							"sourceUnit": 1922,
							"src": "26:24:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/library/Address.sol",
							"file": "./Address.sol",
							"id": 1518,
							"nodeType": "ImportDirective",
							"scope": 1727,
							"sourceUnit": 906,
							"src": "51:23:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "ROO_Repurchase/contracts/interface/IERC20.sol",
							"file": "../interface/IERC20.sol",
							"id": 1519,
							"nodeType": "ImportDirective",
							"scope": 1727,
							"sourceUnit": 663,
							"src": "75:33:7",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1726,
							"linearizedBaseContracts": [
								1726
							],
							"name": "SafeERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 1522,
									"libraryName": {
										"contractScope": null,
										"id": 1520,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 1921,
										"src": "140:8:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$1921",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "134:27:7",
									"typeName": {
										"id": 1521,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "153:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"id": 1525,
									"libraryName": {
										"contractScope": null,
										"id": 1523,
										"name": "Address",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 905,
										"src": "172:7:7",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_Address_$905",
											"typeString": "library Address"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "166:26:7",
									"typeName": {
										"id": 1524,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "184:7:7",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 1546,
										"nodeType": "Block",
										"src": "270:103:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1535,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1527,
															"src": "300:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1538,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1527,
																			"src": "330:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1539,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transfer",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 611,
																		"src": "330:14:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1540,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "330:23:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1541,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1529,
																	"src": "355:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1542,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1531,
																	"src": "359:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1536,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "307:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1537,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "307:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1543,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "307:58:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1534,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "280:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "280:86:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1545,
												"nodeType": "ExpressionStatement",
												"src": "280:86:7"
											}
										]
									},
									"documentation": null,
									"id": 1547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1527,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1547,
												"src": "220:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1526,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "220:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1529,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1547,
												"src": "234:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1528,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "234:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1547,
												"src": "246:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1530,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "246:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "219:41:7"
									},
									"returnParameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:0:7"
									},
									"scope": 1726,
									"src": "198:175:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "469:113:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1559,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1549,
															"src": "499:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1562,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1549,
																			"src": "529:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "transferFrom",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 643,
																		"src": "529:18:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "529:27:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1565,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1551,
																	"src": "558:4:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1566,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1553,
																	"src": "564:2:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1567,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1555,
																	"src": "568:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1560,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "506:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1561,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "506:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1568,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "506:68:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1558,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "479:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "479:96:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1570,
												"nodeType": "ExpressionStatement",
												"src": "479:96:7"
											}
										]
									},
									"documentation": null,
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1556,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1549,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "405:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1548,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "405:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1551,
												"mutability": "mutable",
												"name": "from",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "419:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "419:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1553,
												"mutability": "mutable",
												"name": "to",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "433:10:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1552,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "433:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1555,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1572,
												"src": "445:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1554,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "404:55:7"
									},
									"returnParameters": {
										"id": 1557,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "469:0:7"
									},
									"scope": 1726,
									"src": "379:203:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1614,
										"nodeType": "Block",
										"src": "918:537:7",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1585,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"id": 1583,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1579,
																			"src": "1207:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1584,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1216:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1207:10:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1586,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1206:12:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1596,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"id": 1591,
																							"name": "this",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": -28,
																							"src": "1247:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": "t_contract$_SafeERC20_$1726",
																								"typeString": "library SafeERC20"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_contract$_SafeERC20_$1726",
																								"typeString": "library SafeERC20"
																							}
																						],
																						"id": 1590,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "1239:7:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_address_$",
																							"typeString": "type(address)"
																						},
																						"typeName": {
																							"id": 1589,
																							"name": "address",
																							"nodeType": "ElementaryTypeName",
																							"src": "1239:7:7",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					},
																					"id": 1592,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "typeConversion",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "1239:13:7",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 1593,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1577,
																					"src": "1254:7:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 1587,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1575,
																					"src": "1223:5:7",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$662",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 1588,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "allowance",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 621,
																				"src": "1223:15:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																					"typeString": "function (address,address) view external returns (uint256)"
																				}
																			},
																			"id": 1594,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1223:39:7",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 1595,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1266:1:7",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1223:44:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	}
																],
																"id": 1597,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1222:46:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "1206:62:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f20746f206e6f6e2d7a65726f20616c6c6f77616e6365",
															"id": 1599,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1282:56:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															},
															"value": "SafeERC20: approve from non-zero to non-zero allowance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ef945ddb1bfdc0da870feb4560d868b047642b4ac7f2fb7f8b7c51cb4a411e25",
																"typeString": "literal_string \"SafeERC20: approve from non-zero to non-zero allowance\""
															}
														],
														"id": 1582,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1198:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1198:150:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "1198:150:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1603,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1575,
															"src": "1378:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1606,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1575,
																			"src": "1408:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "1408:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1608,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1408:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1609,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1577,
																	"src": "1432:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1610,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1579,
																	"src": "1441:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1604,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1385:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1605,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1385:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1385:62:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1602,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "1358:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1358:90:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "1358:90:7"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "588:249:7",
										"text": " @dev Deprecated. This function has issues similar to the ones found in\n {IERC20-approve}, and its usage is discouraged.\n Whenever possible, use {safeIncreaseAllowance} and\n {safeDecreaseAllowance} instead."
									},
									"id": 1615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeApprove",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1580,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1615,
												"src": "863:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1574,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "863:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1577,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1615,
												"src": "877:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1576,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1579,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1615,
												"src": "894:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1578,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "894:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "862:46:7"
									},
									"returnParameters": {
										"id": 1581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "918:0:7"
									},
									"scope": 1726,
									"src": "842:613:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1650,
										"nodeType": "Block",
										"src": "1547:197:7",
										"statements": [
											{
												"assignments": [
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1650,
														"src": "1557:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1624,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1557:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1637,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1635,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1621,
															"src": "1624:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1630,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1604:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1726",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1726",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1629,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1596:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1628,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1596:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1596:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1632,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "1611:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1626,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1617,
																	"src": "1580:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1580:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1633,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1580:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1634,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "add",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1754,
														"src": "1580:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1636,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1580:50:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1557:73:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1639,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "1660:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1642,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1617,
																			"src": "1690:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "1690:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1644,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1690:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1645,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1619,
																	"src": "1714:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1646,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1625,
																	"src": "1723:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1640,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "1667:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1641,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "1667:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1647,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1667:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1638,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "1640:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1640:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1649,
												"nodeType": "ExpressionStatement",
												"src": "1640:97:7"
											}
										]
									},
									"documentation": null,
									"id": 1651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1622,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "1492:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1616,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "1492:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "1506:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1618,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1506:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1621,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1651,
												"src": "1523:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1620,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1523:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1491:46:7"
									},
									"returnParameters": {
										"id": 1623,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1547:0:7"
									},
									"scope": 1726,
									"src": "1461:283:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1687,
										"nodeType": "Block",
										"src": "1836:242:7",
										"statements": [
											{
												"assignments": [
													1661
												],
												"declarations": [
													{
														"constant": false,
														"id": 1661,
														"mutability": "mutable",
														"name": "newAllowance",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1687,
														"src": "1846:20:7",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1660,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1846:7:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1674,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1671,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1657,
															"src": "1913:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1920:43:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															},
															"value": "SafeERC20: decreased allowance below zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_2c3af60974a758b7e72e108c9bf0943ecc9e4f2e8af4695da5f52fbf57a63d3a",
																"typeString": "literal_string \"SafeERC20: decreased allowance below zero\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 1666,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": -28,
																			"src": "1893:4:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$1726",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$1726",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 1665,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1885:7:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 1664,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1885:7:7",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1885:13:7",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1668,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "1900:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1662,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1653,
																	"src": "1869:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 1663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 621,
																"src": "1869:15:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 1669,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1869:39:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1670,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sub",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1799,
														"src": "1869:43:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$bound_to$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1869:95:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1846:118:7"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1676,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1653,
															"src": "1994:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"expression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 1679,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1653,
																			"src": "2024:5:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$662",
																				"typeString": "contract IERC20"
																			}
																		},
																		"id": 1680,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "approve",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 631,
																		"src": "2024:13:7",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																			"typeString": "function (address,uint256) external returns (bool)"
																		}
																	},
																	"id": 1681,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "selector",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "2024:22:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1682,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1655,
																	"src": "2048:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"argumentTypes": null,
																	"id": 1683,
																	"name": "newAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "2057:12:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes4",
																		"typeString": "bytes4"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 1677,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -1,
																	"src": "2001:3:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodeWithSelector",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "2001:22:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function (bytes4) pure returns (bytes memory)"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2001:69:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$662",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1675,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1725,
														"src": "1974:19:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$662_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 1685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1974:97:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1686,
												"nodeType": "ExpressionStatement",
												"src": "1974:97:7"
											}
										]
									},
									"documentation": null,
									"id": 1688,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1653,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1688,
												"src": "1781:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1652,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "1781:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1655,
												"mutability": "mutable",
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1688,
												"src": "1795:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1654,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1795:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1657,
												"mutability": "mutable",
												"name": "value",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1688,
												"src": "1812:13:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1812:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1780:46:7"
									},
									"returnParameters": {
										"id": 1659,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1836:0:7"
									},
									"scope": 1726,
									"src": "1750:328:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1724,
										"nodeType": "Block",
										"src": "2531:681:7",
										"statements": [
											{
												"assignments": [
													1697
												],
												"declarations": [
													{
														"constant": false,
														"id": 1697,
														"mutability": "mutable",
														"name": "returndata",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1724,
														"src": "2880:23:7",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1696,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "2880:5:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1706,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1703,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1693,
															"src": "2934:4:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564",
															"id": 1704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2940:34:7",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															},
															"value": "SafeERC20: low-level call failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_stringliteral_47fb62c2c272651d2f0f342bac006756b8ba07f21cc5cb87e0fbb9d50c0c585b",
																"typeString": "literal_string \"SafeERC20: low-level call failed\""
															}
														],
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 1700,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1691,
																	"src": "2914:5:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$662",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2906:7:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1698,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2906:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": null,
																		"typeString": null
																	}
																}
															},
															"id": 1701,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2906:14:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1702,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 752,
														"src": "2906:27:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$bound_to$_t_address_$",
															"typeString": "function (address,bytes memory,string memory) returns (bytes memory)"
														}
													},
													"id": 1705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2906:69:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2880:95:7"
											},
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 1707,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1697,
															"src": "2989:10:7",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "2989:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1709,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3009:1:7",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2989:21:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1723,
												"nodeType": "IfStatement",
												"src": "2985:221:7",
												"trueBody": {
													"id": 1722,
													"nodeType": "Block",
													"src": "3012:194:7",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 1714,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1697,
																				"src": "3129:10:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"argumentTypes": null,
																				"components": [
																					{
																						"argumentTypes": null,
																						"id": 1716,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "3142:4:7",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 1715,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "3142:4:7",
																							"typeDescriptions": {
																								"typeIdentifier": null,
																								"typeString": null
																							}
																						}
																					}
																				],
																				"id": 1717,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3141:6:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"argumentTypes": null,
																				"id": 1712,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": -1,
																				"src": "3118:3:7",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 1713,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": null,
																			"src": "3118:10:7",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3118:30:7",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"hexValue": "5361666545524332303a204552433230206f7065726174696f6e20646964206e6f742073756363656564",
																		"id": 1719,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3150:44:7",
																		"subdenomination": null,
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		},
																		"value": "SafeERC20: ERC20 operation did not succeed"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e11ad79d1e4a7f2e5f376964cb99e8e8f7904e3fc16a109f7a7ecb9aa7956dcd",
																			"typeString": "literal_string \"SafeERC20: ERC20 operation did not succeed\""
																		}
																	],
																	"id": 1711,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		-18,
																		-18
																	],
																	"referencedDeclaration": -18,
																	"src": "3110:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 1720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3110:85:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1721,
															"nodeType": "ExpressionStatement",
															"src": "3110:85:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "2084:372:7",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 1725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "token",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "2490:12:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$662",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"contractScope": null,
													"id": 1690,
													"name": "IERC20",
													"nodeType": "UserDefinedTypeName",
													"referencedDeclaration": 662,
													"src": "2490:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$662",
														"typeString": "contract IERC20"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "data",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1725,
												"src": "2504:17:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2504:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2489:33:7"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2531:0:7"
									},
									"scope": 1726,
									"src": "2461:751:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1727,
							"src": "110:3104:7"
						}
					],
					"src": "0:3214:7"
				},
				"id": 7
			},
			"ROO_Repurchase/contracts/library/SafeMath.sol": {
				"ast": {
					"absolutePath": "ROO_Repurchase/contracts/library/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							1921
						]
					},
					"id": 1922,
					"license": null,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1728,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".12"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 1921,
							"linearizedBaseContracts": [
								1921
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1753,
										"nodeType": "Block",
										"src": "345:109:8",
										"statements": [
											{
												"assignments": [
													1739
												],
												"declarations": [
													{
														"constant": false,
														"id": 1739,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1753,
														"src": "355:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1738,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "355:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1743,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1742,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1740,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1731,
														"src": "367:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1741,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1733,
														"src": "371:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "367:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "355:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1747,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1745,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1739,
																"src": "390:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1746,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1731,
																"src": "395:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "390:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206164646974696f6e206f766572666c6f77",
															"id": 1748,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "398:29:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															},
															"value": "SafeMath: addition overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_30cc447bcc13b3e22b45cef0dd9b0b514842d836dd9b6eb384e20dedfb47723a",
																"typeString": "literal_string \"SafeMath: addition overflow\""
															}
														],
														"id": 1744,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "382:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1749,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "382:46:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1750,
												"nodeType": "ExpressionStatement",
												"src": "382:46:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1751,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1739,
													"src": "446:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1737,
												"id": 1752,
												"nodeType": "Return",
												"src": "439:8:8"
											}
										]
									},
									"documentation": {
										"id": 1729,
										"nodeType": "StructuredDocumentation",
										"src": "49:224:8",
										"text": " @dev Returns the addition of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `+` operator.\n Requirements:\n - Addition cannot overflow."
									},
									"id": 1754,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1734,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1731,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1754,
												"src": "291:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1730,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "291:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1733,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1754,
												"src": "302:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1732,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "302:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "290:22:8"
									},
									"returnParameters": {
										"id": 1737,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1736,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1754,
												"src": "336:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1735,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "336:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "335:9:8"
									},
									"scope": 1921,
									"src": "278:176:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1770,
										"nodeType": "Block",
										"src": "792:67:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1765,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1757,
															"src": "813:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1766,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1759,
															"src": "816:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a207375627472616374696f6e206f766572666c6f77",
															"id": 1767,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "819:32:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															},
															"value": "SafeMath: subtraction overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_50b058e9b5320e58880d88223c9801cd9eecdcf90323d5c2318bc1b6b916e862",
																"typeString": "literal_string \"SafeMath: subtraction overflow\""
															}
														],
														"id": 1764,
														"name": "sub",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1771,
															1799
														],
														"referencedDeclaration": 1799,
														"src": "809:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "809:43:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1763,
												"id": 1769,
												"nodeType": "Return",
												"src": "802:50:8"
											}
										]
									},
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "460:260:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "738:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1756,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "738:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "749:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "737:22:8"
									},
									"returnParameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1771,
												"src": "783:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1761,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "783:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "782:9:8"
									},
									"scope": 1921,
									"src": "725:134:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1798,
										"nodeType": "Block",
										"src": "1245:92:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1786,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1784,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1776,
																"src": "1263:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1785,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1774,
																"src": "1268:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1263:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1787,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1778,
															"src": "1271:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1783,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1255:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1788,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1255:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1789,
												"nodeType": "ExpressionStatement",
												"src": "1255:29:8"
											},
											{
												"assignments": [
													1791
												],
												"declarations": [
													{
														"constant": false,
														"id": 1791,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1798,
														"src": "1294:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1790,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1294:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1795,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1794,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1792,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1774,
														"src": "1306:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1793,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1776,
														"src": "1310:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1306:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1294:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1796,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1791,
													"src": "1329:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1782,
												"id": 1797,
												"nodeType": "Return",
												"src": "1322:8:8"
											}
										]
									},
									"documentation": {
										"id": 1772,
										"nodeType": "StructuredDocumentation",
										"src": "865:280:8",
										"text": " @dev Returns the subtraction of two unsigned integers, reverting with custom message on\n overflow (when the result is negative).\n Counterpart to Solidity's `-` operator.\n Requirements:\n - Subtraction cannot overflow."
									},
									"id": 1799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1774,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1799,
												"src": "1163:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1163:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1799,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1775,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1778,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1799,
												"src": "1185:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1777,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1185:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1162:50:8"
									},
									"returnParameters": {
										"id": 1782,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1781,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1799,
												"src": "1236:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1780,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1236:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1235:9:8"
									},
									"scope": 1921,
									"src": "1150:187:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1833,
										"nodeType": "Block",
										"src": "1651:392:8",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1809,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "1883:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 1810,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1888:1:8",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1883:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 1815,
												"nodeType": "IfStatement",
												"src": "1879:45:8",
												"trueBody": {
													"id": 1814,
													"nodeType": "Block",
													"src": "1891:33:8",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1812,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1912:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1808,
															"id": 1813,
															"nodeType": "Return",
															"src": "1905:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1817
												],
												"declarations": [
													{
														"constant": false,
														"id": 1817,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1833,
														"src": "1934:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1816,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1934:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1821,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1818,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1802,
														"src": "1946:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1819,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1804,
														"src": "1950:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1946:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1934:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1827,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1825,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 1823,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1817,
																	"src": "1969:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 1824,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1802,
																	"src": "1973:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1969:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 1826,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1804,
																"src": "1978:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1969:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77",
															"id": 1828,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1981:35:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															},
															"value": "SafeMath: multiplication overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9113bb53c2876a3805b2c9242029423fc540a728243ce887ab24c82cf119fba3",
																"typeString": "literal_string \"SafeMath: multiplication overflow\""
															}
														],
														"id": 1822,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "1961:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1961:56:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1830,
												"nodeType": "ExpressionStatement",
												"src": "1961:56:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1831,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1817,
													"src": "2035:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1808,
												"id": 1832,
												"nodeType": "Return",
												"src": "2028:8:8"
											}
										]
									},
									"documentation": {
										"id": 1800,
										"nodeType": "StructuredDocumentation",
										"src": "1343:236:8",
										"text": " @dev Returns the multiplication of two unsigned integers, reverting on\n overflow.\n Counterpart to Solidity's `*` operator.\n Requirements:\n - Multiplication cannot overflow."
									},
									"id": 1834,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1834,
												"src": "1597:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1597:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1804,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1834,
												"src": "1608:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1803,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1608:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1596:22:8"
									},
									"returnParameters": {
										"id": 1808,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1807,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1834,
												"src": "1642:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1806,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1642:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1641:9:8"
									},
									"scope": 1921,
									"src": "1584:459:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1850,
										"nodeType": "Block",
										"src": "2572:63:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1845,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1837,
															"src": "2593:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1846,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1839,
															"src": "2596:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206469766973696f6e206279207a65726f",
															"id": 1847,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2599:28:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															},
															"value": "SafeMath: division by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_5b7cc70dda4dc2143e5adb63bd5d1f349504f461dbdfd9bc76fac1f8ca6d019f",
																"typeString": "literal_string \"SafeMath: division by zero\""
															}
														],
														"id": 1844,
														"name": "div",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1851,
															1879
														],
														"referencedDeclaration": 1879,
														"src": "2589:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2589:39:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1843,
												"id": 1849,
												"nodeType": "Return",
												"src": "2582:46:8"
											}
										]
									},
									"documentation": {
										"id": 1835,
										"nodeType": "StructuredDocumentation",
										"src": "2049:451:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1840,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1837,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "2518:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1836,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2518:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1839,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "2529:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1838,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2529:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2517:22:8"
									},
									"returnParameters": {
										"id": 1843,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1842,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1851,
												"src": "2563:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1841,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2563:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2562:9:8"
									},
									"scope": 1921,
									"src": "2505:130:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1878,
										"nodeType": "Block",
										"src": "3212:177:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1866,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1864,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1856,
																"src": "3230:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1865,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3234:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "3230:5:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1867,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1858,
															"src": "3237:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1863,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "3222:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1868,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3222:28:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1869,
												"nodeType": "ExpressionStatement",
												"src": "3222:28:8"
											},
											{
												"assignments": [
													1871
												],
												"declarations": [
													{
														"constant": false,
														"id": 1871,
														"mutability": "mutable",
														"name": "c",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 1878,
														"src": "3260:9:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1870,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3260:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 1875,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1872,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1854,
														"src": "3272:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1873,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1856,
														"src": "3276:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3272:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3260:17:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 1876,
													"name": "c",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1871,
													"src": "3381:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1862,
												"id": 1877,
												"nodeType": "Return",
												"src": "3374:8:8"
											}
										]
									},
									"documentation": {
										"id": 1852,
										"nodeType": "StructuredDocumentation",
										"src": "2641:471:8",
										"text": " @dev Returns the integer division of two unsigned integers. Reverts with custom message on\n division by zero. The result is rounded towards zero.\n Counterpart to Solidity's `/` operator. Note: this function uses a\n `revert` opcode (which leaves remaining gas untouched) while Solidity\n uses an invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1879,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "div",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1879,
												"src": "3130:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3130:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1856,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1879,
												"src": "3141:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1855,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3141:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1879,
												"src": "3152:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1857,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3152:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3129:50:8"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1861,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1879,
												"src": "3203:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1860,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3203:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3202:9:8"
									},
									"scope": 1921,
									"src": "3117:272:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1895,
										"nodeType": "Block",
										"src": "3907:61:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 1890,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1882,
															"src": "3928:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"id": 1891,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1884,
															"src": "3931:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "536166654d6174683a206d6f64756c6f206279207a65726f",
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3934:26:8",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															},
															"value": "SafeMath: modulo by zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_stringliteral_726e51f7b81fce0a68f5f214f445e275313b20b1633f08ce954ee39abf8d7832",
																"typeString": "literal_string \"SafeMath: modulo by zero\""
															}
														],
														"id": 1889,
														"name": "mod",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1896,
															1920
														],
														"referencedDeclaration": 1920,
														"src": "3924:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,string memory) pure returns (uint256)"
														}
													},
													"id": 1893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3924:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1888,
												"id": 1894,
												"nodeType": "Return",
												"src": "3917:44:8"
											}
										]
									},
									"documentation": {
										"id": 1880,
										"nodeType": "StructuredDocumentation",
										"src": "3395:440:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1896,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1885,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1882,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1896,
												"src": "3853:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1881,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3853:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1884,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1896,
												"src": "3864:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3852:22:8"
									},
									"returnParameters": {
										"id": 1888,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1896,
												"src": "3898:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1886,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3898:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3897:9:8"
									},
									"scope": 1921,
									"src": "3840:128:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "4534:68:8",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1911,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 1909,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1901,
																"src": "4552:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 1910,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4557:1:8",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4552:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"id": 1912,
															"name": "errorMessage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "4560:12:8",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 1908,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "4544:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1913,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4544:29:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1914,
												"nodeType": "ExpressionStatement",
												"src": "4544:29:8"
											},
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 1915,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1899,
														"src": "4590:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "%",
													"rightExpression": {
														"argumentTypes": null,
														"id": 1916,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1901,
														"src": "4594:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4590:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1907,
												"id": 1918,
												"nodeType": "Return",
												"src": "4583:12:8"
											}
										]
									},
									"documentation": {
										"id": 1897,
										"nodeType": "StructuredDocumentation",
										"src": "3974:460:8",
										"text": " @dev Returns the remainder of dividing two unsigned integers. (unsigned integer modulo),\n Reverts with custom message when dividing by zero.\n Counterpart to Solidity's `%` operator. This function uses a `revert`\n opcode (which leaves remaining gas untouched) while Solidity uses an\n invalid opcode to revert (consuming all remaining gas).\n Requirements:\n - The divisor cannot be zero."
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mod",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 1904,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1899,
												"mutability": "mutable",
												"name": "a",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1920,
												"src": "4452:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4452:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1901,
												"mutability": "mutable",
												"name": "b",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1920,
												"src": "4463:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1900,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4463:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1903,
												"mutability": "mutable",
												"name": "errorMessage",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1920,
												"src": "4474:26:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1902,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4474:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4451:50:8"
									},
									"returnParameters": {
										"id": 1907,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1906,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 1920,
												"src": "4525:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1905,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4525:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "4524:9:8"
									},
									"scope": 1921,
									"src": "4439:163:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1922,
							"src": "26:4578:8"
						}
					],
					"src": "0:4604:8"
				},
				"id": 8
			}
		}
	}
}